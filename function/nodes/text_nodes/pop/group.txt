#type: node
#context: pop
#internal: group
#icon: POP/group

#tags: groups

= Group =

"""Creates and/or combines named groups of particles."""

This operator creates groups of particles which you can then reference
in subsequent nodes, allowing you to apply node effects to a subset of
the entire particle system.

== Grouping rules ==

    Unlike other types (such as surfaces), particle grouping using the
    __Combine__ tab applies to _all active particles_, not just particles in
    the current branch of the operator hierarchy.

    [Image:../images/pop_group_branch.png]

    In the example network, initial_group defines an `initial` group
    (using the rule `$LIFE < .4`), and a `firsttrail` group using the
    __Combine__ tab to specify a second group containing any particles not
    in the initial group (using the rule `firsttrail` = !`initial`).

    Because this branch is eventually merged with another branch (at
    `collect1`), the Combine rule will apply to all particles in both
    branches, and so the `firsttrail` group will also include particles
    generated by `source2`, which is probably not what you wanted.

    To work around this, use two separate Group operators to create the
    two groups. In this example, the `initial_group` node creates the
    `initial` group with rule `$LIFE < .4` and the `initial_group2` node
    creates the `firsttrail` group with rule `$LIFE >= .4` (that is, the
    logical inverse of the rule for `initial`).


@parameters

Activation:
    #channels: /activate

    Turns the POP on and off.

== Create ==

    Source Group:
        Subset of points to act on.

    Group Name:
        Name of the new group to create from the points.

    Preserve Group:
        Append particles to the group if it already exists, instead
        of replacing its contents.

    === Rule ===
    
    Enable:
        Turning on this checkbox puts particles in the new group based on an expression.

    Predefined rules:
        Use the items in this menu to fill in the __Rule__ field
        with a predefined, commonly-used rule.

        NOTE:
            The list of predefined rules is specified by
            $HFS/houdini/POPGroupRules.

        Particle is dead:
            The particle is dead.
        Particle is stopped:
            The particle is flagged as being stopped. This is not
            the same as a particle having zero velocity.
        Particle just collided:
            The particle collided in this timestep. See the
            definition of the `$JUSTHIT` local variable.
        Particle has collided:
            An input particle has collided at any point in the
            past.
    Rule:
        An expression to evaluate for each input particle. If the
        expression evaluates to true (that is, non-zero) for a
        particle, the operator puts the particle in the new group.


    === Bounding ===
    Enable:
        Turning on this checkbox puts particles in the new group if they are inside a bounding volume.

    Bounding Type:
        The shape of the bounding volume.

        Bounding box:
            Group particles inside the box defined by the __Center__
            and __Size__ parameters below.
        Bounding sphere:
            Group particles inside the ovoid defined by the
            __Center__ and __Size__ parameters below.
        Bounding object:
            Group particles inside the volume of the surface
            specified in the __SOP__ parameter below. The behavior
            of this option is undefined if the surface is not
            closed.
        Bounding metaball:
            Group particles inside the volume of the metaball
            specified in the __SOP__ parameter below, at densities
            at or above the __Density minimum__ parameter below.
    Center:
        #channels: /tx /ty /tz

        Center of bounding box/sphere, when __Bounding type__ is
        "Bounding box" or "Bounding sphere".

    Size:
        #channels: /sizex /sizey /sizez

        Size of bounding box/sphere, when __Bounding type__ is
        "Bounding box" or "Bounding sphere".

    SOP:
        Sop containing geometry to use as bounding volume, when
        __Bounding type__ is "Bounding object" or "Bounding
        metaball".

    Ignore Transform Object:
        When this option is off, the geometry will automatically be
        transformed into the space of the object using this POP
        network. When this option is on, the geometry is not
        transformed.

    Density Minimum:
        #channels: /densitymin

        When __Bounding type__ is "Bounding metaball", only consider
        the point to be inside the metaball volume if the density is
        at or above this value.


    === Generator ===

    Enable:
        Turning on this checkbox puts particles created by certain generators in the new group.

    Generators:
        Group particles that were originally generated by these
        generators. This field can contain a space separated list of
        paths and/or patterns specifying generator nodes.


    === Random ===

    Enable:
        Turning on this checkbox sorts particles into groups.

    Number of Groups:
        #channels: /multi

        Number of groups to create. The groups will use the name in
        the __Group name__ parameter with a number on the end.

        For example, if the Group name is `Flock` and 5 groups are
        requested, the operator will create groups Flock1, Flock2,
        Flock3, Flock4 and Flock5 and the particles will be randomly
        distributed into the 5 new groups.

    Group Index:
        #channels: /multiindex

        Sets the group the particle will be placed into. Normally,
        particles are sorted into groups in order (the first
        particle goes into the first group, etc.). You can use a
        custom expression here to manually determine which group
        number each particle goes into. If the expression evaluates
        to a number greater than the value in __# of Groups__, the
        number wraps around (that is, the value of the expression is
        _modulo_ the number of groups).

        This has several advantages:

        * You can use some criterion other than particle order to
          sort the particles into groups, so particles dying will
          not shift the group membership of other particles.

        * You can use the [rand|Exp:rand] function to sort the
          particles into groups pseudo-randomly.


    === Instances ===

    Enable:
        Turning on this checkbox puts particles in the new group based on the value of their `instance` attributes.

    Instances:
        Groups particles whose `instance` attribute matches a value
        in this list.


== Combine ==

    The parameters on this tab let you create a group that is a
    combination of existing groups, based on boolean operators and
    combination methods.

    Enter the name of the new group to create in the left-hand field
    on the first row, and the name of the group from which to take
    particles in the right-hand field (or select
    [Smallicon:BUTTONS/not_equal] __Equals All But__ if you want to
    start with particles _not_ in the right-hand group).

    Once you set up the top row, additional rows become available to
    further combine and/or filter the contents of the new group.


    (top row):
        On the left-hand side, enter the name of the new,
        combined/filtered group to create.

        On the right-hand side, enter the name of the group from
        which to take particles (or select
        [Smallicon:BUTTONS/not_equal]__Equals All But__ if you want to
        start with particles _not_ in the right-hand group).

    (additional rows):
        On the right-hand side, enter the name of another group of
        particles you want to combine with or filter from the new
        group.

        Use the menu on the left side to choose how to
        combine/filter the groups.

        Select [Smallicon:BUTTONS/not_equal] __With All But__ if you want
        to use the complement of the specified group in the operation.


        None:
            Do not use this row.
        Union (Or):
            Add this group to the new group.
        Intersect (And):
            The new group will only contain particles that are also
            in this group.
        Exclusive Or:
            Add this group to the new group, but eliminate particles
            that are in both groups.
        Subtraction:
            The new group will not contain any particles that are
            also in this group.

== Select ==

    Select group in detail:
        Select the particles in the group specified by the __Select
        Group__ parameter below. This highlights the particles in
        the viewer.

    Select Group:
        Select this group, when __Select group in detail__ is on.

@locals
    [Include:standard_locals]


