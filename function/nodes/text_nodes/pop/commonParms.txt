#type: include

parameters id="commonMain">>
    Activation:
        #channels: /activate

        Turns this node on and off. The node is only active if this
        value is greater than 0. This is useful to control the effect of
        this node with an [expression|/expressions].
        
        Note that this is activation of the node as a whole. You can't
        use this parameter to deactivate the node for certain particles.

    Source Group:
        Only affect a group of points (created with, for example, a
        [Group POP|Node:pop/group] or [Collision
        POP|Node:pop/collision]) out of all the points in the input.

parameters id="geoSourceParms">>
    Geometry Source:
        Specifies the SOP to use.


        Use Parameter Values:
            Use the SOP specified in the __SOP__ parameter below.
        Use First Context Geometry:
            Use the SOP connected to the POP network's first input.
        Use Second Context Geometry:
            Use the SOP connected to the POP network's second input.
        Use Third Context Geometry:
            Use the SOP connected to the POP network's third input.
        Use Fourth Context Geometry:
            Use the SOP connected to the POP network's fourth input.
    SOP:
        Path to the SOP (when __Geometry source__ is set to __Use
        Parameter Values__).

    Ignore Transform Object:
        Particles normally use the object space of the SOP being cooked.
        Turn this parameter on to not transform into the space of the
        cooking SOP.

parameters id="massParms">>
    Ignore Mass:
        Ignores any  [mass attributes|/particles/forces#props]  on the input
        particles.

    Override Mass:
        Replaces any  [mass attributes|/particles/forces#props]  on the input
        particles with the value of the __Mass__ parameter below.

    Mass:
        #channels: /mass

        Mass to use when __Override mass__ is on.

parameters id="chargeParms">>
    Ignore Charge:
        Ignores any  [charge attributes|/particles/forces#props]  on the input
        particles.

    Override Charge:
        Replaces any  [charge attributes|/particles/forces#props]  on the
        input particles with the value of the __Charge__ parameter
        below.

    Charge:
        #channels: /charge

        Charge to use when __Override charge__ is on.

parameters id="noiseParms">>
    Seed:
        #channels: /seed

        Seed value for the random turbulence generator.

    Turbulence:
        #channels: /turb

        Number of iterations of fractal noise to add.

    Roughness:
        #channels: /rough

        Scale of noise added with each iteration.

    Exponent:
        #channels: /atten

        Noise attenuation exponent.

    Frequency:
        #channels: /freqx /freqy /freqz

        Spatial frequency of noise field in X, Y, and Z.

    Amplitude:
        #channels: /amp

        Maximum value of noise field.

    Offset:
        #channels: /offsetx /offsety /offsetz

        Amount to shift noise along X, Y, and Z axes.

    Noise Type:
        Method used to generate noise. __Hermite Interpolation__ and __Improved Hermite__ are fastest.


        Hermite Interpolation:
            Uses splines to interpolate values in the noise field.
        Sparse Convolution:
            More computationally expensive, but produces noise fields
            free of artifacts present in the Hermite methods.
        Improved Hermite:
            Uses a more linear interpolation than Hermite
            interpolation.
        Alligator Noise:
            Provides a very different look than the other noise types.

== Behavior == (hitBehaveParms)

    Behavior:
        Controls how the motion of particles is affected by the
        collision.


        Die on collision:
            Particle dies.
        Bounce on collision:
            Particle reflects off the surface.
        Stop on collision:
            Particle stops.
        Stick on collision:
            Particle stops and attaches itself to the surface.
        Slide on collision:
            Particle slides along the surface.
        Continue on course:
            Particle motion does not change.
    Collision Event:
        Generate this  [event|/particles/events]  when any point
        collides with the target geometry.

    Collision Group:
        The name of a group that will be created to contain the
        particles that collided. Subsequent operators can use this group
        to select the particles to affect.

    Preserve Group:
        If the group named in the __Collision group__ parameter exists,
        add the collision particles to the group instead of replacing
        its contents.

    Use as Hit ID:
        Controls what Houdini sets as the "hit ID" (the identity of the
        geometry the particle collided with). This lets you distinguish
        a particle that collided in this POP later.


        index:
            Sets the hit ID to the value of the __Hit index__ parameter
            below.
        index + primitive number:
            Sets the hit ID to the value of the __Hit index__ parameter
            below, _added to_ the primitive number of the primitive the
            particle collided with.

            Typically, you would use large steps for the __Hit index__
            parameter (hundreds or thousands) so you can still
            distinguish different collisions after the primitive number
            is added.

            For example, you could have two Collision POPs with hit
            index settings of 100 and 200. When the Collision POP adds
            the primitive number to the hit index, you would get hit IDs
            like 101, 102, 205, 210, and so on. As long as there is no
            primitive number larger than 99, you can still distinguish
            the different POPs.

    Hit Index:
        #channels: /hitindex

        Number to set in the "hit ID" of collision particles. This lets
        you distinguish different types of collisions.

    Oversampling:
        #channels: /sample

        Available when __Hint__ (on the __Collision__ tab) is
        __Translating Geometry__. Oversamples the motion of the geometry
        for more accurate collisions.
        
    Bounce Accuracy:
        #channels: /bounce

        Available when __Behavior__ is __Bounce on collision__. The
        maximum number of inter-frame bounces a particle will perform.

    Gain Tangent:
        #channels: /gaintan

        Energy loss tangent to collision.

    Gain Normal:
        #channels: /gainnml

        Energy loss normal to collision.

    Final Behavior:
        You can optionally choose a different behavior to use when a
        particle's impulse falls below a minimum. For example, if you
        want particles to stop instead of traveling imperceptibly
        slowly, set Final behavior to Stop and Minimum impulse to a low
        number.

    Minimum impulse:
        Available when __Final behavior__ is not __Bounce on collision__.
        The impulse value below which a particle will switch to using
        __Final behavior__ parameter.

parameters id="impulseConstantParms">>
    Impulse Activation:
        Turns _impulse_ emission on and off. Impulse emits the number of
        particles in the __Impulse birth rate__ below each time the
        operator cooks. A value of 0 means off, any other value means
        on.

    Impulse Birth Rate:
        Number of particles to emit each time the node cooks (when
        __Impulse activation__ is on).

    Const. Activation:
        Turns _constant_ emission on and off. Impulse emits the number
        of particles in the __Constant birth rate__ below each second. A
        value of 0 means off, any other value means on.

    Const. Birth Rate:
        Number of particles to emit per second (when __Constant
        activation__ is on).

parameters id="birthParms">>
    Birth Group:
        Name of a group to put the new points into.

    Preserve Group:
        If the __Birth group__ already exists, append the new particles
        to the group instead of replacing its contents.

    Life Expectancy:
        How long the particle will live (in seconds).

    Life Variance:
        Particles will live the number of seconds in __Life
        expectancy__, plus or minus this number of seconds. Use 0 for no
        variance.

parameters id="useAsOriginParms">>
    Use as Origin:
        Controls what Houdini sets as the value of a particle's origin
        attribute (the identity of the geometry that emitted the
        particle). This lets you distinguish the origin of a particle
        later.

        index:
            Set the origin to the value of the __Origin index__
            parameter below.
            
        index + geo num:
            Sets the hit ID to the value of the __Origin index__
            parameter, _added to_ the number of the geometry operator
            the particle was emitted from.

            Typically, you would use large steps for the __Origin
            index__ parameter (hundreds or thousands) so you can still
            distinguish different origins after the geometry number is
            added.

            For example, you could have two Source POPs with origin
            index settings of 100 and 200. When the [Source POP|Node:pop/source] adds the
            geometry number to the origin index, you would get origins
            like 101, 102, 205, 210, and so on. As long as there is no
            geometry number larger than 99, you can still distinguish
            the different POPs.

    Origin Index:
        Number to use as the origin of emitted particles. This lets you
        distinguish different origins.


== Attributes == (hitAttrParms)

    This tab contains checkboxes for the different attributes you can
    have set on particles when they collide with the target geometry.

    Add Num Hit Attribute:
        Number of times collided ($NUMHIT).

    Add Hit ID Attribute:
        Hit ID ($HITID).

    Add Hit Time Attribute:
        Time of collision ($HITTIME).

    Add Hit Position Attribute:
        Position in space where collision occurred ($HT{XYZ}).

    Add Hit Position UV Attribute:
        Parametric position on surface where collision occurred
        ($H{UV}).

    Add Hit Normal Attribute:
        Normal where collision occurred ($HN{XYZ}).

    Add Hit Diffuse Color Attribute:
        Diffuse color at collision ($HC{RGB}).

    Add Hit Texture UV Attribute:
        Texture uv at collision ($HMAP{UVW}).

    Add Distance Attribute:
        Distance from current position to collision ($DISTANCE).

parameters id="inheritVeloParms">>
    Initial Velocity:
        How to set the initial velocity of the emitted particles.


        Use inherited velocity:
            Use the inherited velocity attribute as the initial velocity
            of the particles.
        Add to inherited velocity:
            Add the inherited velocity attribute to the values from the
            __Velocity__ and __Variance__ parameters below.
        Set initial velocity:
            Set the initial value of the velocity attribute using the
            __Velocity__ and __Variance__ parameters below.

	NOTE:
	    Acceleration is inherited independently, if applicable.
    Inherit Velocity:
        (When __Initial velocity__ is __Use inherited velocity__ or __Add
        to inherited velocity__) The proportion of the inherited velocity
        to use. Use `1` for the full inherited value, `0.5` to half the
        inherited value, and so on.

parameters id="veloAttrParms">>
    Velocity:
        Set or add to velocity attribute.

    Variance:
        Variance to velocity set above. The node will add +/- from 0 to
        this number along each axis to the __Velocity__ parameter.

    Ellipsoid Distribution:
        By default, the variance (if any) is distributed in a box, the
        size of which is determined by the __Variance__ parameter. When
        this option is on, the variance is distributed in an ellipsoid
        instead.

parameters id="originAttrParms">>
    Add ID Attributes:
        Add ID and parent attributes to the created particles.

    Add Generation Attribute:
        Add the generation attribute to the created particles.

    Add Origin Attribute:
        Add the origin attribute to the created particles. The origin
        attribute holds an arbitrary number that can help you identify
        the source of a particle.

    Origin Index:
        Value for the origin attribute (when __Add origin attribute__ is
        on).

    Add Speed Attribute:
        Add speed attribute. In Houdini, the speed attribute is the
        length of the velocity vector.

