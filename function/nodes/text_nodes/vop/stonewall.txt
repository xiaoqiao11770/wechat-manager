#type: node
#context: vop
#internal: stonewall
#icon: VOP/stonewall

= Stone Wall =

"""Simulates an anti-aliased stone wall."""

This operator simulates an anti-aliased stone wall.

The number of stones is roughly determined by the Cell Frequency (`cfreq`)
input. The shape of each piece of stone is controlled by the Shape
Frequency (`sfreq`) and Shape Amplitude (`samp`) inputs. The higher either
value, the more distorted the shape.

The stone displacement consists of noisy bumps and cavities, whose
randomness is controlled by Bump Frequency (`bfreq`), Bump Amplitude
(`bamp`) and Bump Roughness (`brough`). The amount of cavity chipping is
determined by the Chip Amount (`chip`) input. By increasing the `chip`
amount, you can make the stone look more porous.

The "Pepper" inputs refer to the additional color noise that is
"peppered" over the stone surface to make it look more realistic. The
look of the pepper noise is controlled by three inputs: Pepper Amplitude
(`pamp`), Pepper Roughness (`prough`), and Bump Frequency (`bfreq`). The
Pepper Color (`peppercolor`) specifies its color.

Finally, the grooves between the stones come with size (`gwidth`),
softness (`gsoft`) and grout (`groutcolor`, `gfreq`, `gamp`) controls.

If the Position (`P`), Normal (`N`) and texture coordinate (`s` `t`) inputs are
not connected, the global variables by the same names will be used
instead. Typically, you will use [Rest Position|Node:vop/restpos] or [UV Space Change|Node:vop/uvspacechg] as
inputs for `P`, and Shading Layer Parameter as the input for `s` and
`t`. You will not touch `N` unless you want to apply additional
displacement to the stone wall using an operator such as [Bump Map|Node:vop/bumpmap] or [Furrows|Node:vop/furrows]. If you need to access the global variables directly, they are
available from the [Global Variables|Node:vop/global] operator.



@related
    - [Node:vop/bricks]
    - [Node:vop/bumpmap]
    - [Node:vop/global]
    - [Node:vop/restpos]
    - [Node:vop/stone]

