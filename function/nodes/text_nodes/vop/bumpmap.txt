#type: node
#context: vop
#internal: bumpmap
#icon: VOP/bumpmap

= Bump Map =

"""Computes a filtered sample of the texture map specified and returns
an RGB color as..."""

This operator computes a filtered sample of the texture map specified
and returns an RGB color as well as the displaced position, displaced
normal, and displacement amount.

This operator shares most of its parameters with the [Texture|Node:vop/texture] operator.
Please see the Texture help for details. The only additional parameter
is Height, which determines the depth of the displacement.

With no texture coordinates given, the values of the global s and t
variables are used to index the texture. If both derivative inputs (ds
and dt) are connected, s and t will represent the center of a square
whose bottom-left and upper-right corners are (s-ds,t-dt) and (s+ds,
t+dt) respectively. The input normal (`nN`) should be normalized if
explicitly connected. Usually, you will not need to touch `nN` unless
you want to apply an additional displacement using an operator such as
[Bump Noise|Node:vop/bumpnoise].

Typically, this operator will be used in a displacement shader, with
both displacement outputs piped into the corresponding inputs of the
[Output Variables|Node:vop/output] operator. Alternatively, it can appear in a surface shader, in
which case the displaced normal would be normalized and then connected
to the `nN` input of the [Lighting Model|Node:vop/lighting] operator. The "color" output
would go into the diffuse (`diff`) input of the same operator.

@related

- [Node:vop/bumpnoise]
- [Node:vop/displacenml]
- [Node:vop/texture]
- [Node:vop/lighting]

