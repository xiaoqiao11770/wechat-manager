= Volume Model =

#type: node
#context: vop
#internal: volumemodel

"""A shading model for volume rendering."""

== Overview ==

This node manages the computation of opacity and lighting for volume shading of isotropic and Henyey-Greenstein reflection models. For a simple and easy volume shader, create a volume model VOP and promote the first density parameter to allow the geometry density attribute to contribute to shading.

For more information on building a material shader with VOPs, see [creating materials|Node:shop/vopmaterial].

@parameters

Signature:
    #id: signature

    Controls whether the density scale is specified as a single float or as a 3-component color.
    
Density:
    #id: density

    Specifies the density.  Normally this input should be bound to the `density` attribute by ((MMB)) clicking the input and selecting __Promote Parameter__.

Density Scale:
    #id: densityscale

    Specifies a scale on the density value.  While the `density` input is normally bound to geometry, this parameter can be promoted to modify the density used for shading.
    
Shadow Density Multiplier:
    #id: shadowscale

    Specifies a scale on the density value used for shadow rays.  You can only decrease the density  for shadows to allow more light to propagate through the volume than would happen physically.

Scattering Phase:
    #id: phase

    Specifies the Henyey-Greenstein phase.  A value of 0 results in isotropic scattering.

Smoke Intensity:
    #id: smoke_int

    A scale factor to control the overall reflectivity of the volume.

Smoke Color:
    #id: smoke_clr

    The color of the light reflected from the smoke.

Emission Intensity:
    #id: emit_int

    A scale factor to control the overall emission from the volume.

Emission Color:
    #id: emit_clr

    The color of emitted light.

@related

- [Node:vop/surfacemodel]




