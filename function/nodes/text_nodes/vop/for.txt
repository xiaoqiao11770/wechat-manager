#type: node
#context: vop
#internal: for
#icon: VOP/for

= For Loop =

"""Runs the VOP nodes inside its subnetwork until a given condition is true."""

This operator contains other VOP operators. The code for the contained
operators is executed repeatedly in a loop until the specified condition
is met.

Use this operator to repeat the same sequence of code many times. Be
careful when using this operator to ensure that the condition will
eventually be met. Otherwise an endless loop can result. Such endless
loops can be interrupted within Houdini, but can result in renders that
never finish.

Any value that you wish to modify inside the For Loop operator must be
provided as an input. The outputs of the For Loop operator will contain
the modified versions of the inputs once the loop exits. The actual
values wired into the For Loop operator inputs are never modified, and
so can be connected to other operators in the network, but remember that
the values from these operators will always be the values unmodified by
the For Loop operator.

The looping of this operator is always controlled by a simple counter.
The [While Loop VOP|Node:vop/while] provides a more flexible construct that can be used to
exit based on any condition, as opposed to using a simple counter.

All connected inputs mimic the properties of the output wired into them.
They adopt the same help label and name as the output connected to them.
If multiple outputs with the same name are connected, the names of the
inputs are automatically incremented to make them unique.

The list of outputs depends on the inputs connected to the [Subnet Output|Node:vop/suboutput]
operator contained in this operator. The data type and name of each
output will match the corresponding input of the [Subnet Output|Node:vop/suboutput]
operator.

TIP:
    You can use the `_i` value on the subinput (`Initial Value` when
    __Show Full Input and Output Names on VOP Nodes__ is enabled in the
    [main preferences|/ref/windows/mainprefs#net]) to access the loop iteration
    variable.

@parameters

Signature:
    Specifies whether to use a Float or Integer type counter.
Test:
    This sets the type of comparison to use between the Initial
    Value and the End Value to determine if it is time to exit the
    loop.
Integer/Float Initial Value:
    This is the initial value given to the counter.
Integer/Float End Value:
    The loop exits when the counter is compared to this value and
    meets the criteria set in the Test parameter.
Integer/Float Step Size:
    After each loop, the counter value is increased by the Step
    Value. This number can be negative to have a decreasing counter
    value, but remember to set the Test parameter appropriately.
    
@inputs

Next Input:
    Up to 64 inputs can be connected here.

@related

- [Node:vop/compare]
- [Node:vop/forpoints]
- [Node:vop/illuminance]
- [Node:vop/subnet]
- [Node:vop/subinput]
- [Node:vop/suboutput]
- [Node:vop/while]

