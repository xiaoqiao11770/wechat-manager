#type: node
#context: vop
#internal: bind
#icon: VOP/bind

= Bind =

"""Represents an attribute bound to VEX."""

The Bind node represents the binding of the input geometry to the
vex function.  For example, if you bind `force` you can pick up the
attribute called `force` from your input geometry.

NOTE:
	If you wish to make a variable mapping, adjust the default value, or change the type info, use the [Add Attribute VOP|Node:vop/addattrib].

@parameters
    
Name:
    The name of the new parameter, both in the VEX function
    declaration, the definition of any OP type that uses the VOPNET,
    and the VOP tile's output. If a parameter by this name already
    exists, this operator will reference it and will disable most of
    of its own fields, such as the __Parameter Type__ and __Parameter
    Label__.
    
    The name must not be a [reserved keyword|/vex/lang#reserved].

Type:
    Specifies the VEX data type of the new parameter. It can also
    specify how the parameter should be represented in an OP dialog.
    For example, a VEX vector can be viewed as 3 float values or as
    a color value.

Override Type with Input:
    If the input is wired up, it is used to determine the type
    rather than the type menu.

Default Values:
    Depending on the parameter type selected, it represents the
    default value of the parameter in the VEX function and in the OP
    type that uses this VOP network.
    
Use This Node to Set Parameter Attributes:
    When several Parameter and Bind VOPs have the same __Parameter Name__, only
    one of the nodes is used to control the attributes of the
    parameter. Houdini decides which node to use for this by
    searching all the nodes according to the user defined order,
    then traversing inside subnets. If none of them have this
    parameter turned on, the first one found is used to set the
    parameter attributes. If one or more do have this option turned
    on, the first one with this option is used, even if another node
    (with this option turned off) is found first.
    
Use Input Value If Parameter Not Bound:
    If true, the VEX function parameter is checked to see if it is
    bound to an attribute in the current VEX context (e.g. point
    color). If not bound, the input value is is assigned to the VEX
    parameter. In a Surface VOP context, a VEX parameter is bound if
    the geometry being shaded has an attribute with the VEX
    parameter name.
    
Export:
    Specifies whether the new attribute can be exported to other
    contexts (written to as well as read from). If set to __Always__ or
    __When Input is Connected__, this operator gets an input.  The value
    wired into this input is then assigned to the exported parameter.
    In a Surface network, exported parameters can be used to create
    deep rasters. In SOP networks, the exported parameters
    create new geometry attributes.

    Never:
        The binding will not be exported.
    Always:
        The binding will be exported.
    When Input is Connected:
        The binding will only be exported if the node's input is
        ultimately connected to another VOP.

Export in Context:
    The context or contexts that the parameter is exported to.  Use whitespace
    characters as separators when specifying multiple contexts.
    
@inputs

Unbound or Export Value:
    The value assigned to the new parameter if the __Export
    Parameter__ toggle is checked or if the parameter is not bound
    when __Use Input Value If Parameter Not Bound__ is checked.

@outputs

Parameter:
    The value of this VEX function parameter.
    
Is Parameter Bound:
    True is the new parameter is bound to an attribute.

@related
    - [Node:vop/constant]
    - [Node:vop/parameter]
    - [Node:vop/global]
    - [Node:vop/output]
    - [Node:vop/shadinglayer]

