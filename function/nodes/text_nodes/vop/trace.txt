
#type: node
#context: vop
#internal: trace

= Trace =

"""Uses the vex gather function to send a ray and return with the reflected or refracted colors."""

@inputs

Position:
    This is the origin of the ray, typically the surface point
    being shaded, `P`.

Normal:
    This is the surface normal. It should be normalized, if explicitly connected as an input. Implicitly, the normalized global variable, `N`, is used. Frontface should not be used on normals with the trace vop.

Ray Type:
    The type of rays to send out,_reflect_ or _refract_. 
    Mantra will use one of three different hard limits for 
    ray bounce determination based on this value.

Trace Intensity: 
    This should be multiplied times either the reflection intensity, 
    `Kr` or the transmission intensity, `Kt`, (depending on the ray 
    type) result from the _Fresnel_ vop. This gives the user some 
    additional control to dim or brighten the resultant trace color. 

Trace Vector:
    This is the initial direction for the ray to follow . 
    Usually this vector, like _Kt_ above, is either the reflection
    vector, `R`, or the transmission vector, `T`, (depending on the ray type)
    result from the _Fresnel_ vop. The reflection ray can be derived
    from <pre>dir = reflect(nI,nN)</pre> and the incident vector, `I`,
    can be substitued for the transmission ray if _eta_ is not a factor.

Trace Tint:
    A color used to tint the resultant trace color. 

Environment Map:
	The color from this environment map is returned if the ray does not hit anything. Without a map here, the _Background Color_, below, is returned when the ray misses. 

    It is recommended to have some map in this slot. The background image as a texture is a good choice to start.

Background Color:
	This color is returned when the ray does not hit anything and there is no
	environment map specified.

Ray Bias:
	This is typically a small number used to help solve self-intersection issues.

Jitter Amount:
	This is a value between 0, no jitter and 1, maximum jitter. 
	It controls how randomly the _samples_ are distributed.

Samples:
    The number of rays to send. The more ray sent, the better the quality, the slower the render.

Cone Angle:
	The rays are distributed over a cone defined by this angle (in degrees). The default is 0, no blur.

Attenuation Density:
    Attenuation distance.

Attenuation Color:
    Attenuation color

@outputs

color:
    The trace color times _Kt_ and the _Tint Color_. 

bsdf:
    The PBR trace calculation times _Kt_ and the _Tint Color_.
