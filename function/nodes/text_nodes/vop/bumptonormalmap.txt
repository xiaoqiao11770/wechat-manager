#type: node
#context: vop
#internal: bumptonormalmap

= Bump To Normal Map =

"""Compute a tangent-space normal map from a bump map"""

This VOP will compute a tangent-space normal map from an input bump map.
The normal map is computed using the gradient of the bump map. In this sense
the effect is not based on geometry, but rather the content of the bump map.

@inputs

Map:
    #id: map
    Bump map to convert. This should be a greyscale texture map describing the height of bumps on the surface.

Output Normal Space:
    #id: onspace
    Determines the coordinate space of the output normal. `0 to 1` matches the output of packages that encode normals using 8-bit images. `-1 to 1` uses natural coordinates.

Flip X:
    #id: flipX
    Toggle flipping of the X axis. Various packages may expect normal maps in different spaces. The `flipX` and `flipY` parameters allow you to match these various spaces.

Flip Y:
    #id: flipY
    Toggle flipping of the Y axis. Various packages may expect normal maps in different spaces. The `flipX` and `flipY` parameters allow you to match these various spaces.

Height Scale:
    #id: heightScale
    Determines the height of the resulting normal. Unlike bump maps, normal maps must encode the bumped normal directly. Adjust this parameter to control the height of the bump effect.

S Coordinate:
    #id: s
    Coordinate describing the first coordinate of the UV basis. If not connected this defaults to the `s` global variable.

T Coordinate:
    #id: t
    Coordinate describing the second coordinate of the UV basis. If not connected this defaults to the `t` global variable.

@outputs

Output Normal:
    #id: No
    Computed tangent-space normal.

@related

- [Node:vop/bumpmap]
