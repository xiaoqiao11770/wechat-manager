#type: node
#context: vop
#internal: suboutput
#icon: VOP/suboutput

= Subnet Output =

"""Allows the connection of operators inside a subnet to operators
outside the subnet."""

This operator allows the connection of operators inside a subnet to
operators outside the subnet. This operator can only be created inside a
subnet type operator such as: [If|Node:vop/if], [Illuminance|Node:vop/illuminance], [Subnet|Node:vop/subnet], and [While|Node:vop/while].

Like the [Output Variables|Node:vop/output] operator, one and only one of these operators
can exist inside each subnet. This operator should not be deleted without
deleting the containing subnet. It is also not possible to add a second
Subnet Output operator. Also like the [Output Variables|Node:vop/output] operator, this
operator drives the VEX code generation within a subnet. Only operators
connected directly or indirectly to it will generate any code within the
subnet block. For While operators, it is important to always have some
value connected to the first input of this operator (which will
correspond to the Condition Value of the [While|Node:vop/while] operator). If no value is
connected to this input, the Condition Value will never change, and the
While loop will continue forever.

For every operator connected to an input of this operator, the
containing subnet operator will have an output. Connecting an operator
to this subnet output is the same as connecting the operator to the
corresponding input of this operator.

@parameters
    Input Name/Label:
        For each input connected to this operator, excluding those
        inputs that correspond to inputs of the containing subnet, you
        can specify the name and label for the input. The name and label
        are also used by the outputs of the containing subnet. To change
        the name or label for an input, enter the new value directly in
        the table presented. If an empty value is specified in the
        table, the name and label will be copied from the operator
        connected to each input.
@inputs
    Next Input:
        Up to 64 inputs can be connected here. Each time an input is
        connected, a new input slot is added. This also results in a new
        output being created on the containing subnet operator.

        For every input connected to the subnet containing this
        operator, this operator will have an input. This input will be
        the same name as the corresponding subnet input, with the prefix
        "sub" added to it. Connections made to the Next Input input of
        this operator will always appear after the connections
        corresponding to the containing subnet inputs.

@related
    - [Node:vop/for]
    - [Node:vop/if]
    - [Node:vop/illuminance]
    - [Node:vop/output]
    - [Node:vop/subnet]
    - [Node:vop/subinput]
    - [Node:vop/while]

