#type: node
#context: vop
#internal: occlusion
#icon: VOP/occlusion

= Occlusion =

"""Computes ambient occlusion at the point P with the normal N."""

This operator computes ambient occlusion at the point `P` with the normal
`N`. Just as in the [Irradiance|Node:vop/irradiance] operator, the hemisphere is sampled.
However, unlike [Irradiance|Node:vop/irradiance], Occlusion ensures that surfaces which are
intersected during the hemisphere sampling are not shaded.

For this function to work properly, either a constant background color
(`bgcolor`) or an environment map (`envmap`) must be specified. Most likely,
it will be necessary to specify a transform space (`envobj`) for the
environment map evaluations. Also, if an environment map is specified,
it is possible to tint the resulting color (`tint`).

Other parameters include the Bias (`bias`), which gives control over
self-intersections, and Number Of Samples (`samples`), which specifies the
amount of samples should be sent out to filter rays.

If the position (`P`) and normal vector (`N`) are not connected, the global
variables by the same names will be used instead. If the maximum ray
distance (`maxdist`) is not connected, the rays will be allowed to travel
to infinity.

The __Object Scope__ parameter is a list of object names to occlude, and the __Object Selection__ parameter is a list of categories to occlude.

See [how to create an environment/reflection map|/render/envmaps].

NOTE:
    The `occlusion()` operation does not accept a per-point maximum distance. This value needs to be a constant.

@related
    - [Node:vop/irradiance]

