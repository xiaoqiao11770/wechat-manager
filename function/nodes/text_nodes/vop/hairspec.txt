#type: node
#context: vop
#internal: hairspec

= Hair Specular =

"""Generates a color specifically for curves (hairs) using a specular lighting model calculation."""

This VOP uses the hair specular lighting model calculation to generate a color for curves (hairs). Typically, adding this lighting model into the network, is the last thing done before connecting the resulting color to the output `Cf` input.

@inputs

nN:
    This normal should be the explicitly connected to the specially calculated hair normal VOP. In this VOP the normal is already front facing and normalized. 

nI:
    The incident direction ray used in the hair specular calculation, as well as, the face forward calculation. The incident vector should be normalized if explicitly connected as an input. Implicitly, the normalized global variable, `I`, is used.

nT:
    This is the vector tangent to the curve (hair).  If this is not connected, the normalized global variable, `dPdt`, is used. If the tangent vector is connected as an input, it must be normalized.

Ks:
    The specular intensity.  A value used to darken or lighten specular highlight. 

spec:
    The specular highlight color. For hair, a value slightly lighter and less saturated than the hair tip color is recommended.

rough:
    A floating point value to control the width of the specular highlight along the curve (hair). 

@outputs

color:
    The hair specular color highlight.
    
    {{{
    Ks * spec * hairspec(nN, -nI, nT, rough)
    }}}

illum:
    Just hair specular lighting without the multiplication by the specular intensity and color. Usually used as an export parameter for extra images planes used in the composite of the final image.

bsdf:
    Returns the PBR wireblinn function calculation.
    
    {{{
    Ks * spec * wireblinn(nT, 4/rough)
    }}}

@related

- [Node:vop/hairnormal]
- [Node:vop/hairdiff]
- [Node:vop/specular]
