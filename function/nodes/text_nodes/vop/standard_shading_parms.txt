#type: include

div id="displacetype_bump">>
    A fast alternative to displacement that only modifies normals to give the appearance of surface height variations. The surface offset is defined by the __value__ input. The position isn't modified.
div id="displacetype_normal">>
    Sets the normal to the vector __value__, after converting from the set __Normal Space__ and applying any flipping as defined by __Flip X__ and __Flip Y__. The normal is applied relative to the chosen __Space__.
div id="displacetype_dispnormal">>
    Offsets __P__ by a component of __value__ in the direction of __N__. Updates __N__ to fit the new surface positions.
div id="displacetype_dispvector">>
    Offsets __P__ by the __value__ vector. The __value__ is applied in the chosen __Space__.

dev id="aniso">>
    Causes reflections to be stretched in the direction defined by __Anisotropy Direction__. This simulates microscopic bumps with a directional bias, causing light to be scattered more in the defined direction. This is typical of brushed metals.

dev id="aniso_notes">>
    NOTE:
	The effect of this parameter increases with __Roughness__. It has no effect at all when __Roughness__ is `0.0`.

dev id="anisodir">>
    Controls the direction of __Anisotropy__ relative to the UV coordinates of the surface. At `0.0`, reflections are stretched in the __U__ direction. At `0.5`, the direction is rotated by `90 degrees` to the __V__ direction. `1.0` equals `180` degrees. Since the effect is symmetrical this produces the same result as `0.0`.

    The direction of rotation also depends on the UV layout. When the UVs are layed out such that textures appear on the surface without mirroring, higher values rotate counter-clockwise.

    NOTE:
	The effect of this parameter diminishes with decreasing __Roughness__ and __Anisotropy__.
