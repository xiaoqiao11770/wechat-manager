#type: node
#context: vop
#internal: methodsubnet
#icon: VOP/methodsubnet

= Method Subner =

"""Represents a method inside a class-based shader."""

== Overview ==

The Method Subnet node defines a method inside a class. It is used primarily inside nodes that represent a class, such as [Shader Class Builder SHOP|Node:shop/rsl_vopshaderclass], where
it feeds into the [Collect VOP|Node:vop/collect] to add the method to the class.  The method source code is defined by the children VOPs inside the Method Subnet VOP, much in the same way as [If-Then Block VOP|Node:vop/if] defines its own block of code.

Almost everything about the method (except for its name and access level) is defined inside the subnet. For example, the return type is defined by the Return VOP child inside the method subnet. If there is no such child, the method return is of 'void' type.

Similarly, the method arguments are defined by [Parameter VOP|Node:vop/parameter]s with their __Scope__ parameters set to __Method Argument__. The  [Parameter VOP|Node:vop/parameter]'s __Export__ level determines whether it is an input-only, output-only, or input-output argument.

@parameters
    Method Name:
	The name of the method used in the generated source code.

    Access:
	The access level for class users. Public method can be called by any caller, while private ones can be called only by the methods inside the same class.

@inputs
    The inputs represent method arguments. However, unlike other vop subnets, nothing is really wired into the inputs. They just provide a visual feedback about the method signature, since all the method code is contained inside the Method Subnet VOP.

@outputs
    Just like inputs, all outputs except the first one should not be wired to any other nodes. They just provide visual feedback about the method signature (its return type and output arguments), since all the method code is contained inside the Method Subnet VOP.

    Method:
	Output connector intended to be wired to the [Collect VOP|Node:vop/collect], and represents the method as a whole entity inside a class definition.



