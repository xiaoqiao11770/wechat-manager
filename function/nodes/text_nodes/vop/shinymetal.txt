#type: node
#context: vop
#internal: shinymetal
#icon: VOP/shinymetal

= Shiny Metal =

"""Simulates a shiny metallic material with strong reflective
properties."""

This operator simulates a shiny metallic material with strong reflective
properties.

The default parameters of this operator yield a gold material. Other
parameter configurations you might find useful are listed below:

{{{
Material                   color      diffamp specamp reflamp urough
vrough
---------------------+---------------+-------+-------+-------+------+------
        Polished Gold          0.97,0.88,0.30   .2      3.0     .8    
.20    .20
        Polished Silver        0.75,0.75,0.75   .2      2.5     .8    
.17    .17
        Chrome                 0.95,0.95,0.95   .3      3.25    .95   
.12    .12
        Rolled Brass           0.92,0.57,0.05   .1      3.3     .7    
.05    .16
        Rolled Aluminum        0.90,0.88,0.85   .1      2.1     .7    
.04    .09
        Brushed Aluminum       0.90,0.88,0.85   .15     1.9     .55   
.088   .13
        Anodized Red Aluminum  0.90,0.35,0.35   .15     1.9     .55   
.088   .13
        Anodized Blue Aluminum 0.30,0.55,0.70   .15     1.9     .55   
.088   .13
}}}
The simulated metal will reflect both its environment and the optional
reflection map. Leave the reflection map field empty to avoid map
reflections. For a simpler metal model, see [Chrome Environment|Node:vop/chromenv].

This operator uses Anisotropic Specular as the lighting model, which is
ill suited for non-subdivided polygonal geometry. See the [Lighting Model|Node:vop/lighting]
operator for more details.

If the Position (`P`) input and the Normal (`N`) input are not connected,
the global variables by the same names will be used instead. Typically
you will use [Rest Position|Node:vop/restpos] or [UV Space Change|Node:vop/uvspacechg] as inputs for `P`, and
will not touch `N` unless you want to apply additional displacement to
the metal surface using an operator such as [Bump Noise|Node:vop/bumpnoise]. If you need to
access the global variables directly, they are available from the [Global Variables|Node:vop/global] operator.



@related
    - [Node:vop/bumpnoise]
    - [Node:vop/chromenv]
    - [Node:vop/global]
    - [Node:vop/lighting]
    - [Node:vop/rust]

