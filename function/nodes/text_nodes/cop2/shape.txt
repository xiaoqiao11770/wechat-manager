#type: node
#context: cop2
#internal: shape
#icon: COP2/shape

= Shape =

"""Generates simple shapes, such as circles, stars and regular N-sided
polygons."""

This COP generates simple shapes, such as circles, stars and regular
N-sided polygons. The shape will automatically expand to the largest
size possible in the given resolution. Use the transform handle or the
transform parameters in the transform page to move and size the shape as
needed.

[Include:is_a_generator]

@parameters

== Shape ==

Shape Type:
    Selects the shape.

    Regular N-sided:
        Regular polygons, like triangles, pentagons and
        octagons.
    Star:
        N-pointed stars.
    Circle:
        A perfect circle.
    Ring:
        A circular ring.
    Equilateral Triangle:
        A triangle with all sides equal.
    Isosceles Triangle:
        A triangle with two sides equal.
    Rectangle:
        A rectangle.
    Parallelogram:
        A slanted rectangle.
Number of Sides:
    #id: numsides

    The number of sides in a Regular N-sided shape.
Number of Points:
    #id: numpoints

    The number of points in a star.
Inner Radius:
    #id: innerrad

    The inner radius of a star and a ring.
Corner Angle:
    #id: cornerangle

    The slant angle of a parallelogram.
Use Sweep Angles:
    #id: beginsweepangles /endsweepangles

    If on, the start and end sweep angles of circles and rings.
Preserve Aspect Ratio:
    If on, the 1:1 aspect ratio of the shape is kept even if the
    image resolution is not 1:1.

== Fill ==

Fill:
    The render mode, Solid (filled) or Hollow (outlined).
Antialias:
    #id: antialias1 /antialias2

    The amount of antialiasing to perform on edges. Higher
    numbers produce more edge levels. The product of the two
    fields must not exceed 64 (8x8).
Level of Detail:
    #id: lod

    The level of detail used when converting circles and rings
    to polygons before rendering.
Fill Outside:
    If on, the 'outside' region is filled instead of the
    interior (for hollow shapes, the outside region is the
    region not included by the line thickness).
Thickness:
    #id: thickness

    For hollow shapes, the thickness of the lines to use, in UV
    space.
Color:
    #id: colorr /colorg /colorb /colora

    The color to render the shape.

== Transform ==

Overview:
    A 2D animated transform can be applied to the spline. All
    units are in UV space.
    
[Include:generator_parms]

@locals

[Include:coplocalvars]

@related
- [Node:cop2/rotoshape]

