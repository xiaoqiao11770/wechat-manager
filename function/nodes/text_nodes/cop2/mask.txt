#type: node
#context: cop2
#internal: mask
#icon: COP2/mask

= Mask =

"""Masks out an area of an image."""

Uses a plane from the mask input to mask out an area of the first
input. The mask may be applied to any planes and their components.

A mask is applied to an image by multiplying the image by the mask. The
mask may also be inverted or scaled (brightened or dimmed).

This operation is useful for removing or isolating image elements.


@parameters

    == Mask ==

        Effect Amount:
            #channels: /effectamount

            If no mask is present, this blends the output with the input
            by a constant amount (0 = all input, 1 = all output).

            If a mask is present, this amount multiplies the mask.

        Mask Plane:
            #channels: /maskplane

            Selects the mask plane to use as a mask from the mask input

            A mask can be a component of a plane or an entire plane. If
            a vector plane is supplied as a mask, its components are
            multiplied by the images' components.

            *Scalar Mask ('A', 'C.r')*

            {{{
            C.r = I.r * M
            C.g = I.g * M
            C.b = I.b * M
            
            }}}
            *Vector Mask ('C')*

            {{{
            C.r = I.r * M.r
            C.g = I.g * M.g
            C.b = I.b * M.b
            
            }}}
        Invert Mask:
            Inverts the mask so that all fully 'masked' portions become
            unmasked. This saves you from inserting an Invert COP.
    [Include:coppixelparms#coppixelparms/]

@inputs
    Image to Mask:
        The image that the mask is applied to.
    Mask Input:
        The input that the mask is chosen from.
@locals
    [Include:coplocalvars]


@related
    - [Node:cop2/multiply]
    - [Node:cop2/xor]

