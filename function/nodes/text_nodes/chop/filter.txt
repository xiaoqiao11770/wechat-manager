#type: node
#context: chop
#internal: filter
#icon: CHOP/filter

= Filter =

"""Smooths or sharpens the input channels."""

This CHOP smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weighting
factors for the neighboring samples. The __Filter Width__ determines the number of neighbors to use.

This CHOP can filter both motion and sound, but other CHOPs are more appropriate for filtering sound (see the [Pass Filter CHOP|Node:chop/pass], [Band EQ CHOP|Node:chop/band], and [Parametric EQ
CHOP|Node:chop/para]).


@parameters

== Filter ==

    Type:
        There are 7 types of filters.

        Gaussian:
            This filter has a Gaussian (normal or "bell" curve) shape
            that smooths the channel. It acts as a low pass filter. The
            wider the filter, the lower the cutoff frequency, resulting
            in smoother data.
        Left Half Gaussian:
            This produces a lag on the channel. If the input channels
            represent values over time, this filter is seen as only
            using samples back in time from the current sample. For
            time-data, this is more realistic as you can not look ahead in
            time. It has a half-bell shape.
        Box:
            This filter is box-shaped, meaning that each neighbor sample
            it uses has the same weighting factor. It can produce
            unwanted steps in the output channel because the effect of
            the samples at the extremes of the filter do not fade out as
            the window slides over the samples. It low-pass filters
            data, similar to the Gaussian filter.
        Left Half Box:
            This filter produces a lag on the data, uses only samples
            back in time, and otherwise acts like a box filter.
        Edge Detect:
            This filter detects "edges", sharp changes in the input
            channels. It acts as a high pass filter. As the filter width
            is increased, more low frequencies are added.
        Sharpen:
            This filter sharpens all high frequencies. It is the sum of
            the edge detect result and the original data.
        De-spike:
            This filter removes "spikes" (samples more than `Spike
            Tolerance' above or below of the expected sample value). The
            filter width allows you to eliminate spikes that are several
            samples long. Wide filters will remove wide spikes (spikes
            of several samples) and small filters will only remove
            narrow spikes (one or two samples in length).
    Effect:
        #channels: /effect

        The extent to which the filter affects the channel (0 = not at
        all, 1 = maximum effect).
    Filter Width:
        #channels: /width

        The amount of surrounding samples used in the calculation of the
        current sample. It is expressed in Units (in the Common page).
    Spike Tolerance:
        #channels: /spike

        For the De-spike filter type, this is the amount that a sample
        can differ from its neighbors without being considered a
        spike.
    Number of Passes:
        #channels: /passes

        The number of times the filter is applied to the channel.
        
[Include:common]

@locals

C:
        Current channel index.       
NC:
        Total number of channels.

@related
    - [Node:chop/limit]
    - [Node:chop/pass]

