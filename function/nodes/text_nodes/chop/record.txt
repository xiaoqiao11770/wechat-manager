#type: node
#context: chop
#internal: record
#icon: CHOP/record

= Record =

This CHOP takes the channels coming in the first (Position) input,
converts and records them into an internal storage array, and outputs
the storage array as the CHOP output. The optional second (Active) input
is used to enable and disable the recording.

During each frame that is being recorded, the Record CHOP uses only the
values of the Position input at the current frame. The __Type__ determines
how the input values are converted. In one case, input values are
recorded as-is or interpreted as a speed.

If __Record__ is set to __Auto Range__, and the Active input goes on, and
Houdini is playing, then any existing storage array is cleared, and the
Position channels are recorded in a new storage array until Active goes
off. To produce a single-frame recording, hold down the ((Ctrl)) key
during Auto Range recording.

The [Mouse|mouse] and [Keyboard|keyboard] CHOPs are often attached to the Position and
Active inputs respectively of the Record CHOP to perform the recording
of channels from mouse movements, enabled by pressing a keyboard key
(see the [Keyboard CHOP|Node:chop/keyboard]).


@parameters

    == Control ==

        Record:
            When and how much to record.

            On:
                Always records when playing forward.
            Add:
                Add the new input to already-recorded channels.
            Auto Range:
                Creates an interval based on Active on/off.
        Record Input:
            Record can sample the time slice or a single frame.
        Interpolate:
            How to compute missed input samples using interpolation.
        Type:
            The interpretation of the Position input.

            Raw:
                Output values set to the input values as-is.
            Raw Speed:
                Input changes are treated as a speed. An input of `0.5`
                will cause the output to increase by 0.5 per time unit.
            Position Offset:
                The input changes (times Gain A/B) are added to the
                output values. Only done when Active is on.
            Speed:
                Input changes (times Gain A/B) are treated as a speed
                change. When Active is off, speed is 0. Output is
                current value + speed * timestep.
            Speed & Hold:
                Like Speed except speed is held when Active is off.
        Record Output:
            Record can output single frames, a time slice, or the full
            animation range.

    == Initial ==

        Position Offset:
            Initial values to use for position (output of CHOP).
        Speed:
            Initial values to use for speed (for Speed Types).
        Initialize:
            Command menu to set the internal state to be the initial
            values above.
        Read:
            Command menu to read the current internal state into the
            initial values above.

    == Limit ==

        Channels Per Limit:
            #channels: /chanperlim

            Number of consecutive channels to use Limit A before
            switching to Limit B.
        Limit A/B:
            Type of limiting function for sets A and B.

            Clamp:
                Clamp at the minimum/maximum value and hold.
            Loop:
                At limit, continue channel at other end of min/max
                range.
            Zig Zag:
                At limit, bounce channel back within min/max range.
        Minimum A/B:
            #channels: /mina /minb

            The minimum value of the channel.
        Maximum A/B:
            #channels: /maxa /maxb

            The maximum value of the channel.
        Gain A/B:
            #channels: /gaina /gainb

            The Position input is multiplied by this gain factor.
            
    [Include:common]

@related
    - [Node:chop/audioin]
    - [Node:chop/keyboard]
    - [Node:chop/mouse]

