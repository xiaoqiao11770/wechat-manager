#type: node
#context: chop
#internal: inversekin
#icon: CHOP/inversekin

= InverseKin =

"""Generates channels for bone objects based on a bone chain and an end
affector."""

This generator CHOP generates channels for bone objects based on a bone
chain and an end affector. It can solve for the bone angles using a
variety of different solver types.


@parameters

    == Kinematics ==

        Solver Type:
            Specifies the solver to use to generate the channels.


            None:
                No solver. Use the original parameter values.
            Show Rest Position:
                No solver. Uses the rest angles.
            Show Capture Position:
                No solver. Uses capture angles.
            Inverse Kinematics:
                Uses IK solver. The solution is uniquely defined by the
                end affector position. Constraint parameters are
                ignored.
            IK With Constraints:
                Uses a modified IK solver. The solution depends on the
                previous solution. Constraint parameters are used to
                limit the range of motion.
            Follow Curve:
                The bones are positioned to follow the specified curve
                as closely as possible.
        Root Bone:
            This is the first bone in the chain for which this CHOP
            should create solution channels.
        End Bone:
            This is the last bone in the chain for which this CHOP
            should create solution channels.
        End Affector:
            For Inverse Kinematics and IK With Constraints solvers, this
            is the object to use as the end affector when solving for
            the bone angles.
        Twist Affector:
            For the Inverse Kinematics solver, this specifies an object
            that controls the twist orientation of the solution bone
            angles.
        IK Twist:
            #channels: /iktwist

            For the Inverse Kinematics solver, this parameter specifies
            an additional twist angle to be applied to the solution bone
            angles.
        IK Dampening:
            #channels: /ikdampen

            For the Inverse Kinematics solver, this parameter represents
            how easily the __End Bone__ can be pulled off the __End Affector__
            as the bone chain is stretched out.
        Curve Object:
            For the Follow Curve solver, this parameter specifies the
            object that contains the curve geometry that the bone chain
            should follow.
        Curve Normals:
            For the Follow Curve solver, this parameter specifies how
            the curve normals should be transferred to the bone chain.
            Note that the normals are interpolated on the curve between
            the curve breakpoints. Because breakpoints (and not control
            points) lie on the curve it is more meaningful to use
            interpolate the breakpoint rather than the control vertex
            values. Though, breakpoint normals are calculated from the
            control vertices.


            Best Guess:
                The bone chain normals approximate the curve normals as
                much as the curve parameters allow. (Path parameters,
                for example, carry extra information that allow twists
                of more than 360 degrees)
            No Normals:
                The bone chain maintains its own normals defined by the
                rest position.
            Quaternion:
                The bone chain normals interpolate the curve normals
                using quaternion rotation of the vectors. (i.e., the
                bone chain normals lie on the shortest arc defined by
                two curve normals on a unit sphere.
            Clamped Angle:
                The bone chain normals are calculated using twist angles
                around the curve (between the curve points at which a
                normal is defined). The angle difference is restricted
                to the interval between -180 to 180 degrees.
            Angle:
                The bone chain normals are calculated using twist
                angles. This option is similar to Clamped Angles, except
                the twist angles around the curve are not restricted.
                Note, that for this option, the curve must carry
                additional information (see Object Path Tool).
                Otherwise, this option is downgraded to __Clamped Angle__.
        Blend:
            This option blends between the local bone rotation values
            and the solved solution. When this value is `0` it produces
            the local bone rotation values and when it is `1`, it produces
            the solved bone rotation values.
        Straighten Solutions:
            When this checkbox is turned on, the bone chain will completely straighten out in the direction of the goal if the IK goal is farther away than the length of the bone chain (with a tolerance of the tracking threshold). If this checkbox is turned off, no attempt is made to further straighten the IK solution. By default it is turned off because it is faster.
            
        Tracking Threshold Factor:
            This value specifies the accuracy threshold for Inverse
            Kinematic solutions. Use smaller values for more accurate
            solutions at the expense of more computation time. Use
            larger values to save computation time at the expense of
            getting less accurate solutions.

    == Channel ==

        Single Frame:
            Only create one-sample channels, at the __Start__ position.
        Clean Rotations:
            When not in Single Frame mode, the CHOP can use the previous
            rotation values as a hint when generating the next frame's
            rotation values.
        Start:
            #channels: /start

            The start position of the CHOP.
        End:
            #channels: /end

            The end position of the CHOP.
        Sample Rate:
            #channels: /rate

            The sample rate of the CHOP.
        Extend Left:
            The left extend condition (before the CHOP's start).
        Extend Right:
            The right extend condition (after the CHOP's end).
        Default Value:
            #channels: /defval

            The value to use for the "Default Value" extend condition
            type.
            
    [Include:common]

@related
    - [Node:chop/handle]
    - [Node:chop/object]
    - [Node:chop/transform]
    - [Node:chop/iksolver]

