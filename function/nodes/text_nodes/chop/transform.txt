#type: node
#context: chop
#internal: transform
#icon: CHOP/transform

= Transform =

"""Takes translate, rotate, and/or scale channels and transforms them."""

This CHOP takes translate, rotate, and/or scale channels and transforms
them either using the transform parameters in the CHOP or via other transform
channels from its second input. It can be used to:

* Change the position and orientation of an object.

* Convert a set of transform channels with a certain transform order
  into an equivalent set of channels with a different transform order.

* Change the direction, starting point and scale of motion capture
  data.

At present, only one transform format exists: the transform defined by
12 channels (`tx ty tz, rx ry rz, sx sy sz`) and a transform
order.

The Transform CHOP expects the input channels to have names that end in
the above names. Examples are:

{{{
geo1:tx geo1:ty geo1:tz geo1:rx ...
headtx heaty headtz headrx
tx ty tz rx ...  (what you would get from a Fetch chop)
}}}
The above defines a transformation matrix. This is multiplied by the
transform matrix defined from the second input (if present), or on the
__Transform__ tab, and output as translate/rotate/etc. channels.

To affect only one set of channels coming into the CHOP, use the __Scope__
parameter. This is used for both the first and second inputs.


@parameters

    == Transform ==

        Overview:
            This page defines the matrix used to transform the channels.
            The parameters used to create this matrix are __Transform
            Order__, __Rotate Order__, and the __Translate__, __Rotate__, __Scale__ and __Pivot__ parameters. If a second input is present, then only the
	    __Transform Order__ and __Rotate Order__ parameters are used.

	Invert Transform:
	    If enabled, the transform will be inverted prior to being
	    multiplied with the input.

        Output Channels:
            Currently there is only one output type, the transformed
            input channels.
        Matrix Operation:
            The input channels can be pre or post multiplied by the
            transformation.

	    NOTE:
		This should be set to Post-Multiply when transforming input channels representing transformations, and to Pre-Multiply when transforming input channels representing point positions.

        Use Rotation Hint:
            Supply approximate starting values for the rotation
            channels.


    == Input ==

        Overview:
            This page defines what the incoming channels' transform
            order is assumed to be. Using the incoming channels and the
            transform order here, a matrix for the incoming channels is
            built. It is then multiplied by the transformation matrix
            defined on the __Transform__ tab. Any missing translation,
            rotation or scale channels will default to zero (or one in
            the case of scale).
        Transform Order:
            The transform order of the channels from the first input.
        Rotate Order:
            The rotation order of the rotations from the first input.
            
    [Include:common]
    
@locals
    I:
        The current index.

@related
    - [Node:chop/pretransform]

