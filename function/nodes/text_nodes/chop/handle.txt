#type: node
#context: chop
#internal: handle
#icon: CHOP/handle

= Handle =

"""The "engine" which drives Inverse Kinematic solutions using the
Handle object."""

The Handle CHOP is the "engine" which drives Inverse Kinematic solutions
using the [Handle object|Node:obj/handle]. The role of the Handle CHOP is to generate
rotation values for the bones which will bring their attached handles as
close to their respective targets as possible.

The use of this methodology is best described with an example:

steps>>
    # Increase the frame range to 10000. Create a [Null object|Node:obj/null] called
      'target' and animate a few random positions for it to travel to.

    # Create a three bone IK chain with No Kinematics. Append a Handle
      object to the last bone.

    # In the Handle object set the __Target menu__ to __Target__. This is the
      null object you just created.

    # The system is now specified. To actually start the IK enter a CHOP
      pane.

    # Place a Handle CHOP. In the Source field type in the names of the
      bones that were earlier created.

Tip: 
	In the Viewport, you can use the Select state to select the bones you created. Then in the Handle CHOP click the Grab Source Form Selection button. The names are entered automatically for you. You don't have to worry about being too picky when selecting objects this way, since non-bone objects are ignored.

* Click the Export button on the Handle CHOP and click __Play__. You should
  now see the two-bone system chasing the animated null.

You can place any number of bones with any number of (possibly zero)
Handles attached to the system. The following parameter description will
now give a more detailed explanation of the functionality:


@parameters

    == Handle ==

        Source:
            Creates rx ry rz channels for every bone listed.
        Grab Source From Selection:
            Select bones in the viewport and select this to
            automatically enter bone names above. Non-bones are
            ignored.
        Fixed:
            Enter groups of bones which are to rotate as a combined
            unit. (Eg, a shoulder or pelvic branch).
        Grab Fixed From Selection:
            Select bones in the viewport and select this to
            automatically enter fixed bone names above.
        Iterations:
            #channels: /iterations

            Specifies the accuracy of the solver.
        Init Frame:
            #channels: /init

            Specifies a frame in which the bones are reset to their
            default rest angles.
        Preroll:
            #channels: /preroll

            Specifies the number of iterations to solve at the
            initialization frame.
        Max Angle Change:
            #channels: /delta

            Specifies the maximum change in degrees the solver is
            allowed to move each bone per frame. Use this parameter if
            the solution is too drastic.

    == Channel ==

        Single Frame:
            When ON, only the current frame is solved. When OFF a range
            of frames is solved. Turn this option off to cache and or
            edit the entire solution.
        Unit Values:
            Specifies how the __Start/End__ fields are evaluated below.
        Start/End:
            #channels: /start /end

            Specifies a range of frames to solve for when __Single Frame__
            option is turned Off.
        Sample Rate:
            #channels: /rate

            The sample rate of the channels.
        Extend Left:
            #channels: /left

            The left extend conditions.
        Extend Right:
            #channels: /right

            The right extend conditions.
        Default Value:
            #channels: /defval

            The default value for extend conditions.
            
    [Include:common]

@related
    - [Node:chop/export]
    - [Node:chop/fetch]
    - [Node:chop/inversekin]
    - [Node:chop/object]

