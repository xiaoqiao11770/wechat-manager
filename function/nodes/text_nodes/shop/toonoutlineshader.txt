= Toon Outline Shader =

"""Creates lines around the silhouettes of objects"""

This shader draws only the outline of the model based on the camera. You will typically use this shader in combination with another copy or instance of the same object with the [Toon Color Shader|Node:shop/tooncolorshader].

[Image:/images/nodes/shop/tooncolorshader_simpleexample.png]

@parameters

== Color ==

Color:
    #id: outlinecolor
    
    The color of the outline.

== Thickness ==

Use these parameters to decide if the outline thickness should always be the same, or vary based on distance from camera, or blend between the two.

You can scale the outline thickness per-object, per-face, or per-point/vertex by setting an `outlinescale` attribute on your geometry.

In World Space:
    #id: outlinescenethickness
    
    The thickness of lines (in of scene units). This means the outline will get thicker the closer the model is to camera. More of this value is used when __Blend__ is closer to `0.0`.

As Image Fraction:
    #id: outlineimagethickness
    
    The thickness of lines as a fraction of the image width. This means the outline will scale with the image resolution, but not change as the model moves closer to or father from camera. More of this value is used when __Blend__ is closer to `1.0`.

Blend:
    #id: imagethicknessblend
    
    Blends between the results of "world space" and "image fraction" methods for calculating outline thickness. `0` means only use the world space thickness, `1` means only use image fraction.

== Spill In ==

Spill In:
    #id: spillin
    
    The higher this value, the more outlines spill into the interior of objects. This can create some desirable lines but can sometimes bleed too far and pop in animations.

Max Object Depth:
    #id: maxobjdepth
    
    Hide __Spill In__ parts of the outline where the object being shaded is thinner than the specified depth. Depth is measured in the viewing direction.

@related

:: [Toon Color Shader|Node:shop/tooncolorshader]
