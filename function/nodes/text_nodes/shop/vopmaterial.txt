#type: node
#context: shop
#internal: vopmaterial
#icon: SHOP/vopmaterial
#order: -20

= Material shader builder =

"""A higher-level shader that can contain one or more sub-shaders,
such as surface shaders, displacement shaders, and property shaders."""

== Overview ==

The Material node is a container for other shader types,
letting you "package up" combinations of lower-level shaders (such as
surface shaders and displacement shaders) with individual settings into
a new "look" you can assign as a single unit.

The gallery of materials in the
[material palette pane|/ref/panes/materialpalette]
are all customized examples of the Material shader. See the documentation for the [gallery materials|/gallery/shop/vopmaterial]
that ship with Houdini.

It is necessary for some nodes to specify the context in which they belong. 
- [Global VOP|Node:vop/global] provides global variable for the specified context type. 
- [Output VOP|Node:vop/output] provides output variables to assign for the specified context type. The material knows which shader types the network implements by inspecting the context type for the Output VOPs. 
- [Parameter VOP|Node:vop/parameter] specifies the context in which it exports the variable, if it is indeed exporting at all.

== Creating and editing materials ==

Through Houdini's
[parameter editing interface|/ref/windows/edit_parameter_interface],
you can promote parameters from contained shaders onto the material,
letting you create a material with a custom interface, where users
can manipulate some of the underlying parameters but others are kept
hidden.

:task:Create a new Material from scratch:
    In the network editor,
    [Go to|/ref/panes/network] the `/shop` level
    and create a Material node, then double-click the node
    to go inside. Create and edit shader nodes inside the
    material and connect them to the special "suboutput" node.
  
:task:Customize an existing material from the gallery:
    Click the Material Palette pane. Drag one of the materials
    from the gallery (on the left) into the list of shaders in
    the scene (on the right). Then you can edit the material's
    settings, edit the shaders inside, or edit its interface.
        
    See the [material palette documentation|/ref/panes/materialpalette]
    for more information.
        
:task:Promote parameters from contained shaders onto the Material node:
    In the material's parameter editor, click the
    [Icon:BUTTONS/gear] Gear icon and choose
    __Edit parameter interface__. Under __Create parameters__,
    click the __From nodes__ tab, then drag parameters from
    shaders inside the material into the __Existing parameters__
    list to promote them.
        
    See the [parameter editing window
    documentation|/ref/windows/edit_parameter_interface] for more
    information.

:task:Override a material's settings per-object or per-primitive:
    See [rendering properties|/props].


TIP: 
    Time is the motion blur shutter time for the shader execution, which is a value between 0 to 1 for shader motion blur (it's not the same as `$T`). Time is initialized to 0 for micropolygon rendering, since all shading occurs at the start of the frame. To use Time for motion blur calculations, you'll need to render with the ray tracing engine which executes shaders once for every pixel sample. 
