= Font =

#type: node
#context: sop
#internal: font
#icon: SOP/font
#tags: text

"""Creates 3D text from Type 1, TrueType and OpenType fonts."""

Houdini automatically scans the system and user font directories for 
compatible fonts and shows them in the font menu.

The Font SOP is Unicode compatible, and can draw any glyph from a Unicode
font.

[Include:/shelf/font#includeme]

@parameters

Primitive Type:
    Type of geometry to create.

Font:
    The font to use for drawing the text.
 
    By default the menu lists all known system fonts. You can browse for a
    specific font file, if it is not listed. 

Text:
    Text to be generated.
    
Horizontal Alignment:
    #id: halign
    
    Specifies how the text is aligned horizontally around the origin.

Vertical Alignment:
    #id: valign
    
    Specifies how the text is aligned vertically around the origin.
    
First Line:
    The origin is the baseline of the first line of text.

Top:
    The origin is the top of the first line of text.
    
Middle:
    The origin is the half way between the top of the first line and the baseline of the last line.
    
Bottom:
    The origin is the baseline of the last line.
    
Include Descender in Vertical Alignment:
    #id: use_descender
    
    If enabled, then the alignment baseline is set to the descender of the font, rather than the font's baseline.
    A descender is the portion of a letter that extends below the baseline of the font - for example the stem of
    a lower case letter `p`.

Origin:
    #id: tx /ty /tz

    Sets the text's origin along the XYZ axes.

Scale XY:
    #id: sx /sy

    Scale factors along x and y axes.

Font Size:
    #id: fontsize

    Single control for controlling the size. The scale is applied on top
    of this.

Tracking XY:
    #id: trackingx /trackingy

    Tracking in x-direction. Leading in y-direction. 

Oblique Angle:
    #id: oblique

    Amount of slant to apply to the text, in degrees.

Level of Detail:
    #id: lod

    Controls the number of points in polygonal fonts.

Automatic Kerning:
    Automatically apply kerning pairs from the font to adjust spacing between letters for a more
    visually pleasing results.

Hole Faces:
    Generates holes in polygons and Bezier faces.

Add Attributes:
    Create `textsymbol` and `textindex` primitive attributes.  `textsymbol` contains the code point of the glyph the primitive belongs to. `textindex` contains the offset (counted in code points) into the string.
    
    This is the string after any back-tick or variable expansion.

@related

- [Node:sop/hole]
- [Node:sop/extrude]

