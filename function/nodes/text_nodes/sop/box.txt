= Box =

#type: node
#context: sop
#internal: box
#icon: SOP/box
#tags: create, model

"""Creates a cube or six-sided rectangular box."""

TIP:
    If you connect geometry to the Box SOP's input, it will create a
    bounding box around the input geometry (this duplicates the
    functionality of the [Bound node|Node:sop/bound]).
    You can also use this feature to create a cage for use with the
    [Lattice node|Node:sop/lattice].

[Include:/shelf/box#placing]

For more information, see [Box handles|/basics/handles#box].

@parameters
    Primitive Type:
        Type of geometry to create.

        Polygon:
            Construct the box from size quadrilateral polygons.
        Polygon mesh:
            Construct the box from a mesh of smaller polygons. Use the
            __Axis divisions__ parameters to control the number of
            polygons the box is made out of.
        Mesh:
            Creates a _mesh primitive_. A mesh primitive is a _single
            primitive_ which has a natural UV mapping and which can't be
            split apart, unlike the polygon mesh which is made up of
            individual polygons.

            In most cases you will want to use __Polygon mesh__ rather
            than __Mesh__.

        NURBS:
            Construct the box from six NURBS surfaces. Use the __Axis
            divisions__ parameters to control the number of CVs on the
            box.
        Bezier:
            Construct the box from six Bezier patches.

        Points:
            Create only the points without any geometry. If divisions
            are set, it creates the points in the same order as the
            Polygon mode. Otherwise, it creates the points in the same
            order as the Polygon mesh mode.

    Connectivity:
        Available when __Primitive type__ is not __Polygon__. Controls how
        to construct the box. The "triangles" and "quads" options are
        ignored when __Primitive type__ is NURBS or Bezier.

        The "row" and "column" options create lines (polylines or
        straight curves, depending on the __Primitive type__) instead of
        surfaces.


        Rows:
            Creates horizontal lines.
        Columns:
            Creates vertical lines.
        Rows & Cols:
            Both Rows and Columns.
        Triangles:
            Build each face of the box with triangles.
        Quadrilaterals:
            Build each face of the box with four-sided quadrilaterals.
        Alternating Triangles:
            Build the grid with alternating triangles. Each four sided quadrilateral is divided in half making two back to back triangles, with the dividing lines alternating in direction.
        Reverse Triangles:
            Build the grid with reverse triangles. Each four sided quadrilateral is divided in half making two back to back triangles, with the dividing lines all facing the same direction.     
        
    Consolidate Corner Points:
        Welds the corner points of the faces of the box.

    Size:
        #channels: /sizex /sizey /sizez

        Size of the box along xyz axes.
    Center:
        #channels: /tx /ty /tz

        Position of center of box.
    Uniform Scale:
        #channels: /scale

        Uniform scaling.
    Axis Divisions:
        #channels: /divrate

        Number of divisions along each axis.  
        Available when __Primitive type__ is __Polygon Mesh__ or __Mesh__.

    Axis Orders:
        #channels: /orderrate

        The order of the surface on each axis.
    Divisions:
        #channels: /divsx /divsy /divsz

        Available when __Primitive type__ is __Polygon__ or __Points__. Creates a
        lattice for use with the [Lattice deformer SOP|Node:sop/lattice]
        or [Spring SOP|Node:sop/spring]. Turn on the checkbox to create
        a lattice, and use the fields to control the number of points in
        each axis.

	If you do not wish the interior points, use Axis Divisions and
	__Polygon Mesh__ or __Mesh__ modes.
    Enforcement Bars:
        Available when __Primitive type__ is __Polygon__ and __Divisions__
        is on. Places diagonal lines between points in the lattice. This
        may be useful when you are using the lattice with the [Spring
        SOP|Node:sop/spring].
    Oriented Bounding Box:
        Available when you connect geometry to the node's input. Orients
        the bounding box to the axes of the input geometry instead of
        the world axes.
        
        This algorithm is based on points and so requires primitives with vertex hulls. It will not work with, for example, a primitive sphere. To get the bounding box of a primitive sphere, first [convert|Node:sop/convert] it to polygons.
    Add Vertex Normals:
        Adds vertex normals to the box, so that it will have an explicit cusped appearance.
        
@inputs
    Bounding source:
        If you connect geometry to this input, Box will create a
        bounding box for the input geometry. (Otherwise, it uses the
        parameters to control the size and position of the box.) Use the
        __Oriented bounding box__ parameter to orient the bounding box
        to the input geometry instead of the world axes.

@related
    - [Node:sop/bound]
    - [Node:sop/lattice]
    - [Node:sop/spring]

