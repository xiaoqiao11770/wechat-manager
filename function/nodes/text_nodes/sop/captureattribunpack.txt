#type: node
#context: sop
#internal: captureattribunpack
#icon: SOP/captureattribunpack

#tags: capture, character

= Capture Attribute Unpack =

"""Converts a single index-pair capture attribute into per-point and detail array attributes."""

The Capture Attribute Unpack SOP takes index-pair attribute and converts it into a set of array attributes by a naming convention.  The resulting set of attributes is easier to manipulate with VEX, and can be repackaged with the [Capture Attribute Pack SOP|Node:sop/captureattribpack].

How points are captured requires knowledge of both per-point information as well as global meta-data about each capture region.  The Index Pair attribute can store all the meta-data as a single attribute, making it convenient to move about, and allowing support for blending and merging of captured geometry.  However, it is not very practical for manipulation.

Instead of a single index pair attribute, a group of detail and point array attributes can be used.  The point attributes consist of an index array attribute suffixed `_index` which refer to items in metadata; and a data array attribute suffixed with `_data` which usually stores the weights of each point.  The detail attributes are all array attributes which
represent properties of the metadata.  The primary attributes are indexed directly from the point index array attribute. However, there can also be secondary attributes, with an infix of `_secondary#`, which represent additional tables of metadata.  These will have their own
implied indirection rules.

@parameters
Class:
	The class of attribute storing the data, usually point.  The `_index` and `_data` attributes should be this class.  All the property metadata attributes are detail attributes regardless of this setting.

Attribute:
	The name of the index pair attribute to unpack.  

Prefix:
	If blank, the attribute name followed by `_` is used as the prefix.

	The prefix followed by `index` is used to create an integer array attribute to store indices into the metatdata.  The prefix followed by `data` is used to create a data array attribute to form the per element data.

	The meta data will be converted to detail array attributes that start with the prefix.

Secondary:
	It is possible to have multiple separate tables of metadata. The additional tables will have secondary#, where # is the extra table number (starting at 1), after the prefix and
	before the property name.

Unpack Properties:
	Generate detail array attributes storing all of the meta-data tables.

Unpack Data:
	Generate per-element array attributes storing the index and data values.

Delete Capture Attributes:
	Remove the capture attribute after processing, leaving only the generated array attribute.

@related
    - [Node:sop/deform]
    - [Node:sop/captureproximity]
    - [Node:sop/capturecorrect]

