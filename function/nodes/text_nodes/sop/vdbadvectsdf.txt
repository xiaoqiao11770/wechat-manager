#type: node
#context: sop
#internal: vdbadvectsdf
#icon: COMMON/openvdb

#tags: model

= VDB Advect SDF =

"""Moves SDF VDBs in the input geometry along a VDB velocity field."""

[Include:volume_types]

== Overview ==

The VDB Advect SDF operation will move narrow band signed distance fields according to a velocity field defined in a vector VDB.

== Animating advection ==

*This node is not a feedback loop*.

It moves the signed distance fields it finds in the input geometry.
It _cannot_ modify the fields over time.
(That is, if you hook this node up to do advection, and press play, the fields will not animate.)

To set up a feedback loop, where the advection at each frame affects the advected field from the previous frame, do one of the following:

* Do the advection inside a [SOP Solver|Node:sop/solver].

* Set the __Time Step__ to $T
  This will cause the node to recalculate, _at every frame_, the path of every particle through _every previous frame_ to get the current one.
  This is obviously not very practical.

@parameters

Group:
    A subset of VDBs in the first input to move using the velocity field.

    These must be narrow band signed distance fields.

Velocity VDB:
    The name of a VDB primitive in the second input to use as the velocity field.

    This must be a vector-valued VDB primitive.  You can use the VDB Vector Merge SOP to turn a `vel.[xyz]` triple into a single primitive.

    See [specifying volumes|/model/volumes#group].

Advection:
    These control how the SDF is moved through the velocity field.

    Time Step:
	Number of seconds of movement to apply to the input points.
	The default is `1/$FPS` (one frame's worth of time).
	You can use negative values to move the points backwards through the velocity field.
    Spatial Scheme:
	How accurately the gradients of the signed distance field are computed.
	The later choices are more accurate but take more time.

    Temporal Scheme:
	How accurately time is evolved within the timestep.  Later choices are
	more accurate but take more time.

Renormalization:
        After moving the signed distance field, it will often no longer be a proper signed distance field.  A number of renormalizaton passes can be performed to convert it back into a proper field.
        
        Steps:
                The number of times to renormalize between every substep.
        
        Spatial Scheme:
                How accurately the gradients of the signed distance field are computed. The later choices are more accurate but take more time.
        
        Temporal Scheme:
                How accurately time is evolved within the renormalizaton stage.  Later choices are more accurate but take more time.

@related
    - [Node:sop/vdb]
    - [Node:sop/vdbfromparticles]
    - [Node:sop/vdbadvectpoints]
    - [Node:sop/vdbmorphsdf]

