#type: node
#context: sop
#internal: attribcreate
#icon: SOP/attribcreate
#tags: attrs
#index: no

= Attribute Create =

"""Adds or edits user defined attributes."""

The attribute can be a float, integer, vector, or string type. If the
local variable name is not specified, the attribute name (all
uppercased) will be used. After adding a user attribute, the local
variable can be used anywhere in operations where local variables are
allowed.

Note that strings are added as "Index" attributes, not as actual
"String" attributes. This is only important if you are using these with
the HDK.


@parameters
Name:
    Name of the attribute
    
Local Variable:
    Name of the local variable that corresponds to the new
    attribute. If you leave this field blank, the local variable is
    the name of the attribute in all UPPERCASE.

    To access individual components of an multi-component attribute,
    the user can append to this name:

    * *X, Y, or Z* for vector attributes.

    * *1, 2, 3, etc.* for float attributes. Note that the numbering
      starts at 1, not 0.

    For example:

    table>>
        tr>>
            th>> Attribute
            th>> Type
            th>> Local variables created
        tr>>
            td>>
                `abc`
            td>> Float, size = 1
            td>>
                `$ABC` = `$ABC1`
        tr>>
            td>>
                `abc`
            td>> Float, size = 2
            td>>
                `$ABC1`, `$ABC2`
        tr>>
            td>>
                `abc`
            td>> Vector
            td>>
                `$ABCX`, `$ABCY`, `$ABCZ`

Class:
    Where to add the attribute to the geometry. Can be a point,
    detail, primitive, or vertex attribute.

Type:
    Float, Integer, or String. When __Type__ is "Float", you can use
    the other menu to specify a "sub type"
    
    (Vector is included in the type menu for backwards compatibility.
    It is the same as setting __Type__ to "Float" and the other menu
    to "Vector".)

    Vector attributes are a backward compatible setting to specify a
    float attribute which Houdini transforms as a vector.

    Float attributes may have further type information specified:

Type qualifier (next to Type):
    #id: typeinfo
    
    Guess from name:
        If the name is "N", the qualifier will be "Normal".
        If the name is "Cd", the qualifier will be "Color".
        If the name is "v" or "up", the qualifier will be "Vector".
        Otherwise, the qualifier will be "None".

    None:
        No special treatment.

    Position:
        This attribute is a geometric point. Houdini will transform the attribute as a position.

    Vector:
        Houdini will transform the attribute as a vector.

    Normal:
        Houdini will transform the attribute as a normal.

    Color:
        This attribute is a color.

    Quaternion:
        Houdini will transform the attribute as a quaternion.

Precision:
    Numeric precision to use (when __Type__ is not String). See the
    [Attribute Cast node|Node:sop/attribcast] for more information.

Size:
    #id: size
    
    Number of elements in the attribute
    
Default:
    #id: default

    Default attribute value
    
Write Values:
    Turn this off if you want to ensure the attribute exists but not 
    overwrite any existing values.

Value:
    #id: value

    Numeric value to write to the attribute.

String:
    #id: string

    String value to write to the attribute.
    
Vector attributes are modified by transforms. Float attributes are not.
    
@locals

[Include:standardvariables]

@related

- [Node:sop/attribute]
- [Node:sop/attribcast]
- [Node:sop/attribcopy]
- [Node:sop/attribmirror]
- [Node:sop/attribpromote]
- [Node:sop/attribtransfer]
- [Node:sop/point]
- [Node:sop/primitive]
- [Node:sop/vertex]

