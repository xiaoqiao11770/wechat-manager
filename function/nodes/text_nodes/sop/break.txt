= Break =

#type: node
#context: sop
#icon: SOP/break
#internal: break
#tags: breaking

"""Breaks the input geometry using the specified cutting shape."""

The Break operation is used to induce a fracture line into the input geometry. 
The fracture can be determined by a grid, sphere, box, or custom configuration.  
The resulting pieces are disconnected, and a new inside group of faces 
is created.

The operator can be used to create a fractured object for RBD simulation, 
or to roughly separate geometry into disconnected, whole objects.

If you do not want to cut up your geometry manually, you can use the [shatter|/shelf/shatter] tool to do it automatically for you.

[Include:/shelf/break#includeme]

TIP:
    If the inside faces created by the break operator contain any bad 
    geometry (missing or extraneous faces), various parameters can be 
    adjusted to try to eliminate it:
    - Increasing the resolution of the cutting surface will improve the detail of the insides surfaces.  
    - Choose a new __Seed__ value or __Noise Type__ for the cutting surface deformation.
    - Enable __Do Jitter__ and adjust the seed and amount values.
    
@parameters

Group:
    The group that will be broken by the operator.
Keep Outside:
    #id: keep_outside

    Whether or not the outside part of the geometry will 
    remain after the break occurs.
    
Keep Inside:
    #id: keep_inside

    Whether or not the inside part of the geometry will 
    remain after the break occurs.
    
Inside Group Name:
    #id: inside_group

    The name assigned to the group of faces created on the interior of 
    the broken geometry.

    NOTE:
        The __Inside Group Name__ should be consistent over break operators 
        applied to the same geometry, since it will be used by the 
        __Assemble__ operator to create the pieces of the object.

Visualize Break:
    Visualize cut geometry by applying a random color to each piece.

== Cutter ==

Cutting Shape:
    #id: shape
    
    The initial shape of the cutting surface before any deformation.
    
    Grid:
        A flat plane surface.
    Box:
        A standard box shape with six sides.
    Sphere:
        A closed spherical surface.
        
Grid Rows:
    #id: rows
    
    The number of rows in the grid cutting plane.
    
Grid Columns:
    #id: cols

    The number of columns in the grid cutting plane.
    
Box Divisions:
    #id: divrate{123}

    The resolution of the box cutting surface.
    
Sphere Resolution:
    #id: sphere_freq

    The resolution of the sphere cutting surface.

Translate:
    The central position of the cutting plane.
    
Rotate:
    The orientation of the cutting plane.
    
Scale:
    The scale of the cutting plane.
    
Height:
    #id: height

    The maximum height of the deformations applied to the cutting plane.
    
    TIP:
        Use a height of 0 for a perfectly flat (or perfectly 
        spherical) cutting surface.
        
Roughness:
    #id: rough

    How rough or jagged the deformations of the cutting plane will be.
    
Fractal Depth:
    #id: frac_depth

    The number of fractal iterations performed when deforming 
    the cutting plane.
    
Frequency:
    #id: freq{123}

    The frequency of the deformations in the cutting plane, 
    in each of the three dimensions.

Seed:
    #id: offset

    A randomization seed for the deformations of the cutting plane.

    TIP:
        Change this value to give your cutting surface a different 
        set of deformations.
        
Noise Type:
    #id: ntype

    The type of surface deformation that will be applied to the 
    cutting plane.

    Perlin Noise:
        Standard noise which performs a 3 dimensional hermite 
        spline interpolation on a lattice of random values.
        
    Sparse Convolution:
        Scatters points randomly through space and interpolates 
        their values.
        
    Alligator Noise:
        A variation of sparse convolution which gives higher 
        frequency discontinuities.

== Boolean ==

3D Tolerance:
    #id: tol3d

    This value is used to suppress potentially incorrect geometry.  
    Any segments smaller than this value are deleted, and any 
    gaps between segments smaller than the tolerance value are joined.
    
    TIP:
        The default value is ideal for unit-sized geometry.  However, 
        if the geometry generated by the break has twigs or gaps, 
        try tweaking this value.
        
Check for Full Enclosure:
    #id: insidetest

    Enables a specific test to determine whether disconnected 
    polygons are inside or outside the cutting surface.  
    
    Turn this option _off_ when using open surfaces and _on_ 
    when using closed surfaces.
    
Assume Input is Closed:
    #id: closed

    Enables an additional test of the inside/outside boundaries 
    of the cutting surface.  

    Try turning this option _on_ 
    if the output pieces are being connected improperly.
    
Do Jitter:
    #id: dojitter

    Enables jitter on the cutting surface. Jitter causes small, 
    random changes to the cutting plane during the break.

    TIP:
        Jitter can be used to cause very fine changes in the 
        output geometry.  
        
        Trying various jitter values can help 
        to correct the output if the break generates any bad 
        geometry in the inside faces.
        
Jitter Seed:
    #id: seed

    Random number seed for jitter.
    
Amount of jitter:
    #id: jitteramount

    Scale of the jitter.

@inputs

Polygons to Break:
    The polygonal geometry that will be cut by the cutting
    surface.

Optional Cutting Object:
    If geometry is wired into the second input it will be used as
    the cutting surface, overriding the Cutting Surface setting.
    The object will be translated, but not deformed.

@related

- [Assemble|Node:sop/assemble]
- [Shatter|/shelf/shatter]
- [Clip|Node:sop/clip]
- [Cookie|Node:sop/cookie]
- [Mountain|Node:sop/mountain]

