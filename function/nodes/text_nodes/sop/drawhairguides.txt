= Draw Hair Guides =

#type: node
#context: sop
#internal: drawhairguides
#icon: SOP/drawhairguides
#tags: fur, curve, stroke

[Include:/shelf/drawhair#includeme]

@parameters

Proxy Display:
    Shows a rough representation of the hair shapes for faster update.

Skin Voxel Size:
    Defines the voxel sized used for the scalp VDB. This is used to avoid intersections with the skin.

Type:
    Controls whether to create polygon or NURBS curves.

Segments Per Guide:
    Resample all curves to this many segments.

Growth Field Quality:
    Quality of the field that hair is advected through. The minimum required voxel size is computed internally, based on the radius of your strokes. Doubling the quality value will half this voxel size.

Export Groom Field:
    Export the VDB volume along with the guide curves.

== Drawing ==

Operation:
    Draw Guides & Groom:
        Creates hairs and modifies the groom field.
    Groom Only:
        Modify the groom field without creating hairs.

Radius:
    Controls the brush radius.

Draw On:
    Skin:
        Draw onto the skin.
        
    Screen Plane From Root:
        Draw hairs in the screen plane, starting at a point on the skin.
        
    Surface Normal From Root:
        Draw hairs perpendicular to the skin, starting at a point on the skin.
        
    Screen Plane:
        Draw hairs in the screen plane. This is mostly useful with the __Groom Only__ option.

Create Roots Along Stroke:
    With this turned on, hairs will be created from any point on the skin that you draw over, as opposed to just where you first click.

Limit Curve Length:
    Limit the length of curves to the specific value below. In combination with setting __Operation__ to __Groom Only__, this lets you quickly small areas of short hair. This is useful, for tasks such as drawing eyebrows.

== Root Creation ==

Skin Group:
    The group of skin primitives to draw hair on.

Display Roots Points Only:
    Only show the created roots, not the hair curves created from them.

Guide Spacing:
    The average spacing between guide roots.

Density Scale:
    Defines density relative to guide spacing.

=== Density ===

Force Total Count:
    Ignore guide spacing and density and just scatter this many roots.

Density Attribute:
    If this attribute is found on the skin geometry, it used to scale the guide density.

Emergency Limit:
    Never generate more than this many guides.

Relax Iterations:
    Perform this many iterations of relaxation. Increasing this value produced more evenly spaced guides, but can slow down interactive drawing performance.

Percentage Of Guide to Use as Root:
    Scatter roots along this percentage of the drawn curve's length.

== Guide Advection ==

=== Shaping ===

Radius Scale:
    The radius of all drawn curves is scaled by this value. This is a global change and will affect all strokes.

Skin Normal Force:
    The strength of the force pushing hairs out of the skin geometry.

Blend Width:
    Width of the region around the skin that the __Skin Normal Force__ affects.

Inner Blend Width:
    Width of the region inside the skin that the __Skin Normal Force__ affects.

Ramp Effect:
    Controls how much of an effect the __Guide Shape__ ramp has. The closer this is to zero, the more hairs will grow straight and ignore the ramp shape.

Guide Shape:
    Controls the shape of hair grown around each stroke from root to tip.

=== Advection ===

Advection Type:
    The integration method to use for advection. The lower options are generally more accurate as well as expensive.

Length:
    Scale the length of all curves by this value.
    
    Increasing the length will only work up to the point you drew your strokes, so values far above one usually don't work.

Samples:
    The number of substeps to perform during advection.
    
    This controls the accuracy of advection, but not the final segment count. To do so, use __Segments Per Guide__.

NOTE:
    If you are interested in the technical background of hair advection techniques, please refer to the original 2013 Siggraph talk "Hair growth by means of sparse volumetric modeling and advection‚Äù by Ashraf Ghoniem and Ken Museth, DreamWorks Animation.

@related

- [Node:sop/curvegroom]
