= Each =

#type: node
#context: sop
#internal: each
#icon: SOP/each
#tags: tech

"""Culls the input geometry according to the specifications of the
For Each SOP."""

This operator is designed to work with the
[For Each node|Node:sop/foreach] to simplify the
creation of For Each networks. It can cull the incoming geometry using
similar specifications as the For Each SOP. It can also read in the
cached feedback geometry from the For Each SOP.

@parameters

Feedback :
    Determines if the cached feedback from the coupled For Each SOP
    should be used as the input rather than the wired input. The For
    Path should point to the For Each SOP to use as a source.

For Path :
    The path to the For Each SOP which will be used for feedback.
    This must point to a SOP of type For Each for feedback to work.

Cull Group :
    If a primitive group is specified, only the primitives in that
	group will be copied from the input.  If an integer is specified, 
	that primitive will be copied from the input.

Cull Attribute :
    If a primitive attribute is specified, only primitives whose
    attribute match the specified attribute value within the given
    tolerance will be copied from the input.

Value :
    The value the attribute must match to be copied from the input.
    This is commonly a stamp expression like
    `stamp("..", "FORVALUE", 0)`.

Tolerance :
    The amount the attribute is allowed to differ but still be
    considered identical for the purpose of matching.

Apply to Points:
    Instead of the __Cull Group__, __Cull Attribute__ etc. being applied to primitives, they are applied to points.  The result will be the points that meet the required filter.  

    All primitives are discarded in this process.

@inputs

Geometry to Select From:
    The input geometry to cull from. If Feedback is set to true,
    this input is only used on the first iteration of the coupled
    For Each SOP. For subsequent iterations, the geometry is fetched
    directly from the For Each SOP.

@related

- [Node:sop/solver]
- [Node:sop/foreach]
