= Block Begin =

#type: node
#context: sop
#internal: block_begin
#icon: SOP/block_begin
#tags: tech, loop

"""The start of a looping block."""

See [looping in geometry networks|/model/looping] for general information on how to use this node and [Block End|Node:sop/block_end].

@parameters

Method:
	Fetch Feedback:
        The node's input is used as the output for the first iteration, but subsequent iterations use the output of the previous iteration (that is, the output of the [Block End|Node:sop/block_end] referenced in __Block path__) to create a feedback loop. This lets you apply the same set of nodes to a piece of geometry over and over.
    
	Fetch Piece:
        At each iteration, the output is one "piece" from this node's input. A piece is defined as all elements where partition attribute such as `piece` or `name` has the same value. The piece attribute name is set on the Block End in the __Template attribute__ parameter. If no attribute exists, fetches each point or primitive (according to the __Template class__ on the Block End).
	    
	Fetch Metadata:
        Creates an empty geometry with detail attributes containing information about the current loop. You would use this in a loop created by another Block Begin in "Fetch feedback" or "Fetch piece" mode, and then reference these attributes from inside the loop using the [Exp:detail] function.
        
        See [the looping documentation|/model/looping#metadata] for how to use this.

Block Path:
    The path to the [Block End|Node:sop/block_end] representing the end point of this loop.

Create Meta Import Node:
    Create a separate node with metadata in detail attributes. You can access the attributes using the [Exp:detail] expression function. See [looping in geometry networks|/model/looping] for more information.

@inputs

Initial Geometry:
	When __Method__ is "Fetch feedback", this is the input to the first iteration. When __Method__ is "Fetch piece", this is the source of the pieces.

@related

- [Looping in geometry networks|/model/looping]
- [Node:sop/block_end]
