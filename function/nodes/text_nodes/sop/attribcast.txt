= Attribute Cast =

#type: node
#context: sop
#internal: attribcast
#icon: SOP/attribcast
#tags: attrs, tech

"""Changes the size/precision Houdini uses to store an attribute."""

== Overview ==

This changes the precision and amount of memory used to store an attribute.
You can use this to get greater precision for floating point operations at the
cost of increased memory usage, or lower precision to save memory for very
large models.

For example, if your use case can tolerate 16-bit float precision, for a point
attribute on a model with 100 million points, using `real16` would save 300 MB.

== Notes and warnings ==

* Not all operations in Houdini maintain 64-bit precision.

* Storing out-of-range values in a low-precision attribute (for example,
  storing 130 in an `int8` attribute) *does not* raise an error. Instead,
  the value _wraps around_ (for example, storing 130 in an `int8` stores
  -125).
    
  You may need to add bounds checking to your own scripts/expressions if
  necessary to work around this.

* When a script or expression reads an attribute, the attribute's value is
  converted to the usual numeric type for the scripting environment. For low
  precision attribute types, this means you can use higher precision/range for
  intermediate results before you store the value back to the attribute.

== Available storage types == (types)

table>>
    tr>>
        th>>Type name
        th>>Description
        th>>Range
    tr>>
        td>>`int8`
        td>>8 bit integer (1 byte).
        td>>-128 to 127
    tr>>
        td>>`int16`
        td>>16 bit integer (2 bytes)
        td>>-32768 to 32767
    tr>>
        td>>`int32`
        td>>32 bit integer (4 bytes)
        td>>-2147483648 to 2147483647
    tr>>
        td>>`int64`
        td>>64 bit integer (8 bytes)
        td>>-9223372036854775808 to 9223372036854775807
    tr>>
        td>>`real16`
        td>>16 bit float (2 bytes), about 3 decimal digits of precision.
        td>>Maximum value about 10<sup>4</sup>
    tr>>
        td>>`real32`
        td>>32 bit float (4 bytes), about 7 decimal digits of precision.
        td>>Maximum value about 10<sup>38</sup>
    tr>>
        td>>`real64`
        td>>64 bit float (8 bytes), about 15 decimal digits of precision.
        td>>maximum value about 10<sup>308</sup>
        
@parameters

Number of Casts:
    The number of different type conversions you want to do. Click the + button
    to add another conversion.
    
Class:
    The class of attributes to change.(vertex, point, primitive, or detail).
    
Attributes:
    A space-separated list of attribute names to change. You can also use
    patterns here. For example, `foo`, `bar*`, or `P C*`.
    
Precision:
    The new storage type for the attribute(s). See [available types|#types]
    above.

@locals

[Include:standardvariables]

@related

- [Node:sop/attribute]
- [Node:sop/attribcopy]
- [Node:sop/attribcreate]
- [Node:sop/attribmirror]
- [Node:sop/attribpromote]
- [Node:sop/attribtransfer]
- [Node:sop/point]
- [Node:sop/primitive]
- [Node:sop/vertex]
