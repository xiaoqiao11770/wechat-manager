= Deform =

#type: node
#context: sop
#internal: deform
#icon: SOP/deform
#tags: capture, character

"""Uses capture attributes created by Capture or Capture Proximity to deform outer geometry according to the movement of capture regions."""

TIP:
    This node supports the character muscle/joint/etc. deformation
    workflow. To do a cage deformation of geometry, use the
    [Lattice node|Node:sop/lattice].

Deform works in conjunction with a Capture or Capture Proximity
operation and multiple Capture Regions. The Capture\[Proximity]
operation assigns capture weights to points on a geometry. Each of these
weights refer to a Capture Region operation. As the Capture Region
moves, Deform displaces the points on the geometry according to the
point weights.

Typically one or more Capture Regions are placed in an object (usually a
bone) and named "capture_region". The object is then read into a Capture
operation through the object's hierarchy. The object is moved to deform
the Capture operation's geometry with a Deform operation.

Deform can use Linear, Dual Quaternion or mix both solutions linearly
to compute the deformation.

@parameters

Group:
    Optional point and/or primitive groups to limit the points which
    are deformed.
    
Skeleton Path Root:
    Specifies the parent path to which all the capture regions
    embedded in the capture attributes are relative to. The
    `pCaptSkelRoot` detail attribute is used by default when this
    parameter is empty. If this parameter is non-empty, it overrides
    the `pCaptSkelRoot` detail attribute in the input geometry.
    
Delete Capture Attributes:
    Delete point capture attributes to lighten the geometry data.
    
Delete Point Colors:
    Delete point color attribute to lighten the geometry data.
    
Deform Normals:
    Deforms the point normals to match the deformation of the
    points.
    
Normalize Weights:
    Normalizes the weights for each capture point so that they sum
    to 1 for deformation.
    
Fast Deform:
    This accelerates the deformation speed when the input geometry is not
    animated by using cached values for the capture attributes and
    undeformed point positions.

Assume Only Coordinate Changes In Input:
    Modifies the fast deform algorithm to assume that only point positions
    need to be re-cached when the input geometry has changed.
    Unpredictable results will occur with this enabled if attributes
    or topology changes.
    
Use Dual Quaternion Skinning:
    Enables the Dual Quaternion Skinning algorithm. Dual quaternion skinning is an alternate way of computing the deformation from bones. This method is better for deforming twisting geometry and preventing volume loss than the traditional Linear Skinning method. This is often used for body parts, such as the shoulders of characters.

Blend Dual Quaternion and Linear Skinning:
    Blends the deformation computed using both methods together based on a point attribute.
    If this checkbox is turned on, and if the Dual Quaternion Blend Attribute has a valid float point attribute, a linear blending of the point positions and normals is performed. A blend attribute value of 0.0, will use the Dual Quaternion solution. A blend attribute value of 1.0 will use the Linear solution. A blend value of 0.5 will mix both solutions together evenly.
    
Dual Quaternion Blend Attribute:
    The name of the point attribute to use when blending dual quaternion and linear solutions together.

Deform Vector Attributes:
    Deforms the vector attributes to match the deformation of the points.
    
Vector Attributes:
    Vector attributes to deform.
    
Deform Quaternion Attributes:
    Deforms the quaternion attributes to match the deformation of
    the points.
    
Quaternion Attributes:
    Quaternion (Float\[4]) attributes to deform.

@related

- [Node:sop/capture]
- [Node:sop/cregion]
- [Node:sop/captureproximity]
