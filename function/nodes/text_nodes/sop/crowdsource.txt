= Crowd Source =

#type: node
#context: sop
#internal: crowdsource
#version: 2.0
#icon: CROWDS/crowdsource
#tags: crowds, agents, source

"""Creates agent primitives for use with the crowd solver."""

== Overview ==

This node takes two inputs:

* The first input contains one or more agent definitions, as created by an [agent setup network|/crowds/setup#agent].

* The second input can be disconnected, or contain a point cloud or a surface.

    * If it's a point cloud, the node creates agent primitives at the point positions.
    
    * If it's a surface, the node scatters agent primitives across the surface.
    
    * If it's disconnected, the node scatters agent primitives within a boundary defined by parameters.

== Using multiple agent types  ==

The first input can contain multiple agent types. You can use the following methods to control which agent types are created in the crowd:

* On the __Randomize__ tab, turn on __Randomize Agent Primitive__ to have the node randomly assign different agent types to each point.

* The geometry in the second input can have an `agent_id` attribute that specifies the primitive number of an agent from the first input to use at each point.

If you don't use __Randomize Agent Primitive__ or the `agent_id` attribute, the node only creates agents using primitive `0` from the first input.

@parameters

== Setup ==

Layout:
    Shape pattern of the crowd agents created. 

    Random:
        Scatter randomly based on the number and area size. 
    Formation: 
        Create a group based on rows and columns.
Area Size:
    Size of the area that will be used to scatter agents onto.
Use Area Size for Scatter Density:
    Specifies whether to create a number of agents per unit area.
Number of Agents:
    Number of agents to create.
Number / Unit Area:
    The number of agents per unit area to create.
Random Seed:
    Used when randomly scattering agents.
Relax:
    Used to push the agents apart to prevent initial self collisions.
Density Attribute:
    Name of the attribute that stores density to be used for scattering agents.
Density Scale:
    Multiplier on the density attribute.
Match Number of Agents:
    Controls number of agents scattered using density attribute. When off number will be based on the density values; when on it will use value specified by the __Number of Agents__ parameter.

Default State:
    Initial state that the agent will be when the simulation starts.
Group Name:
    Name of the group that the agents will belong to.
Color:
    Color of the agent points and wireframe bones.
Scale:
    Size of the agent (sets `pscale` attribute on the agent point).
Min Speed:
    Initial minimum speed for the agent (m/s). This may be adjusted during the simulation by the __Animation Behavior__ settings on the [Node:dop/crowdsolver].
Max Speed:
    Initial maximum speed for the agent (m/s). This may be adjusted during the simulation by the __Animation Behavior__ settings on the [Node:dop/crowdsolver].
Max Turn Rate:
    How fast the agent is allowed to turn when changing direction (deg/sec).
Max Force:
    Maximum force that is allowed to affect the agent (values higher are clamped).
Initial Velocity:
    Initial velocity of the agent.
Heading:
    Initial direction the agents face (if initial velocity given it will override this).
Up:
    Up vector to be used for the agents.

== Randomize ==

Use the controls on this tab to randomize different attributes of the agents in the crowd. Turning on a checkbox shows controls for that type of randomization.

Randomize Agent Primitive:
    Randomly chooses an agent type from the first input for each agent in the crowd. This lets you populate the crowd with more than one type of agent. 

    Randomly chooses between the agent primitives in the input geometry. This can be used to populate the crowd with different types of agents.
    If geometry is provided for the second input, the `agent_id` point attribute can also be used to specify which agent primitive from the input geometry should be copied to each point.

    Min Primitive Number:
        The minimum primitive number.
    Max Primitive Number:
        The maximum primitive number.
    Seed:
        Seed used when randomly varying the agent primitive copied to each point.

Randomize Default State:
    This will randomize the agents' default state.

    Default State Prefix:
        Prefix part of the state name. The variations will be created by appending random numbers based on the seed and distribution parameters (`state1`, `state3`, `state8`, etc).
    Min Value:
        The minimum value for the suffix of the state name.
    Max Value:
        The maximum value for the suffix of the state name.
    Step Size:
        The generated values will be between __Min Value__ and __Max Value__, landing only on values that are some multiple of __Step Size__ greater than __Min Value__.
    Seed:
        Seed used when randomly varying the default state.

Randomize Current Layer:
    This will randomize the agents' display layer.

    Layer Prefix:
        Prefix part of the layer name. The variations will be created by appending random numbers based on the seed and distribution parameters (`variation_1`, `variation_3`, `variation_7`, etc).
    Min Value:
        The minimum value for the suffix of the layer name.
    Max Value:
        The maximum value for the suffix of the layer name.
    Step Size:
        The generated values will be between __Min Value__ and __Max Value__, landing only on values that are some multiple of __Step Size__ greater than __Min Value__.
    Seed:
        Seed used when randomly varying the current layer.

Randomize Scale:
    This will randomize the size of the agents.

    Scale:
        Specifies the default size of the agents.
    Randomness:
        Specifies how much the __Scale__ can be randomly varied by.
    Seed:
        Seed used when randomly varying the scale.

Randomize Min Speed:
    This will randomize the minimum speed of the agents.

    Min Speed:
        Specifies the default minimum speed of the agents.
    Randomness:
        Specifies how much the __Min Speed__ can be randomly varied by.
    Seed:
        Seed used when randomly varying the minimum speed.

Randomize Max Speed:
    This will randomize the maximum speed of the agents.

    Max Speed:
        Specifies the default maximum speed of the agents.
    Randomness:
        Specifies how much the __Max Speed__ can be randomly varied by.
    Seed:
        Seed used when randomly varying the maximum speed.

Randomize Max Turn Rate:
    This will randomize the maximum turn rate of the agents.

    Max Turn Rate:
        Specifies the default maximum turn rate of the agents.
    Randomness:
        Specifies how much the __Max Turn Rate__ can be randomly varied by.
    Seed:
        Seed used when randomly varying the maximum turn rate.

Randomize Max Force:
    This will randomize the maximum force that can be applied to the agents.

    Max Force:
        Specifies the default maximum force for the agents.
    Randomness:
        Specifies how much the __Max Force__ can be randomly varied by.
    Seed:
        Seed used when randomly varying the maximum force.

Randomize Initial Velocity:
    This will randomize the initial velocity of the agents.

    Initial Velocity:
        Specifies the default initial velocity of the agents.
    Randomness:
        Specifies how much the __Initial Velocity__ can be randomly varied by in each direction.
    Seed:
        Seed used when randomly varying the initial velocity.

Randomize Heading:
    This will randomize the initial direction of the agents.

    Heading:
        Specifies the default heading of the agents.
    Randomness:
        Specifies how much the __Heading__ can be randomly varied by in each direction.
    Seed:
        Seed used when randomly varying the heading.

Randomize Up:
    This will randomize the up vector of the agents.

    Up:
        Specifies the default up vector of the agents.
    Randomness:
        Specifies how much the up vector can be randomly varied by in each direction.
    Seed:
        Seed used when randomly varying the up vector.

@inputs

Agent SOP:
    One or more agent primitives, as created by the [Agent SOP|Node:sop/agent].

Custom Surface/Points:
    A surface to scatter agents across, or a point cloud representing agent positions.

@outputs

Agents:
    Agent primitives to be used in crowd simulation.

@related

- [Node:sop/agent]
- [Node:sop/agentprep]
- [Node:dop/crowdsolver]
