#type: node
#context: sop
#internal: volumeresize
#icon: SOP/volumeresize

#tags: volumes, merge

= Volume Resize =

"""Resizes the bounds of a volume without changing voxels."""

The Volume Resize operation resizes the volume bounds keeping all voxel values intact.  This avoids any filtering or blurring processes.

This is similar to cropping an image in COPs.

NOTE:
    SDF volumes that are resized outwards will produce streaked rather than the SDF boundary conditions.

[Include:no_vdb]

@parameters
Source Group:
        The volume primitives to be resized.
Combine Mode:
        Controls how the old bounding box of the volume is combined with the new reference bounds.
         
	Replace:
	        Creates new bounds that always includes the new reference.
	Intersect:
	        Includes only voxels inside of both bounds.
	Union:
	        Grows the original bounds to include the reference.
Size:
        How big of a bounding box to use if there is no second input. If a second input is provided, the bounds of that object is used instead.
Center:
        The center of the bounding box when there is no second input. If there is a second input, that geometry's bounds are used instead.
Voxel Padding:
        After computing the new bounds of the reference, this will be grown this number of voxels in each direction.  This is useful to ensure there is a padding around the edge of the new volume.  
        
        NOTE:
                This is specified in voxels, not world-space distances.
Use Point Bounds:
        Computing the bounds of the second input can be done either by the bounds of the primitives or the bounds of the points. For example, primitive sphere will only enlarge the bounds with its center point when in point mode.  On the other hand, if the volume is rotating away from the axes, the point mode will produce a tighter fit.

        NOTE:
                If there is a `pscale` attribute on the points, each point will be grown by its `pscale` attribute when bounds are computed.
Keep Data:
        Normally the original volume values will be copied into the correct locations.  However, if you plan on overwriting the data, you can save memory and time by turning off __Keep Data__ and thereby just creating an empty volume of the desired bounds.
Clip by Plane:
        When resizing camera frustum volumes or other tapered volumes, there is the risk that the reference bounding box will cross the near clipping plane.  If it does, it passes a mathematical singularity and the volume resolution grows to an infinite size.

        To avoid this, you can specify a clipping plane to snap all points to. This should be the near plane of your camera.
Clip Center:
        The center of the near plane to clip the reference volume to.
Clip Direction:
        The normal of the clipping plane.
Limit Resolution:
        The maximum resolution of the resized volume will be clipped to these values.  This avoids accidental wiring operations from triggering massive memory allocations.
Maximum Resolution:
        The maximum resolution of the resized volume on each axis.

@related
    - [Node:sop/volumevop]
    - [Node:sop/volumemix]
    - [Node:sop/volume]
    - [Node:sop/volumeresample]

