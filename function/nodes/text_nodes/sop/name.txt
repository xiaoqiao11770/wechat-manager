= Name =

#type: node
#context: sop
#internal: name
#icon: SOP/name
#tags: attrs, string

"""Creates a "naming" attribute on points or primitives allowing you
to refer to them easily, similar to groups."""

== Naming points or primitives ==

This node sets an attribute (called `name` by default) on the selected
points/primitives to a certain value. For example, you can select a
single face, or small set of faces, on some polygonal geometry, and
"name" it `foo` (that is, create a primitive attribute `name` with the
value `foo`) on the faces. You can then refer to the primitives in
subsequent nodes using `@name=foo`.

This is very similar to [groups|/model/groups]: using `@name=foo` is
similar to creating a group `foo` and referring to it using `@foo`.
However, name attributes have two differences from groups:

*   Names are more efficient than groups. For example, you can assign
    different names to hundreds or thousands of individual faces, while
    creating hundreds of groups, each with a single member, would be
    problematic.
    
*   Names enforce the constraint that each primitive can only have
    one name value at a time (that is, a primitive can't be included
    in both `@name=foo` and `@name=bar`), whereas a primitive can be
    a member of multiple groups. This constraint may be useful in
    some workflows.

Mantra uses named primitives to determine how to bind volumes to
shaders during rendering.  The [Volume Vop node|Node:sop/volumevop]
uses named primitives to determine binding if __Autobind__ is on.

== Renaming existing named groups ==

In addition to assigning names to points and primitives, you can
also use this node to rename existing named groups, using the
__Global__, __From__, and __To__ parameters. This works like
the Attrib String Edit node. See
[the help for Attrib String Edit|Node:sop/attribstringedit]
for more information.

@parameters

Attribute:
	The name of the attribute to create or edit. The default is
	`name`, the attribute name mantra and the
	[Volume Vop node|Node:sop/volumevop] look for.
    
Class:
    Whether to name points or primitives.

Name from Group:
    Assigns the name attribute to the corresponding name of the group
    the point or primitive is part of.  If it is part of more than one
    group, the behaviour is undefined.  The idea is to provide
    the inverse to the Partition SOP.

Group Mask:
    When naming from groups, only groups that match this pattern will
    be used.  This avoids other material groups overwriting your
    desired partition group.
    
Number of Namings:
    The number of naming attributes to create. Click the
    [Icon:BUTTONS/add] Add icon.
    
    Group:
		The list of points/primitives to create/edit the attribute on.
		Normally this is filled in by Houdini from the viewport selection.
		See [specifying groups|/model/groups#manual] for information on
		the format for specifying point and attribute numbers manually.
	
	Name:
		The attribute value to set on the points/primitives in the group.
	
	For example, if __Attribute__ is `name` and this parameter is
	`foo`, Houdini will create a `name` attribute on each of the
	points/primitives listed in __Group__ and set it to `foo`.
    
Enable:
    Whether to create/edit the attribute. This parameter lets you
    animate the operation of this node.

You can use the following parameters to rename existing named groups.
See [Attrib String Edit|Node:sop/attribstringedit] for more information.

Global:
    When this option is on, the __From__ pattern is replaced for each
    occurrence in the string. When off, only the first occurrence is
    replaced.
    
From:
    The string pattern to rename.
    
To:
    The replacement pattern for the __From__ string.

@related

- [Node:sop/attribstringedit]
- [Node:sop/volumevop]

