#type: node
#context: sop
#internal: polywire
#icon: SOP/polywire

#tags: polygons, curves, convert

= PolyWire =

"""Constructs polygonal tubes around polylines, creating
renderable geometry with smooth bends and intersections."""

This node works like the [Wireframe node|Node:sop/wire],
but this node creates more complex tube geometry from curves,
with smoother bends and intersections than Wireframe, especially for
[L-systems|Node:sop/lsystem].

The four numerical parameters support all the local variables of the
Point operation, plus the LSYSTEM specific variables of $WIDTH, $SEGS,
$DIV, $LAGE, $GEN, and $ARC.

TIP:
    The [Wireframe node|Node:sop/wire] works like Poly Wire, but
    creates transition surfaces where the original curve branches.

@parameters
    Group:
        The group of polygons to convert to wires.
    Wire Radius:
        #channels: /radius

        This is the radius of the wire to sweep over the polygon.
    Maximum Joint Scale:
        #channels: /maxscale

        Prevent Joint Buckling scales up the intersection points so
        that they lie on the intersection of two tubes, rather than a
        width sized sphere. This can cause the points to be scaled past
        the first segment of the tube, however, causing buckling. This
        parameter allows you to change on a point level what the maximum
        scale applied to the points is.
    Smooth Point:
        #channels: /smooth

        This is an integer value. If true for a point, the wire will
        intersect at that point with smooth manifold topology. A value of zero will leave ends uncapped.

    Divisions:
        #channels: /div

        This is the number of divisions in the circle which is to be
        swept over the polygon. It can vary on a point basis.
    Segments:
        #channels: /segs

        The number of segments to divide each edge of the polygon into.
        It can vary on a point basis.
    Segment Scales:
        #channels: /segscale

        These are how far into the segment to make the first circle and
        how far towards the end to keep going. Both values are in the
        range 0-1, where 0 is the start and 1 the end. These are segment
        specific values. The local variable $NSEG is available here for
        the number of segments in the previous parameter.
    Prevent Joint Buckling:
        This toggle when set will scale the intersection point of edges
        to avoid a collapse when sharp turns are made.
    Do Vertex Textures:
        Toggles whether vertex textures are generated for the geometry.
        For best texturing of branch points, the points of the wire
        should be ordered so the "important" side has least point
        number. For example, in a Y branch, the bottom of the Y should
        have the smallest point numbers.
    U Seam Offset:
        #channels: /uoff

        A per segment parameter which cycles how far around the tube the
        seam is placed. The seam is always snapped to the nearest
        polygon edge.
    U Textures:
        #channels: /textu

        Per segment values for the starting/ending values of the u
        texture.
    V Textures:
        #channels: /textv

        The same, but for v textures.
    Joint Up Vector:
        #channels: /upvector

        If enabled, the up vector at each joint is set to the specified
        value. This will result in twisting of the branches.
@locals
    PTDIST:
        When resolving a segment, this is the distance between the end
        points of the segment.
    NSEG:
        This is the number of segments which the segments parameter
        evaluated to for this segment.

@related
    - [Node:sop/wire]
    - [Node:sop/lsystem]

