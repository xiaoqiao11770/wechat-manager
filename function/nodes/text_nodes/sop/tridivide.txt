#type: node
#context: sop
#internal: tridivide
#icon: SOP/tridivide

#tags: polygons, subdivide, cleanup

= TriDivide =

"""Refines triangular meshes using various metrics."""

Root-3 Subdivision is a triangle subdivision scheme. It smooths the
triangular surface while subdividing, creating a smoother surface. Each
two levels of subdivision will triple the number of triangles. It also
preserves the original edges of the triangular mesh and ensures a
regular coving is made.

Edge division splits the edges of triangles. Each edge split will
result in two new triangles. The longest edges are split first. This can
help regularize an irregular mesh. The original edges and shape of the
mesh are preserved, so there is a limit to what can be accomplished.

If a second input is provided, it is used to determine the edge lengths
for the purpose of edge division. This allows one to ensure animated
geometry is divided in a consistent manner. Alternatively, one can
improve the result of a large scale deformation by doing edge splitting
of the original using the deformed geometry as a reference. Running the
deformation again will result in close to the desired lengths but use
the full accuracy of the deformation tool for intermediate points.


@parameters
    Group:
        The triangles to refine. Any non-triangles in the input group
        will be ignored.
    Root-3 Depth:
        The number of iterations of root-3 subdivision to perform. Note
        that root-3 subdivision cannot properly preserve vertex or
        primitive attributes due to the reordering of the primitives.
    Use Min Edge Length:
        Determines if the triangles will be split until a minimum edge
        length is reached.
    Min Edge Length:
        The minimum distance for any edge. Any triangle edge longer
        than this will be split in half.
    Use Number of Splits:
        Determines if the number of splits will be used to determine a
        maximum number of edge splits.
    Number Splits:
        The maximum number of edges to be split. The longest edges will
        be split first.

@related
    - [Node:sop/divide]
    - [Node:sop/polyreduce]
    - [Node:sop/subdivide]

