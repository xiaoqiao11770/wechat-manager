= Circle =

#type: node
#context: sop
#internal: circle
#icon: SOP/circle
#tags: create, model

"""Creates open or closed arcs, circles and ellipses."""

This Operation is used to create circles and ellipses. If you click and
drag the mouse, it generates a circle whose radii are specified by your
drag.

Clicking the mouse button on the Construction Plane without dragging
places a circle with radii specified in the Parameters dialog box
(default of 1) at the location of the mouse click. The radii of the
default circle are aligned with the Construction Plane's X and Y axis.

Typing ((Enter)) places a circle or ellipse whose size and position are
specified in the Parameters dialog. The radii of the default circle are
aligned with the Construction Plane's X and Y axis.

If an odd aspect ratio was previously entered in the Parameters dialog,
clicking and dragging produces circles which maintain that aspect ratio.
This can be reset by clicking on the Reset Radii button.

NOTE:
    If two NURBS circles that are non-rational (i.e. their X and Y radii are
    unequal) are skinned, more isoparms may be generated than expected. This
    is because non-rational NURBS circles parameterize their knots based on
    chord length, and the [Skin SOP|Node:sop/skin] must consolidate the
    total number of knots between the two circles before skinning.
    
    To remedy this, you may want to use a [Refine SOP|Node:sop/refine], and
    unrefine the resulting skin, or better yet, before unrefining, start
    with the same circle and use a [Primitive SOP|Node:sop/primitive] or
    [Transform SOP|Node:sop/xform] to deform the second copy before
    skinning.

[Include:/shelf/circle#includeme]
    
@parameters
    Primitive Type:
        Type of geometry created.
    Orientation:
        Orientation of the circle.
    Radius:
        #channels: /radx /rady

        These are the X and Y radii of the circle.
        Entering non-equal values in
        the xy fields results in elliptical shapes.
        
    Center:
        #channels: /tx /ty /tz

        Location of the center of the circle.
        
    Uniform Scale:
        #channels: /scale
        Uniform scaling.

    Order:
        #channels: /order

        Sets the spline order when building a circle with a Bezier or
        NURBS curve type. The lowest order is 2 (linear); the highest is
        11. Cubic curves are built by default.
        
    Divisions:
        #channels: /divs

        The number of points + 1 used to describe the circle. This
        option applies to polygons and imperfect NURBS only. The more
        divisions a circle has, the smoother it looks. Using three
        divisions makes a triangle, four divisions a diamond, five
        divisions a pentagon, and so on.
        
        For open arc types, the
        number of points will equal _Divisions + 1_, and for closed arc
        types, _Divisions + 2_. The number of points on a Bezier circle
        will be higher than the number of divisions specified, based on
        the order of the Bezier curve. The # of Divisions is ignored
        when building a perfect (rational) NURBS or Bezier circle.

        TIP:
            Set the Divisions to 3 to create
            Triangles.
        
    Arc Type:
        This menu provides you with the choices: Closed, Open Arc,
        Closed Arc, and Sliced Arc. The difference between these is
        illustrated below:

        [Image:../images/CircleSlicea.jpg]

        This option is disabled when building a perfect (rational) NURBS
        or Bezier circle. To remove a part of the rational curve later,
        you can use the [Carve SOP|Node:sop/carve].

        The Closed and Closed Arc options are primarily meant for
        polygonal circles.
        
    Arc Angles:
        #channels: /beginangle /endangle

        When making an arc rather than a full circle, these values
        specify the starting and ending points of the arc in degrees.
        This option is disabled when building a perfect (rational) NURBS
        or Bezier circle.

    Imperfect:
        Specifies whether the NURBS / Bezier circle should be built
        using rational or non-rational splines. A perfect circle has a
        rational topology: one that associates non-unit weights with
        certain vertices. Furthermore, a perfect circle has a predefined
        number and positions of CVs for any given spline order. An
        imperfect circle is non-rational and its number of CVs isn't
        that strictly determined by its order.

        Rational circles built this way yield a mathematically perfect
        shape; however, given their special definition, perfect circles
        are not always the ideal choice for further modeling of their
        points. Besides, they represent heavier geometry and may put
        more pressure both on the cpu and ram. In practice, you will
        find imperfect circles to be a better modeling choice, so it is
        advisable to build perfect circles only when perfect shapes are
        paramount.
