#type: node
#context: sop
#internal: tristrip
#icon: SOP/tristrip

#tags: polygons, convert, optimize

= TriStrip =

"""Converts polygons to triangle strips."""

== Overview ==

This node tesselates geometry into triangles and groups those triangles into longer strips. Tristripped geometry is defined as strips of alternating points rather than a list of faces with corresponding points.

A triangulated (non-tristripped) polygon mesh of 4 triangles is defined as a list of triangles and their corresponding points like this:

{{{
Polygon 0: (Point 0, Point 1, Point 2)
Polygon 1: (Point 1, Point 2, Point 3)
Polygon 2: (Point 2, Point 3, Point 4)
Polygon 3: (Point 3, Point 4, Point 5)
}}}

A tristrip of those same 4 triangles is stored like this:

{{{
Tristrip: (Point 0, Point 1, Point 2, Point 3, Point 4, Point 5)
}}}

It's very rarely possible to create a single strip for a piece of geometry,
so tristripped geometry of complex objects usually consists of many strips of
varying lengths.

== Important notes ==

- *Most editing functions in Houdini cannot work* with tristrips.

On the other hand...

- Triangle strips are faster to display and require less memory than the
  equivalent triangles. When manipulating heavy pieces of polygonal
  geometry in the viewport, you can improve interactivity by appending a
  tristrip to create proxy geometry.
  
- Tristrip geometry takes up less room on disk.
  The longer the strip, the greater the savings in storage and computation.

- Most GPUs and game engines can take advantage of tristrips. Using this
  SOP before exporting your geometry to your target platform can optimize
  your geometry for manipulation and display in real time environments.

You can convert tristrips back to triangles with the
[Convert node|Node:sop/convert].

If you are tristripping geometry which has changing topology,
the Tri Strip node may triangulate polygons differently in
different frames, causing popping of non-planar polygons. If
this is a problem, triangulate non-planar polygons first with
the [Divide node|Node:sop/divide].

@parameters

Source Group:
    The polygons that should be tristripped
Constrain Strip Length:
    Should the maximum length of strips be bounded?
Max Strip Length:
    #channels: /maxstriplength

    The maximum number of triangles in any one triangle strip

@related

- [Node:sop/convert]
- [Node:sop/divide]

