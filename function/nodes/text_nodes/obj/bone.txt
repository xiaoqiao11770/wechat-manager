#type: node
#context: obj
#internal: bone
#icon: OBJ/bone

#tags: character, bones

= Bone =

"""The Bone Object is used to create hierarchies of limb-like objects
that form part of a hierarchy ..."""

The Bone Object is used to create hierarchies of limb-like objects that
form part of a hierarchy or chain of bone objects that are parented to
one another. The movement of the chain of Bone objects is "solved" or
computed based on several methods including Inverse Kinematics. The
parenting attribute of bones is unique in that each bone attaches to the
end, not the origin, of the parent bone.

It is recommended that you use the Bones Operation, accessed through the
icons above the Viewport, to construct such a chain because placing
individual bone objects and establishing their parenting relationships
from operator to operator is extremely time consuming and not at all
intuitive. In addition, a chain created using the Bones Operation will
produce a better behaved bone chain.

By default, bones do not render. They contain two types of display
geometry: "link geometry" and "capture region geometry". The former
consists of a narrow diamond shape which has been stretched to the
length specified in Bone Length, and placed along the Bone Object's
negative Z-axis. The latter consists of two or more user-controllable
pill-shaped regions that are used to define capture regions used in
skeleton sops. You can specify whether either of the two types of
geometry are displayed.

The actual movement of the Bone objects is controlled through an IK CHOP
(when using the standard Capture/Deform model). The IK CHOP overrides
the bone rotation parameters. If you want to override this behavior,
then you need to delete the bone's channels such that they are no longer
over-ridden by chop control.

When bones are parented as children of bone objects, they are
automatically positioned at the tip of their parent bone object. If a
bone object is parented as the child of a non-bone object, it will
attach to the origin of the parent object.

[Include:/shelf/bones#includeme]

[Include:/shelf/bonesfromcurve#includeme]

@parameters

    == Transform ==

    [Include:common#keeppos]

    [Include:common#childcomp]

    [Include:common#pretransform]

    [Include:common#t]

    [Include:common#r]

    [Include:common#scale]

    [Include:common#lookat]

    [Include:common#lookatup]

    [Include:common#lookatup]

    [Include:follow_parms]

    == Bone ==

        Display Link:
            #channels: /displaylink

            Toggles the displaying of the link geometry
        Rest Angles:
            #channels: /R[xyz]

            Defines the relative weighting of rotations about the bone's
            x,y,z axis for the Inverse Kinematics solver. These values
            are relative to the bone's pre-transform. These are zero by
            default when created from the object viewer's Bones tool
            with the pre-transform rotation values defining the rest
            angles.
        Bone Length:
            #channels: /length

            Changes the length of the bone
        Kinematic Solver:
            #channels: /solver

            Specifies the CHOP node from which this bone should obtain
            its cooking rotations from. This requires that the specified
            CHOP have 3 tracks that are named as: path:rx, path:ry, and
            path:rz where path is the full path of this bone without the
            /obj prefix. This path can be obtained using the opsubpath()
            expression function.

            If this parameter is non-empty on a bone without custom
            geometry, then the display geometry of the bone will be
            different to indicate this.

        The remaining parameters on this page only affect the solutions generated by InverseKin CHOPs using one of the solvers with constraints.
                    
        Dampening:
            #channels: /ikdamp

            Affects how quickly this bone's angles can be changed.
        Angle Range:
            #channels: /begin[xyz]range /end[xyz]range

            Specifies the minimum and maximum rotation angles that this
            bone can have in each axis. (Only used by IK w/Constraints
            solver)
        Damping Angle:
            #channels: /[xyz]damp

            Applies damping to the rotation of the bone when the
            rotation in each axis falls within the specified angle of
            its minimum or maximum value. The damping occurs when the
            solved angle is within this angle value from the angle
            range. (Only used by IK w/Constraints solver)
        Damping Rolloff:
            #channels: /[xyz]rolloff

            Specifies the rate at which damping increases as the
            rotation varies within the damping angle of the minimum or
            maximum angles. This can also be thought of as the linear
            slope value at the damping angle region. (Only used by IK
            w/Constraints solver)

    == Capture ==

        Capture Region:

            Display Capture Region:
                Toggles the display of the /displaycapture capture
                region
            Capture Region Center:
                Position of the center of the bone's `/ccrcenter[xyz]`
                capture region. Note that this co-ordinate in
                object-space. Also the z component uses a bone length as
                a multiplier, thus 0.5 equals half way along the bone.
            Capture Region Rotates:
                rotation of the capture region `/ccrrotate[xyz]`
            Capture Region Scales:
                Scaling factors. Scaling is performed about the bone
                local origin in the directions of the local reference
                frame axes. `/ccrscale[xyz]`
            Capture Top Height:
                Height of the capture region from the `/crtopheight`
                center to the top cap.
            Capture Top Cap:
                X,Y,Z radii of the top hemisphere `/ccrtopcap[xyz]`
            Capture Bottom Height:
                Height of the region from the center `/ccrbotheight` to
                the bottom cap
            Capture Bottom Cap:
                X,Y,Z radii of the bottom hemisphere `/ccrbotcap[xyz]`
        Deform Region:
            This tab contains similar parameters as capture regions, but
            they are used for animation and deformation of captured
            geometry. Notably, the scaling factors can be used to squash
            and stretch the capture regions during animation.
        Capture Bone Length:
            #channels: /captposelen

            the length of a bone in the capture mode. This is the bone
            length when a bone is used for capturing geometry. Note that
            the capture mode can be turned on by selecting "Settings >
            Objects > Kinematic Override: capture" from the main menu.
        Capture Bone Translate:
            the translation of the bone in the capture mode.
        Capture Bone Rotate:
            #channels: /captposer[xyz]

            the rotation angles of the bone in the capture mode. Note
            that the bone rotation axis order is ZYX. Rotation together
            with Translate and Scale parameters form a transformation
            that positions a bone in the capture position and
            orientation with respect to the world space. The transform
            order for this transformation is Scale, Rotate, Translate.
        Capture Bone Scale:
            #channels: /captposes[xyz]

            the scaling of the bone in the capture mode

    [Include:common#material_tab]

    == Render ==

    [Include:common#display]

    == Misc ==

        [Include:misc_parms]

        [Include:common#renderable]

@related
    - [Node:chop/inversekin]

