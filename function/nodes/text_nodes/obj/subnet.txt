#type: node
#context: obj
#internal: subnet
#icon: COMMON/subnet

#tags: network, util

= Subnet =

"""Container for objects."""

You can use subnets to simplify complex networks by creating a
hierarchy. You can put multiple objects inside a subnet and use it like
an object. You can also nest subnets inside subnets.

See [more about subnets and other methods for organizing scenes|/network/organize].

@parameters

[Include:common#transform_tab]

== Subnet ==

    Input Labels:
        Labels for the four inputs to the subnetwork. These labels
        appear when you press ((MMB)) on the input connections. This
        is useful to document the purpose of each input.

    [Include:common#display]

    Output Transform:
        The object inside the subnet from which to get the subnet's
        output transform.

    Visible children:
        Space separated list of objects inside the subnet to
        display. Use `*` to make all objects visible (the default).
        You can use wildcards and  [bundle
        references|/basics/bundles]  to specify objects.

        This parameter lets you:

        * Quickly filter the visible objects based on an existing
          naming convention, for example `*_proxy`.

        * Control visibility of objects inside a locked  [digital
          asset|/assets]  where the display flags are not available.

        Otherwise, in a normal subnet you can simply go into the
        subnet and set the  [display flag|/nodes/sop]  on
        objects.

    [Include:misc_parms#picking]

    [Include:misc_parms#pickscript]

    [Include:common#cachedata]


