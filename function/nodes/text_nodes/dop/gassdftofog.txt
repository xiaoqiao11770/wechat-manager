#type: node
#context: dop
#internal: gassdftofog
#icon: DOP/gas

= Gas SDF to Fog =

"""A microsolver that converts an SDF field to a Fog field."""

The Gas SDF To Fog DOP is a microsolver used in building larger fluid
simulations. The [Fluid Solver|Node:dop/fluidsolver] and [Smoke Solver|Node:dop/smokesolver] DOPs that allow
microsolvers to be added before or after the main solver step to extend
or tweak the simulation. Alternatively, advanced users could try to build an entire new solver out of microsolvers.

The Gas SDF To Fog DOP converts an SDF field into a fog field.  Ie,
it takes a field where each voxel stores the distance to the surface,
and creates a field where each voxel stores a 0..1 value for what percentage
that voxel is inside the surface.

@parameters
Destination Field:
    Where to store the resulting fog field.  This can be a scalar, vector, or
    matrix field.  

    NOTE:
        With face-sampled vector fields, the fog value may be different for each voxel.

SDF Field:
    The signed distance field to convert.

Sampling Method:
    How to compute what percentage of the voxel is inside the sdf.
    Supersampling will take a regular grid of samples and set it to the
    percentage that are inside.  Voxel Face Area only works with face-sampled
    destination vector fields, and computes a more accurate weighting based on
    the crossing point of each face-edge.  Volume Fraction uses volume estimates
    of the tetrahedra that comprise a voxel, and gives smooth, accurate results
    at about the same cost as supersampling.

Samples Per Axis:
    The number of samples per axis when supersampling.  Total samples is the cube
    of this, so two samples per axis is actually eight samples.

Invert Sign:
    Reverse the sense of the SDF field, making values less than zero be
    considered outside rather than inside.

[Include:standard_solver_parms]

@inputs
    [Include:standard_data_inputs]

@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]


