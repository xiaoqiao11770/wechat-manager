#type: node
#context: dop
#internal: drag
#icon: DOP/drag

= Drag Force =

"""Applies force and torque to objects that resists their current
direction of motion. """

The Drag Force DOP applies force and torque to oppose a difference from a
goal motion. For solvers that apply forces to objects based on their area, the drag forces are scaled by the area of the object as measured from the
direction of the object's velocity. So a large flat object will not
experience much drag if it is moving in a direction perpendicular to the
normal of the surface.

Note that drag force is applied independently of the object's mass.
Light objects will be affected more than heavy objects. For a default
[RBD Object|Node:dop/rbdobject] you may want a drag value of 1000. If you want all objects to
experience the same rate of deceleration, regardless of mass, use the
Ignore Mass checkbox.

If the drag value is very large with respect to the timestep, some
solvers can experience instability. If you want a stable drag
independent of the object's mass, you can update the velocity explicitly
to be a multiple of the current velocity.

You can add noise to the force applied by this DOP by connecting a
[Noise Field DOP|Node:dop/noise] to the second input of this
node. Noise is added as subdata of the force data. To avoid changing the Drag
force away from the direction of motion, the [Noise Field DOP|Node:dop/noise] should have __Generate Scalar Noise__ turned on.

[Include:/shelf/dragforce#includeme]

@parameters
    Ignore Mass:
        Factor out the mass of the object when calculating the drag
        force. This causes objects of different masses to receive
        different forces, which allows them to then change velocity at the
        same rate. 

	This is useful if you have a large variety of object sizes
        and want to apply a consistent drag effect. Note that the torque
        scale is unaffected by this option - objects will continue to
        have different changes in rotational speeds as a result of the
        drag.
    Goal Velocity:
        Applied forces will oppose any difference between an object's velocity and the __Velocity__ parameter.  This can be thought of as the ambient wind direction that speeds up slow objects and slows down fast objects until they match this velocity.
    Goal Ang. Velocity:
        Applied torques will oppose any difference between an object's angular velocity and the __Angular Velocity__ parameter.
    Scale Force:
        The applied force is equal to the negative of the object's relative
        velocity, scaled by the __Scale Force__ parameter.
    Scale Torque:
        The applied torque is equal to the negative of the object's relative
        angular velocity scaled by the __Scale Torque__ parameter.
    Sampling Mode:
        Controls how the force is sampled over space.  The behavior will
        vary depending on the solver.  Fluid solvers will always sample
        per-voxel, but RBD solvers can switch between sampling only the
        centroid, only the surface, or the entire volume.
    [Include:standard_data_parms]

@inputs
    [Include:standard_data_inputs]

@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]

@related
    - [Node:dop/fluidforce]
    - [Node:dop/fieldforce]
    - [Node:dop/magnetforce]
    - [Node:dop/pointforce]
    - [Node:dop/uniformforce]
    - [Node:dop/vortexforce]
    - [Node:dop/noise]

