#type: node
#context: dop
#internal: smokeobject
#icon: DOP/smokeobject

= Smoke Object =

"""Creates an Smoke Object from SOP Geometry."""

The Smoke Object DOP creates an Smoke Object inside the DOP simulation.
It creates a new object and attaches the subdata required for it to be a
properly conforming Smoke Object.


@parameters

== Properties ==

[Include:standard_gas_divisions]

Closed Boundaries:
    The velocity field can be clamped to prevent any smoke from
    entering or leaving the box. 
    
    If closed boundaries is not
    set, the velocity on the boundary will be allowed to vary,
    allowing smoke to leave the box.
    
== Creation==

[Include:standard_objcreation]



== Instancing ==

Creates a smoke container for every point found on either the creation frame or the current frame being processed (using __Continuous__).
By default, the container is created at the point's center position. The size is defined by the point's `scale` vector attribute.
If no `scale` attribute is found, the container will revert to the default __Size__.

Create Objects From Points:
    Enables instancing.
    `init_cluster` data gets added to every created smoke object. The number given can be controlled through the point's `cluster` attribute. This data can be generated using the [Cluster Points|Node:sop/cluster] operator.
    If the `cluster` attribute isn't specified, the point number is taken. This number is used by the [Source Volume|Node:dop/sourcevolume] microsolver to fetch the correct volume information from SOPS.
Override Container Size:
    Use the point attribute `scale` to control the size of the container.
    The center is defined by the point's position. When disabled or not found, the default parameters __Size__ and __Center__ are available to control the container's size and position.
Override Division Size:
    Use point attribute `divsize` to control the division size for every instanced object. If the attribute is not found, the default __Division Size__ is used.
Number of Objects:
    If __Create Objects From Points__ is turned off, the number of objects to be created on the creation frame is defined here.
    The default is one.
Instance Points:
    The node containing point geometry to instance points on.
Continuous:
    Creates a smoke object for every point found on every iteration. So be careful enabling this. By default, instancing occurs only once for every point found on the creation frame.
    When objects need to be created on the fly, use __Continuous__. Make sure to only have points present when an object needs to be created, such as on impact, and delete/remove the point afterward. This can be done using a timeshift operation to compare the point's existence to the frame before.

== Guides ==

Each of the fields that define the smoke simulation can be
visualized in a number of ways.  The help for the [Scalar Field
Visualization|Node:dop/scalarfieldvisualization] or [Vector Field Visualization|Node:dop/vectorfieldvisualization] provides more
details about how these work.

== Initial Data ==

Density SOP Path:
    This is a path to the SOP that will be used to initialize
    the density subdata. It should be a volume object, such as
    that generated by the [Iso Offset SOP|Node:sop/isooffset] with the __Output Type__ set to __Fog Volume__.

Scale:
    The per-path scale option lets you pre-scale the SOP
    volumes before they are applied.  For example, this is very useful for
    boosting the initial temperature amounts.
    
Temperature SOP Path:
    The SOP to initialize the temperature data with. The
    temperature field is used by the internal buoyancy forces in
    the [Smoke Solver|Node:dop/smokesolver].
    
Fuel SOP Path:
    The SOP to initialize the fuel data with. The
    fuel field is used by the old combustion model in [Smoke
    Solver|Node:dop/smokesolver].
    
Velocity SOP Path:
    The path to the SOP that will initialize the velocity of
    the smoke.  It should be three volume primitives which
    store the X, Y, and Z components of the initial velocity
    field.
    
    Use Object Transform:
        When sampling, the density SOP determines if the relative
        transform between the density SOP and the DOP simulation
        should be taken into account.
        
    Wind Tunnel Direction:
        The velocity field will be initialized to this constant
        external value. Furthermore, its end conditions will be set
        to this value. This can create a wind-tunnel type effect.
        
        A non-zero external direction will allow smoke to leave the
        box, even if closed boundaries are set, as the boundary
        velocity will be clamped to the non-zero value.

Border Type:
    The behavior when the field is sampled outside of its
    defined box.

    Constant:
	    The initial value will be returned.
	    
    Repeat:
	    The field will wrap, returning values from the
	    opposite side of the field.
	    
    Streak:
	    The value at the edge of the field closest to the
	    sample will be returned.
	    
Add Rest Field:
    Adds an extra field called "rest" which can be used to
    store rest positions for shaders.

Scale Rest Res:
    Scales the resolution of the rest field.  Using a lower
    resolution rest field both reduces memory requirements of
    the rest field and also stiffens the rest field. 

Velocity Sampling:
    Controls the sampling pattern of the velocity field.
    
    Center:
        Uses faster but less accurate Gauss Seidel iterations.
        
    Face:
        Use the slower but more accurate PCG method.
        
    The other choices in the menu are only included because
    they are provided by the [Vector field DOP|Node:dop/vectorfield].

[Include:standard_fluidpositionpath]

== Fields ==

    While every attempt is made to ensure unused fields have a minimal
    footprint, for some applications it may be necessary to
    minimize the number of extra fields created.  Each field can be
    disabled from this list.  

    NOTE:
        The smoke and pyro solvers may expect these fields and stop working if they are missing.

    TIP:
        The __Heat__ field is manipulated by Smoke Solvers and Pyro Solvers. You can stamp the heat field with the current source mask or burn field. It then moves passively with the fluid and decays linearly over time. 

        It can be thought of as "Time since this voxel was added to the system", but it starts at 1 for just added and falls to 0 after a user specified number of seconds. 

== Slice ==

[Include:standard_gas_slice]

@outputs

First:
    The Smoke object created by this node.
    
@locals

[Include:standard_locals]

@related

- [Node:dop/smokeconfigureobject]
- [Node:dop/smokesolver]
- [Node:dop/scalarfieldvisualization]
- [Node:dop/vectorfieldvisualization]
- [How to visualize the temperature field of a smoke object|/pyro/visualizetemp]
- [How to move smoke with an object|/pyro/movesmoke]
