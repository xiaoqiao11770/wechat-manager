#type: node
#context: dop
#internal: gasdsdsolver
#icon: DOP/gas

= Gas DSD Solver =

"""A microsolver that applies the flamefront-based fire simulation."""

The Gas DSD Solver DOP is a microsolver used in building larger fluid
simulations. The [Fluid Solver|Node:dop/fluidsolver] and [Smoke Solver|Node:dop/smokesolver] DOPs that allow
microsolvers to be added before or after the main solver step to extend
or tweak the simulation. Alternatively, enterprising people may attempt
to build an entire new solver out of microsolvers.

The Gas DSD Solver DOP evolves a flame front according to detonation
shock dynamics.  This allows interesting cellular patterns to evolve
along the flame front.  This works with fields that are created by the
GAS DSD Configure Object.

The flamefront fire works by defining the active burning region as a
thin flame front represented by the SDF flamefront.  Every timestep
the flamefront shrinks along its normal according to the flamespeed
stored in the d field.  Counteracting this, the interior of the flame
front is inflated according to the source and flame divergence values.
Variations in the flamespeed field, d, are created by the detonation
shock dynamics causing the flamefront to evolve into interesting
shapes.

The flamefront represents the blue cone of the fire.  Outside of this
is the cooling flame - the traditional black-body white, orange, red
curve.  To represent this each voxel tracks how long it has been since
it was in the flame front (and thus at full heat).  The age field is
set to 1 for voxels that cross the flame front and decrease for when
they leave according to the cooldown rate.

Objects with a source relationship will union themselves with the
flamefront, ensuring the flamefront contains at least the source
objects.

@parameters
    Source Divergence:
	The flamefront will be pushed out proportional to the volume
	of the source objects times this scalar factor.
    Flame Divergence:
	The flamefront will be pushed out proportional to the area of
	the flamefront times this scalar factor.
    Cool Down Time:
	How long in seconds it takes for the age field to decay from
	one to zero. This parameter does not affect the flame height, it controls the decay rate of the heat field. You can get the same effect by adjusting the render parameters rather that resimulating. 
    Reinitialization Rate:
	Since the flamefront is represented by a signed distance
	field, numerous steps of animation may cause it to smear away
	from a proper SDF.  This governs how often it gets reset to a
	proper distance field. It will be reset every this many frames.
	
	This keeps the shape of the shape of the flamefront but changes the far away voxels to correctly store distances. Since advancing the flame front is done by simply adding a constant to the field, it is important to reset the distance. 
	
    Goal Flame Speed:
	The rest flamespeed speed that the d field will be driven to. Basically, how fast the flamefront contracts/how fast the fuel burns.
    Elasticity:
	How strongly the flamespeed field will return to the goal flame speed.
    Elastic Damping:
	Dampings the elastic force reducing oscillations around the
	goal flame speed.
    Curvature Forcing:
	A scalar factor for how much effect the curvature field has on
	the flame speed field.
    Curvature Damping:
	Dampens the effect of curvature forcing to reduce
	oscillations.
    C5, Mu Theta: 
	Material parameters controlling the scale of the dynamics. They affect how the springs are run for the curvature forcing.
    [Include:standard_gas_timestep]
    [Include:standard_solver_parms]

@inputs
    [Include:standard_data_inputs]

@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]

@related
    - [Node:dop/gasdsdconfigureobject]
