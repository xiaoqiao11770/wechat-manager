#type: node
#context: dop
#internal: whitewateremitter
#icon: SHELF/whitewater

= Whitewater Emitter =

"""A POP solver that generates particles for the Whitewater Solver."""

The Whitewater Emitter emits volumetric particle clouds based on the input from a SOP Source, usually a [Whitewater Source|Node:sop/whitewatersource] node.  It is designed to be used as input to the [Whitewater Solver|Node:dop/whitewatersolver].

@parameters

== Birth ==

This operator has two methods for emitting particles. You can
use these methods together or separately:

* *Impulse* creates a certain number of particles for each input particle each time the node cooks.

* *Constant* creates a certain number of particles per input particle per second.

Impulse Count:
    #channels: /impulserate

    Number of particles to emit each time the node cooks.

Const. Birth Rate:
    #channels: /impulserate

    Number of particles to emit per second.

Emission Attribute:
	The specified attribute can be used to control whether a point is
	replicated or not.  This attribute should be a float value to represent
	the probability of replicating the source point.

Seed:
	The seed used to generate random particle clouds.

Just Born Group:
    Name of a group to put the new points into.  The particles will only be in this group the same substep that they were created.

Life Expectancy:
    #channels: /life
    How long the particle will live (in seconds).

    NOTE:
	      When used as input to the [Whitewater Solver|Node:dop/whitewatersolver], the __Life Expectancy__ will typically be overwritten for each different particle type as specified in the solver.

Life Variance:
    #channels: /lifevar
    Particles will live the number of seconds in __Life
    expectancy__, plus or minus this number of seconds. Use 0 for no
    variance.

== Shape == (shape)

Shape:
	The shape of the generated point cloud before transformation to each 
	input point.

Velocity Offset:
	The distance along the velocity vector to replicate the particles, ranging from 0 at the beginning of the velocity vector to 1 at the end.

Velocity Stretch:
	A scale applied to the input point speed before stretching the particle clouds along the velocity vector.

Uniform Scale:
	A uniform factor applied to the replicated point cloud scale, in addition
	to any scaling attributes on the input points.

== Noise == (noise)
Add Noise:
	Add noise to the replicated point cloud in local space.  The noise
	will respect the input point's `rest` attribute if present.

Noise Type:
	Specifies the noise type.

Frequency:
	The scale of the noise. Decreasing frequency increases feature size.

Offset:
	Allows the noise field to be effectively moved through space.

Amplitude:
	The amplitude of the noise.

Roughness:
	The amplitude reduction of higher frequency noise contributions.

Attenuation:
	Raises the noise to the given exponent.

Turbulence:
	The number of noise generations to use.

== Attributes ==

The parameters on this tab let you control which and how attributes are initialized on the emitted particles. 

Initial Velocity:
    How to set the initial velocity of the emitted particles.


    Use inherited velocity:
        Use the inherited velocity attribute as the initial velocity
        of the particles.
    Add to inherited velocity:
        Add the inherited velocity attribute to the values from the
        __Velocity__ and __Variance__ parameters below.
    Set initial velocity:
        Set the initial value of the velocity attribute using the
        __Velocity__ and __Variance__ parameters below.

Inherit Velocity:
    #channels: /inheritvel

    When __Initial velocity__ is __Use inherited velocity__ or __Add
    to inherited velocity__, this is the proportion of the inherited velocity
    to use. Use `1` for the full inherited value, `0.5` to half the
    inherited value, and so on.

Radial Velocity:
	The proportion of the velocity in the radial direction to inherit.

Velocity:
    #channels: /velx /vely /velz

    Set or add to velocity attribute.

Variance:
    #channels: /varx /vary /varz

    Variance to velocity set above. The node will add +/- from 0 to
    this number along each axis to the __Velocity__ parameter.

== Stream ==
    [Include:popCommonParms#streamnameParms/]
