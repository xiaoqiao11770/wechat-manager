#type: node
#context: dop
#internal: affector
#icon: DOP/affector

= Affector =

""" Creates affector relationships between groups of objects. """

The Affector DOP creates affector relationships between groups of
simulation objects. An affector relationship is what allows some objects
to affect other objects.

For example, in an RBD simulation of a stack of bricks, all the bricks
should affect each other, and all the bricks should be affected by the
ground. The ground, however, should not be affected by the bricks. These
relationships can be established by using a [Group DOP|Node:dop/group] to create a group for the bricks and another Group DOP to create a group for the ground.
An Affector DOP would then be used to say that the ground group affects
the bricks group, and that the bricks group affects the bricks group.

An affector relationships where a group affects itself is called a
mutual affector relationship, and causes the group involved to become a
mutually affecting group of objects. This means that every object in the
group affects every other object in the group. When objects are mutually
affecting like this, solvers must treat them differently than in one way
affector relationships.


@parameters
    Activation:
        When this parameter value is zero, this node does nothing. 
        
        This parameter is evaluated only once per timestep, not once for each
        object. Thus object-specific local variables are not available
        for use in this parameter or any other in this node.
    Number of Relationships:
        The number of affector relationships this node will create. For
        each relationship, a pair of parameter values specify the groups
        involved in the relationship.
    Affector Group #:
        The name of the simulation object group that contains the
        affector objects.
    Affected Group #:
        The name of the simulation object group containing the objects
        that will be affected by the affector objects. 
        
        If this parameter is the same as the Affector Group parameter, then the specified group becomes a mutually affecting group.
@inputs
    First:
        The objects with groups that will take part in the affector
        relationships are connected through the single input.
@outputs
    First:
        The exact same set of objects that feed into the input are sent
        out through the single output.
@locals
    [Include:standard_locals]


@related
    - [Node:dop/group]

