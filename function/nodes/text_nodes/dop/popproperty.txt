#type: node
#context: dop
#internal: popproperty
#icon: POP/property

= POP Property =

"""A POP node that sets various common attributes on particles."""

The POP Property node adds various common POP attributes to particles.

This operator modifies the `pscale`, `mass`, `spinshape`, `bounce`, `friction`, `dynamicfriction`, `drag`, `dragcenter`, `dragshape`, `dragexp` and `cling` attributes.

@parameters
[Include:standard_pop_parms#commonMain/]

== Physical ==
Uniform Scale:
    The size of the particle.  This is used when instancing to the particle to scale the instance geometry.  It is also used by collisions to detect when a particle hits an object.
Mass:
    The inertia of the particle, causes all forces to be scaled by this so more massive particles react less to the same force.
Spin Shape:
    The rough shape of the particle, which determines its rotational inertia.  This forms the principal axes of an ellipsoid, which is further scaled by `pscale` to get an idea how the particle should spin from torques.
Bounce:
    How much a particle bounces off a surface.  The collision object's bounce parameter is multiplied by this.  Similar to [Gain Normal|Node:pop/collision] in old POPs.
Bounce Forward:
    How much a particle bounces forward off a surface.  The collision object's bounce forward parameter is multiplied by this.  Similar to [Gain Tangent|Node:pop/collision] in old POPs.  A value of 1 will retain all forward direction.  A value of 0 will bring instantly to stop in the tangential direction.  A value of -1 will cause retro-reflection.  A value of 2 will add energy with every bounce.
Friction:
    How much an impact should slow down the particle in the tangent direction of the impact.  The friction of the other object is also taking into account.  
    
    NOTE:
        You can have a friction coefficient per particle, but not per collision object.
        
Dynamic Friction:
    The friction value is scaled by this if the particle is determined to be sliding rather than bouncing.

== Dynamics ==

Drag:
    When a particle is dragged by the `targetv` and `airresist` attributes, it also uses this attribute to further scale the drag amount.

Drag Exponent:
    Higher drag exponents cause particles that are far from the target velocity to recover faster than those that are already close to the target velocity.  This also affects spin-drag.

Drag Shape:
    Describes per-direction drag coefficients.  These should be proportional to the area of the cross section of the particle when seen down each of the axes.  The first component is how much to drag the particle along its local X-axis, the second the Y-axis, and so forth.

Drag Center:
    A local offset from the center of mass where the center of drag lies.  This allows drag forces to be applied other than at the center of the mass, so objects will twist.

Cling:
    When a paritcle is sliding, this forms a force applied back to the surface
    of the object that it is sliding on.  Higher numbers will make it harder
    for particles to escape the surface they are sliding on.


== Bindings ==

[Include:standard_pop_parms#bindingsParms/]

@inputs
    [Include:standard_pop_inputs]

@outputs
    [Include:standard_pop_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]

@related
