#type: node
#context: dop
#internal: rbdsolver
#icon: DOP/rbdsolver

= RBD Solver =

""" Sets and configures a Rigid Body Dynamics solver. """

The RBD Solver DOP sets objects to use the Rigid Body Dynamics solver.

If an object has this DOP as its "Solver" subdata, it will evolve
itself as an [RBD Object|Node:dop/rbdobject].

This solver makes extensive use of volumetric representations of
object. It is recommended that the object's geometry have a [Volumetric
Representation DOP|Node:dop/volume] attached to it to allow this
representation to be tailored to the needs of the geometry.

This solver uses the "Position" subdata, which it expects to be the
type generated by a [Motion DOP|Node:dop/motion] or [Position
DOP|Node:dop/position].

The Stack solver requires a total number of passes equal to Collision
Passes + (Contact Passes + Shock Propagation) * SubContact Passes.

== Notes ==

- RBD simulation processes all collisions at the start of the time step
  rather than at the exact time that the collision occurs. This simplifies
  complicated interactions, but can result in visual artifacts. A fast
  moving object may appear to bounce back from a surface before it reaches
  it, for example, as the impulse from hitting the surface is applied to
  the objects position at the start of the time step.

  Increasing substepping will reduce these artifacts by ensuring 
  the object is closer to the surface when the collision is detected.

- Increase substepping if objects move large distances within a single
  frame. An object should move less than half of its smallest important
  feature in a single step to avoid temporal aliasing problems.

  Increase the __Maximum Substeps__ to allow the automatic substep
  calculation to determine the right substepping to avoid temporal aliasing.
  This is a function of the velocity of your objects and the resolution of
  the volume representation of those objects. It is then scaled by the CFL
  condition - a smaller CFL condition will result in more substeps.

  Increasing the __Minimum Substeps__ can ensure that the substepping never
  takes fewer than the given number of substeps. This is required if
  deforming collision geometry is used because the collision geometry is not
  taken into account in the automatic sub step computation.

@parameters

[Include:rbd_solver_collisions]

[Include:rbd_solver_substeps]

[Include:standard_solver_parms]

@inputs

[Include:standard_data_inputs]

@outputs

[Include:standard_data_outputs]

@locals

[Include:standard_data_locals]

[Include:standard_locals]


