= POP Steer Path =

#type: node
#context: dop
#internal: popsteerpath
#icon: CROWDS/popsteerpath
#tags: crowds behavior

"""Applies force to agents/particles according to directions from a path curve."""

This is a [crowd behavior|/crowds/states] node, but you can also use it on regular particles (see the __Output attribute__ parameter).

TIP:
    Once agents reach the end of the curve, they will continue to alternately move along the direction at the last point and be pulled back by the __Path variance__, making them bounce around the end of the curve. You can avoid this by using a [bounding box trigger|/crowds/triggers] at the end of the curve to put agents that reach the end into a new state.

@parameters

[Include:crowd_steer_parms]

SOP Path:
	Path to an object or geometry node containing the path curve (for example, `/obj/geo1/curve1`).
    
Method:
    How the node uses the curve to influence agent movement.
    
    Curve lookup:
        Agents find the closest point on the curve, take the forward tangent direction at that point, and apply force in that direction to the agent.
    
    Curve point walk:
        When an agent first "locks on" to the path, it finds the closest control point on the curve, and remembers the control point's point number in an attribute. From then on, it uses the curve direction at the control point, and increases the point number when near the next control point on the curve (for example, use the curve tangent direction at point 2 until the agent is closer to point 3). This method allows you to use self-intersecting paths.

Resample Path:
    When __Method__ is "Curve point walk", use a set of regularly spaced control points along the curve instead of using the actual control points from the curve geometry. This is usually the best option unless you've specifically placed the control points of the curve with path following in mind.

Segment Length:
    When __Method__ is "Curve point walk" and __Resample path__ is on, the spacing of the points along the curve to use.

Reverse Direction:
	Act as if the direction of the curve was reversed when computing directions. (You can "actually" reverse a curve using the [Reverse geometry node|Node:sop/reverse].)
    
Force Scale:
	The strength of the path direction force.

Constraint Force:
	How much force is applied to make the agents/particle maintain their initial distance to the curve.

Search Radius:
	The maximum distance (in meters) agents will look for the path.
    
Anticipation:
	How far ahead to look for path changes. The higher the number, the earlier agents/particles will begin turning in response to upcoming bends in the curve.

Path Variance:
    The maximum distance (in meters) the agent/particle is allowed to be from the initial distance before the node begins to apply the __Constraint force__ to move it back toward the curve.

@related

- [/crowds/]
