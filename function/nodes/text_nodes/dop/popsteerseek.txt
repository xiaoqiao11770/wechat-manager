= POP Steer Seek =

#type: node
#context: dop
#internal: popsteerseek
#icon: CROWDS/popsteerseek
#tags: crowds behavior

"""Applies force to agents/particles to move them toward a target position."""

This is a [crowd behavior|/crowds/states] node, but you can also use it on regular particles (see the __Output attribute__ parameter).

TIP:
    To make agents chase the nearest goal: Use the [Attribute Transfer geometry node|Node:sop/attribtransfer] to set up attributes on the goal points that contain the particle ID of the closest agent. Then set __Match method__ to "Point per particle" and set __Goal ID__ to the attribute you created with Attribute Transfer.

@parameters

[Include:crowd_steer_parms]

== Goal ==

Attraction Type:
    Position:
        Enter a set of "goal" coordinates for agents to move toward.
    
    Particles:
        Specify a group of dynamics particles. Agents will move toward particles in that group.

    Points:
        Specify point geometry. Agents will move toward the those points.
    
    Surface Points:
        Specify surface geometry and UVW coordinates on that surface for the agents to move toward.

Goal:
    When __Attraction type__ is "Position", the 3D position agents should move toward.
    
Point Group:
    When __Attraction type__ is "Particles", the name of a group of dynamics particles to use. Leave this blank to use all particles in the system.

SOP Path:
    When __Attraction type__ is "Points", the path to an object or geometry node containing the point geometry (for example, `/obj/bird_locations`).

Point Group:
    When __Attraction type__ is "Points", the name of a group of points within the geometry to use. Leave this blank to use all points.

Match Method:
    When __Attraction type__ is "Particles" or "Points", whether agents should move toward individual points or the _average location_ of all points.
    
    Average position:
        Move agents toward the average position of all goal points. (You can also specify a number of clusters to get multiple goal "averages".)
    
    Point per particle:
        Match up agents/particles with goal points based on the value of attributes on each. For example, if __Particle ID__ is `foo` and __Goal ID__ is `bar`, then agents/particles will follow whichever goal point has the same value in the `bar` attribute as the agent/particle has in the `foo` attribute.

Number of Clusters:
    When __Match method__ is "Average position", group the goal points into this many clusters. Agents will move toward the centroid of the nearest cluster.

Particle ID:
    When __Match method__ is "Point per particle", the name of the attribute on the agent/particle to match up with a goal.

Goal ID:
    When __Match method__ is "Point per particle", the name of the attribute on the goal to match up with the agent/particle.

== Force ==
    
Force Scale:
	How much force to apply toward the agent's goal point.
    
Maximum Distance:
	Maximum distance (in meters) to look for goal.

Arrival:
	Stop the agents/particles once they are near the goal position.

Braking Distance:
	When __Arrival__ is on, the distance (in meters) at which agents/particles start to slow down.
    
Braking Scale:
	When __Arrival__ is on, how fast the agents/particles slow down once they reach their goal.

Pursuit:
	Agents/particles chase the goal by anticipating where it will be.
    
Prediction Factor:
	When __Pursuit__ is on, how many time steps to look ahead when predicting the course of the goal.

@related

- [/crowds/]
