Enable Embedding:
    #channels: /enableembedding

    Turns on/off the use of embedded geometry.

Embedded Geometry:
    #channels: /embeddedgeometry

    The embedded geometry allows you to add extra detail to a simulation without having to directly simulate that extra detail. This option allows an embedded geometry to deform and fracture along with the simulated geometry. The deformation is smooth (better than barycentric) to ensure that there are no visible discontinuities when the embedded geometry is much more detailed than the simulated geometry. In addition, the embedded geometry is automatically fractured along with the simulated geometry, when the simulated geometry fractures.
    
    The point positions of the embedded geometry are computed for every simulation frame, based on the deformation of the simulated geometry. In addition to positions, velocities and point/vertex normals adapted to the deformation as well. The transformation of embedded point/vertex normals is useful for rendering purposes. The embedded velocities tend be useful when rendering the results of a simulation using motion blur.
    
    Normals on the embedded geometry are deformed only when the normal attribute `N` is found on the Embedded Geometry. Both point and vertex normals are supported. The simplest way to use this feature is to put a [Normal SOP|Node:sop/normal] on the incoming Embedded Geometry.
    
    The embedding workflow preserves the information that is generated by the directly simulated geometry; embedding geometry in itself gives identical results. Small, local deformations are not smoothed away.

    For best results, make sure the geometry is entirely covered when embedding geometry inside a tetrahedral mesh.

    The embedded geometry may consist of tetrahedrons and polygons or a mix of these two.  When internal fracture surfaces are desired, the embedded geometry must have tetrahedrons or polygons near the regions where the simulated geometry fractures.

    The embedded geometry is not directly simulated. No internal forces are computed for it and no collisions are detected for it. The best results are obtained if, on object creation, the embedded geometry is completely contained inside the simulated geometry, when the simulated geometry points are in their initial rest positions (the rest positions at the object creation time).

    When the `fracturepart` primitive attribute exists on the simulation geometry, an attribute with the same name may be added on the embedded geometry as well to control how the embedded geometry fractures.
