#type: include

Number of Substeps:
    The number of substeps for each simulation step, used by Bullet internally. Increasing this number will increase the resolution of the simulation.
    
    In Bullet's documentation:
    
    {{{
	maxSubSteps = substeps + 1
	fixedTimeStep = timeStep / substeps
	}}}
	
    Houdini adds 1 to `maxSubSteps` to account for roundoff errors during division when substeps > 1.
    
    See [Stepping the World|http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World].

==Constraint Solver==

    Use Parallel Constraint Solver:
        Specifies whether the Bullet engine will use a multi-threaded constraint
        solver instead of the default single-threaded constraint solver. The
        constraint solver is used by the Bullet engine to resolve collisions and
        constraints, so enabling this setting should improve the performance of
        most simulations.
        
        However, the multi-threaded constraint solver behaves differently than the
        single-threaded constraint solver in several ways\:
        - The __Split Impulse__ and __Penetration Threshold__ parameters are not supported.
        - Objects tend to lose less energy in collisions versus the single-threaded constraint solver.

    Constraint Iterations:
        The more iterations you use, the more accurate the constraint and collision handling will be.
        
        See [Advanced constraint solver settings|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo].

    Contact CFM:
        Increasing the CFM (constraint force mixing) parameter will make
        contact constraints softer, and may increase the stability of the
        simulation. Contact constraints may be violated by an amount
        proportional to this parameter times the force that is needed to
        enforce the constraint.

    Contact ERP:
        Specifies what proportion of the constraint error for contact
        constraints will be fixed during the next simulation step. If ERP
        (error reduction parameter) is set to 0, constrained objects will drift
        apart as the simulation proceeds. If ERP is set to 1, the solver will
        attempt to fix all constraint error during the next simulation step
        (however, this may result in instability in some situations). A value
        between 0.1 and 0.8 is recommended for most simulations.

    Randomize Constraint Order:
        Specifies that the constraints should be randomly reordered before each
        of the __Constraint Iterations__. This may improve stability, but
        incurs a minor performance hit.

    Split Impulse:
        Tries to make interpenetrating objects split without adding velocity (to keep objects from explosively flying apart).
        
        See [Split Impulse|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse].

    Penetration Threshold:
        __Split Impulse__ only applies when objects interpenetrate by more than this distance. This number should be negative (representing less than 0 distance between the objects).
        
        See [Split Impulse|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse].

    Split Impulse ERP:
        Overrides the __Error Reduction Parameter__ for contact constraints
        where the penetration distance is within the __Penetration Threshold__
        and __Split Impulse__ is enabled.
