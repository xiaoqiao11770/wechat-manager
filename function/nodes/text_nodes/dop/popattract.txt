#type: node
#context: dop
#internal: popattract
#icon: POP/attractor

= POP Attract =

"""A POP node that attracts particles to positions and geometry."""

The POP attract node applies a force to particles to steer them towards a target location.

This operator modifies the `force` attribute.

[Include:/shelf/dynamics_popattract#includeme]

@parameters

[Include:standard_pop_parms#commonMain/]

== Goal ==

Attraction Type:
    Each particle is attracted to a goal position.  This determines how that position is computed for each point.

    Position:
        The __Goal__ parameter is used.
        
    Particles:
        A subset of particles inside _this_ simulation is used.  The __Match Method__ is used to determine how they are targeted.  This can be used to have some particles chase lead particles.
        
    Points:
        A subset of points in an external geometry is used.  The __Match Method__ determines how they are targeted.
        
    Surface Points:
        Points on the surface of an external geometry are targeted. This is useful if you want to target a point along a curve, for example.

Goal:
    The desired goal location.  This is used in __Position__ mode, and can be referred to in the other modes using Local Expressions.

[Include:standard_pop_parms#geoSourceParms/]

Point Group:
    The subset of points to use for targeting. This is not restricted to the current stream when in __Particles__ mode.
        
Match Method:
    How the cloud of target points are assigned to each of the particles.

    Average Position:
        The positions of all the target points are averaged and that becomes the target.  If __Number of Clusters__ is greater than 1, the cloud is divided into different regions using K-Means clustering and points are assigned to their closest cluster.
        
    Point per Particle:
        Each particle is assigned to one point to follow.

Number of Clusters:
    In __Average Position__ mode, how many clusters are formed.  It is considerably slower to have more than one cluster.

Particle ID:
    When matching points and particles, this integer attribute is used to determine the match number on the particle.  If the attribute doesn't exist, the point number is used.

Goal ID:
    When matching points and particles, this integer attribute is used to determine the match on the goal geometry.  If the attribute doesn't exist, the point number is used.  If the point number is used, __Particle IDs__ greater than the number of destination
    points will wrap around.

    If a point attribute is used and the __Particle IDs__ cannot be found in the point attributes, attraction is disabled.

Primitive:
    In __Surface Points__, this controls which primitive whose surface point will be the goal.
    
UVW:
    The parameteric position on the surface.  This is NOT a texture uv coordinate.

== Force ==

Force Method:
    Accelerating:
        A force is applied in the direction of the goal.  If it is within the reversal distance, a force outwards is applied.

    Follow:
        The velocity of the next frame is towards the goal with the speed set to be equal to the leader.

    Predict Intercept:
        Particles will try to predict the leader's direction on the next frame and head it off.

Force Scale:
    The applied force is set to the normalized difference between the particle's position and the goal position.  It is then scaled by this force scale.

Reversal Distance:
    Particles within this distance will experience a repulsive, rather than attractive, force.  At exactly the reversal distance the force is zero, growing until it reaches an additional __Peak Force Distance__.

Peak Force Distance:
    As particles are farther from their target, the force will keep increasing.  This marks the distance at which they stop increasing based on distance.  At this distance their force will be set by the `forcescale`.

    This distance is added to the __Reversal Distance__.

Minimum Distance:
    Particles closer than this value to the goal will be slowed to a stop.
    
Maximum Distance:
    Particles farther than this value from their goal point will receive no forces.
    
Ambient Speed:
    If the goal speed is less than this value, this speed will be used instead as the goal speed.

Speed Scale:
    Scaling factor for the target speed.

[Include:popCommonParms#massParms/]

== Bindings ==

[Include:standard_pop_parms#bindingsParms/]

@inputs

[Include:standard_pop_inputs]

@outputs

[Include:standard_pop_outputs]

@locals

[Include:standard_data_locals]

[Include:standard_locals]

@related
- [Node:dop/popflock]
- [Node:dop/popinteract]
- [Node:dop/popmetaballforce]
