#type: node
#context: dop
#internal: staticobject
#icon: DOP/staticobject

= Static Object =

"""Creates a Static Object from SOP Geometry."""

The Static Object DOP creates a static object inside the DOP simulation. It
creates a new object and attaches the subdata required for it to be a
static object that interacts nicely with all other solvers. 

The position and
velocity of this object is extracted from the animated transformation
parameters of the source object. Thus a static object is not necessarily
stationary. It can move through the simulation, and even deform, but is not
affected by other objects in the simulation.

[Include:/shelf/staticobject#includeme]

@parameters

Creation Frame Specifies Simulation Frame:
    Determines if the creation frame refers to global Houdini
    frames (`$F`) or to simulation specific frames (`$SF`).  
    
    The latter is affected by the offset time and scale time at the
    DOP network level.
    
Creation Frame:
    The frame number on which the object will be created. The
    object is created only when the current frame number is equal to
    this parameter value. This means the DOP Network must evaluate a
    timestep at the specified frame, or the object will not be
    created. 
    
    For example, if this value is set to 3.5, the
    __Timestep__ parameter of the DOP Network must be changed to
    `1/(2*$FPS)` to ensure the DOP Network has a timestep at frame
    3.5.
    
Object Name:
    The name for the created object.  This is the name that shows up
    in the details view and is used to reference this particular
    object externally.  
    
    NOTE:
        While it is possible to have many objects with the same name, this complicates writing references, so it is recommended to use something like `$OBJID` in the name.

SOP Path:
    #id: soppath
    
    The path to a SOP (or an Object, in which case the display SOP
    is used) which will be the geometry for this object. This
    parameter can also be a list of Object or SOP paths, and can
    include wild card specifications or operator groups or bundles.
    
    If multiple Objects or SOPs match this string, a separate
    simulation object will be created for each matching SOP.

Primitive Group:
    #id: primgroup
    The name of a primitive group within the SOP geometry. If this
    is set, the primitives in that group are copied to make new
    geometry owned by the DOP simulation. Otherwise the SOP geometry
    is referenced rather than copied.

OBJ Path:
    #id: objpath
    The path to the object that is used to control the motion of the
    static object. The animated world space transformation of this object
    is used to position this object, and calculate its velocity.

Use Deforming Geometry:
    #id: animategeo
    Causes the geometry for the object to be pulled from the chosen
    SOP at each timestep. If the SOP contains animated geometry, the
    static object's geometry will also animate.

Re-evaluate SOPs to Interpolate Geometry:
    #id: letsopsinterpolate
    Normally when a solver asks for geometry data in a sub-step, the
    simulation will simply linearly interpolate position data from integral
    frames. However, this is not exact. Turning this option on re-evaluates
    the geometry network for each substep. This is more accurate, but can
    be very expensive.  This setting affects the __Proxy Volume__ geometry
    as well if set.

Use Object Transform:
    #id: usetransform
    The transform of the object containing the chosen SOP is
    applied to the geometry. This is required if there is scaling
    applied to the source geometry at the object level. 
    
    If the object level scaling is animated, the __Use Deforming Geometry__ parameter must also be turned on.

    NOTE:
        An rbd-like object in DOPs, whether static or rbd, has two transforms. One is part of its Geometry subdata, and the other is defined by the Position data. The RBD Solver manipulates the Position data one, which does not support scaling. If you want scaling, it has to go through the Geometry transform.

Create Active Object:
    #id: active
    Sets the initial active state of the object. An inactive object
    doesn't react to other objects in the simulation. 
    
    If a static object
    is made active, it should be connected to a [Static Solver|Node:dop/staticsolver]. This solver
    causes the static object to behave as if it were inactive.

Display Geometry:
    Controls if the geometry is displayed in the viewport.  Does
    not reset the simulation when it is changed.

== Physical ==

    [Include:standard_physparms]

[Include:standard_rbdvolume_parms]

[Include:standard_ode_parms]

[Include:standard_bulletdata_parm]

@outputs

First:
    The static object created by this node is sent through the single
    output.

@locals

[Include:standard_locals]

@related

- [Node:dop/staticsolver]
- [Node:dop/groundplane]
- [Node:dop/terrainobject]

