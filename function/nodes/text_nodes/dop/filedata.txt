#type: node
#context: dop
#internal: filedata
#icon: DOP/filedata

= File Data =

The File Data DOP allows a single piece of data to be saved and/or
loaded from a file on disk. All simulation data is saved to files with
the extension `.simdata`, regardless of the data type. This is because
any data type can be saved or loaded by this one DOP node. Therefore it
is a good idea to add a second extension to describe the data type when
saving files (such as `.Volume.simdata` for Volume data).


@parameters
    Operation Mode:
        #channels: /mode

        Indicates the mode of operation for this node.

        Automatic:
            In this mode, the File Data DOP looks for a file that
            matches the specified name. If one is found, it behaves as
            if it were in Read mode. Otherwise it behaves as if it were
            in Write mode. 

	    Note that this mode does not pay any
            attention to changes made to the network. Hitting the Recook
            __Simulation__ button will not cause a File Data DOP in this
            mode to overwrite files that already exist. To force objects
            in this network to recook and write out updated files, you
            must delete the existing files on disk. 

	    You can also change
            the file mode to __Write Files__ to update the simulation, and
            then change back to Automatic.
        Read Files:
            In this mode the File Data DOP looks for a file with the
            specified name, and loads it. If no matching file is found,
            this node behaves as if it were in No Operation node. 

	    The
            data in that file is attached to the object using the Data
            Name parameter.
        Write Files:
            In this mode the File Data DOP will write the specified
            file to disk. Any existing file will be replaced. 

	    The data
            written to disk is either the data attached by the node on
            the second input (if there is one) or the data attached to
            the object with the name specified in the Data Name
            parameter.
        No Operation:
            In this mode, the File Data DOP behaves as if it were
            replaced by the node connected to the second input, and does
            no file operations. 

	    The data connected to the second input
            is attached to the objects, and any data connected to the
            third or subsequent inputs will still be attached as subdata
            to this second input data.
    File:
        #channels: /file

        The name of the file to which the data should be written. This
        should usually be an expression involving the data type, and
        possibly the object identifier and simulation frame number. 
	
	This
        file name is evaluated for each object to which this data is
        being applied, so it can contain object-specific local variables
        such as OBJNAME.
    Create Intermediate Directories:
	Create intermediate parent directories for output files as needed.
    Load or Save New Data Only:
        Turning on this option causes this node to load or save files
        only on the first simulation timestep in which the data was
        created. 
	
	For Read mode, this means a file is only loaded if no
        data with the specified name currently exists on the object
        being processed. 

	In Write mode, this means that a file is
        written to disk only if the input data was created this
        timestep.
    [Include:standard_data_idparms]

@inputs
    First Input:
        This optional input can be used to control which simulation
        objects are modified by this node. Any objects connected through
        this input and which match the Group parameter field will be
        affected. 

	If this input is not connected, this node can be used
        in conjunction with an Apply Data node, or can be used as input
        to another data node to create subdata on the data rather than
        an object.
    Second Input:
        The meaning of this optional input depends on the mode of
        operation. When in No Operation mode, this node behaves as if it
        were replaced by the node connected to the first input. So the
        objects processed by this node will get passed to the node
        connected to this input to attach data to them. 

	When in Write
        mode, the objects being processed by this node are passed to the
        node connected to this input just as in No Operation mode. In
        addition, the data attached by this input is the data that will
        be written to the file on disk. If this input is connected, the
        Data Name parameter of this node is ignored, and the data name
        from the input node is used. 

	When in Read mode, the data
        connected to this input is ignored. However, the input node is
        still set as the creator node for the data read from disk, and
        the Guide Options on the input node are used for drawing guide
        geometry.
    All Other Inputs:
        Other data nodes can be attached to act as modifiers for the
        data created or attached by this node. 

	The specific types of
        subdata that are meaningful vary from node to node. Whether
        using this node in Read, Write, or No Operation mode, subdata
        should be attached to this node rather than the node on the
        second input. Otherwise the subdata may not be built as
        expected.
@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_locals]


