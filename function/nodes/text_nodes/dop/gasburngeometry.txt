#type: node
#context: dop
#internal: gasburngeometry
#icon: DOP/gas

= Gas Burn Geometry =

"""Sets the object to use the Gas Burn solver. """

Attaches the solver required for burning Gas Burn Geometry Objects.
This solver will use a fuel point attribute and turn it into a source
volume describing where the fire should burn.  In addition to
consuming the fuel attribute, it also uses the temperature to control
if the fuel should combust at all.

If point attributes are not present, the default values specified in
the parameters are used instead.  In the case of the fuel attribute,
this means that the fuel will never run out.  Each of the default
parameters can be overridden by a point attribute of the same name.

If an object has this DOP as its "Solver" subdata, it will evolve
itself as a Gas Burn Geometry object.

To setup an object with the requisite subdata, use the [Gas Burn
Geometry Object Configure DOP|Node:dop/gasburngeometryobject].


@parameters

== Fields ==

Surface:
    The scalar field to store the result of the burn
    simulation in.  The resulting signed distance field is
    negative wherever the object should burn and positive
    outside.

Reference flame:
    The scalar field used as a reference to determine the
    resolution and location of the created surface field.
    This should match the Flamefront Dest field in the Gas Burn
    Geometry Object.

Temperature:
    The optional scalar field to copy onto the point values to
    determine the per-point temperatures for the purpose of
    ignition.  This should match the Temperature Dest field in the Gas
    Burn Geometry Object.

== Defaults ==

Fuel:
    The amount of fuel on each point.  One unit of fuel will
    be completely burned in Fuel Time seconds.

Temperature:
    The default temperature for each point, usually overridden
    by the temperature field.

Ignition Temperature:
    A point will only burn if its temperature exceeds the
    ignition temperature and it still has fuel.

Ignition Range:
    A point will not fully burn until its temperature is
    ignition range higher than the ignition temperature.

== Flame Properties ==

Flame Height:
    Controls how far from the surface a fully burning point
    will extend the source iso surface.  A fully burning
    object will have a thin shell of this distance around all
    of its surface geometry.

Fuel Time:
    How long it takes one unit of fuel to fully burn, in
    seconds.

Limit Flame Extrapolation:
    If you have dense geometry and high resolution flame grid
    you may notice that excessive time is spent in the
    extrapolation stage.  This is usually unnecessary as only
    the distance up to the flame height needs to be
    initialized to the burn values.  However, note the
    Geometry Spacing option.

Geometry Spacing:
    If flame extrapolation is limited, the influence of points
    is capped to a certain distance.  If points are too far
    away from each other, however, this could leave holes in
    large polygons.  Geometry spacing should be set to the
    maximum distance between connected points to ensure these
    holes are covered.  Since this is difficult to automate,
    the flame extrapolation is unlimited by default.

== Fuel Merging ==

Fuel Merge:
    None:
        Copies and fuels attribute from the source object on the first frame.  However, it will ignore any subsequent changes.

    Copy:
        Sets the local fuel value to the source value every frame when __Deforming Geometry__ is enabled on the source object. This is useful for animated fuel maps.

    Add:
        The fuel attribute will accumulate with whatever is in the source geometry.

Fuel Blend:
    Controls how to blend the source fuel point attribute into
    this object's fuel attribute. 

    If __Fuel Merge__ is set to __Copy__, this controls the mixing amount.  0 will keep this object's fuel attribute unchanged, 1 will copy from the source object, and 0.5 will blend the two. 

    If __Fuel Merge__ is set to __Add__, this pre-multiplies the source object's fuel attribute before adding into this object's fuel attribute.

[Include:standard_solver_parms]

@inputs
[Include:standard_data_inputs]

@outputs
[Include:standard_data_outputs]

@locals
[Include:standard_data_locals]

[Include:standard_locals]


