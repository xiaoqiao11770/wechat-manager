#type: node
#context: dop
#internal: gascollisiondetect
#icon: DOP/gas

= Gas Collision Detect =

"""A microsolver that detects collisions between particles and geometry."""

The Gas Collision Detect DOP is a microsolver used in building larger fluid simulations. The [Fluid Solver|Node:dop/fluidsolver] and [Smoke Solver|Node:dop/smokesolver] DOPs that allow microsolvers to be added before or after the main solver step to extend or tweak the simulation. Alternatively, advanced users could try to build an entire new solver out of microsolvers.

The Gas Collision Detect DOP does swept-point collision detection between the given set of points and the collision target.  This uses the same algorithm as the DOPs normal collision detection, but rather than bouncing the points, it stores the collision information into attributes.

@parameters

Geometry:
    The list of geometry to perform collision detection with.
    This can be a space separated or globbed list. 

    If the geometry is not a Geometry Copy, it will be converted into one so
    that it can be changed by this solver.

Point Group:
    An optional point group to specify which points will be collided.

Collision Target:
    What geometry to do collision detection with.  This must be a quad and tri mesh.  The mesh can be deforming, in which case its connectivity must remain constant.

    Relationship:
	All DOP Objects with this relationship (as usually defined by Merge DOPs) to this object will be tested.

    DOP Objects:
	A specific list of DOP objects within _this_ simulation will be tested.

    SOP:
	Use specific SOP.

    Use Xth Context Geometry:
	Use one of the SOPs wired into this DOP network.

Relationship:
    The type of relationship to do collision detection with.

DOP Objects:
    A list of DOP Objects.  Patterns like `*` can be used to match multiple objects.  These refer to objects inside of this simulation.

SOP Path:
    The path to a SOP to fetch geometry from.

Use Deforming Geometry:
    The geometry at the beginning and ending of the particle's
    motion will be fetched and swept to allow proper collision
    during the geometry's motion.  However, if the geometry has
    changing point counts this cannot be done, and instead only
    a single frame should be used.

Reset Hit Number:
    If set, the hit number attribute will be cleared out for all
    points prior to doing the collision detection.  Otherwise
    the number of hits will just accumulate.
    
Add Hit Num Attribute:
    Adds the integer attribute `hitnum` that stores the number
    of times the particle has collided.
Add Hit Pos Attribute:
    Adds the vector attribute `hitpos` that stores the position
    that the particle collided.
Add Hit Normal Attribute:
    Adds the vector attribute `hitnml` that stores the normal
    of the geometry at the time of the collision.
Add Hit Velocity Attribute:
    Adds the vector attribute `hitv` that stores the velocity
    of the geometry at the time of the collision.  For SDF collisions
    this will use the point velocity, so either point numbers should
    be consistent or point velocity attributes present.
Add Hit Time Attribute:
    Adds the float attribute `hittime` that stores the time
    in seconds of the collision.
Add Hit Path Attribute:
    Adds the string attribute `hitpath` that stores the object
    that the particle collided.  This is an op: path usable
    in VEX.
Add Hit Prim Attribute:
    Adds the integer attribute `hitprim` that stores the primitive
    hit by the particle.  -1 if the primitive cannot be determined.
Add Hit UV Attribute:
    Adds the vector attribute `hituv` that stores the parametric
    coordinates of where the primitive was hit.  This is not
    texture uvs.

Default Particle Size:
    To allow robust collision detection the particles are treated
    as finite-sized spheres.  By default `pscale` is used, but if 
    the `pscale` attribute is missing then this size is used.

    SDF collisions will use 0 for `pscale` if it is missing as they
    can unambiguously determine which side they are on.

Use PScale for SDF:
    Uses the `pscale` attribute to collide with SDF collision objects.
    For backwards compatibility, the default is to ignore `pscale` with
    these collisions.

PScale Is Radius:
    For non-SDF collisions, controls if the `pscale` attribute is treated
    as radius or a diameter.

[Include:standard_solver_parms]

@inputs

[Include:standard_data_inputs]

@outputs

[Include:standard_data_outputs]

@locals

[Include:standard_data_locals]

[Include:standard_locals]

@related

- [Node:dop/gasimpacttoattributes]
