#type: node
#context: dop
#internal: matrixfield
#icon: dop/matrixfield

= Matrix Field =

"""Creates a matrix field."""

The Matrix Field DOP creates a Matrix Field data that can be attached
to simulation objects and manipulated by solvers.  A Matrix Field is
an axis-aligned box divided into individual voxels.  Each voxel is
giving a 3d matrix. The entries thus can encode an affine
transformation, such as stretch, shear, or rotation.

@parameters
    [Include:standard_gas_divisions]

    Voxel Sampling:
        The overall box will be divided into the specified number of
        small boxes, or voxels.  
	
	However, the question remains where
        on these voxels the field's matrixs should be stored.

        Center:
            The matrix will be stored at the center of each voxel.  The
            total number of samples thus matches the number of boxes.
        Edges:
            The diagonal elements of the matrix are stored in the
            center of the cell, but the off diagonal will be stored on
            the corresponding edges.
        Corner:
            The value will be stored on the corners of each voxel.
            
	    The number of samples will be one higher in each dimension
            than the division count to contain all the boundary
            values.

    Border Type:
	The behavior when the field is sampled outside of its
	defined box.

	Constant:
	    The initial value will be returned.
	Repeat:
	    The field will wrap, returning values from the
	    opposite side of the field.
	Streak:
	    The value at the edge of the field closest to the
	    sample will be returned.
    Initial Value:
        When first initialized, the matrix field will be set
        uniformly to this value.
    Tolerance:
        The absolute tolerance to use for lossy compression of the
        matrix field.  

	This can reduce memory usage by detecting
        constant areas or using a lower bit-depth representation.  A
        value of 0 only allows lossless compression.
    Use 16bit Float:
	The tiles will be stored using a 16 bit float rather than 32
	bit float.  This uses half the memory, but at the cost of
	reduced precision and increased computation.  

	NOTE:
		All computations are still done in 32 bit floats.

    [Include:standard_gas_slice]

    [Include:standard_fluidpositionpath]

@outputs
    [Include:standard_data_inputs]

@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]

@related
    - [Node:dop/matrixfieldvisualization]
