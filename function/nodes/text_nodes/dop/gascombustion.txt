#type: node
#context: dop
#internal: gascombustion
#icon: DOP/gas

= Gas Combustion =

"""A microsolver that applies a combustion model to the simulation."""

The Gas Combustion DOP is a microsolver used in building larger fluid
simulations. The [Fluid Solver|Node:dop/fluidsolver] and [Smoke Solver|Node:dop/smokesolver] DOPs that allow
microsolvers to be added before or after the main solver step to extend
or tweak the simulation. Alternatively, enterprising people may attempt
to build an entire new solver out of microsolvers.

The Gas Combustion DOP applies a combustion model to a set of fields.
This is designed to simulate the burning of fuel with the
corresponding release of heat, gas, and soot.

@parameters

Enable Soot:
    Whether to add burnt fuel to the specified soot field.  If set, the __Soot
    Rate__ is used to scale how much soot is output from each unit of burnt fuel.

Normalize Burn Field:
    The burn field stores the amount of fuel burned in the last
    timestep.  This will vary with the size of the timestep.
    Normalizing the burn field will divide by the timestep,
    storing the amount of fuel burned per second rather than
    instantly.

Timescale:
    While all the combustion effects are scaled by the timestep, you can
    further scale them by this timescale to allow for slow motion behaviors.

== Settings ==

Ignition Temperature:
    #id: ignitiontemp
    
    The combustion model will only occur if the temperature
    field is above this value.  If you want all fuel to
    instantly ignite, use a negative value.

Burn Rate:
    #id: burnrate
    
    The amount of fuel to burn per second.  This is a
    ratio: 0.9 means after one second 90% will be burned.

Fuel Inefficiency:
    #id: fuelinefficiency
    Controls how much of the burned fuel is actually not burned,
    but kept.  0 means all burned fuel is removed from the fuel
    field.  1 means that no fuel is removed from the fuel field
    when it is burnt.

Temperature Output:
    #id: heatoutput
    
    The amount to increase the temperature field by for every
    unit of fuel consumed.

    This is affected by both the heat and burn fields, as per the influence
    parameters.

Gas Released:
    #id: gasrelease
    
    A scale factor controlling how much gas is injected into
    locations where fuel is burnt.  This causes burning areas
    to blow outwards.

    The gas release is scaled by both the heat and burn fields
    according to the influence parameters.

Gas Heat Influence:
    The degree to which the gas release is controlled by the heat field.

Gas Burn Influence:
    The degree to which the gas release is controlled by the burn field.

Temp Heat Influence:
    The degree to which the temperature output is controlled by the heat field.

Temp Burn Influence:
    The degree to which the temperature output is controlled by the burn field.

Soot Rate:
    The amount of soot that will be created for every unit of
    fuel burnt.  This is added to the density field that is
    usually rendered as smoke.

== Mappings ==

Temperature Field:
    The scalar field to use for temperature calculations.  This is
    used to trigger combustion by comparing to the ignition
    temperature.  It is also updated from the __Temperature Output__.
    
Fuel Field:
    The scalar field representing the fuel in the gas.  This is
    transformed into heat, soot, and gas release.
    
Soot Field:
    The scalar field tracking the amount of soot that has been
    generated.
    
Divergence Field:
    A scalar field representing how much gas is released in each
    voxel by the reaction.  This is the burn field multiplied by
    the gas released value.
    
Burn Field:
    A scalar field representing how much fuel was burned in this
    timestep in each voxel.  It could be used to track things such
    as light output, etc.

Heat Field:
    A scalar field of the heat of the simulation.  This is set to
    the heat influence whereever the fuel is burning.  It is maximized against
    the previous heat field, and can be used to track the cooling of the air
    over time without affecting the simulation behaviour.

== Advanced ==

[Include:smokesolver#opencl]
    
@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]



