#type: node
#context: dop
#internal: merge
#icon: DOP/merge

= Merge =

""" Merges multiple streams of objects or data into a single stream.
"""

The Merge DOP takes any number of separate streams of objects or data
and merges them into a single stream. Data and objects cannot be merged
into a single stream. All inputs must be object streams, or all inputs
must be data.

Merging objects does not imply any relationship between those objects.
However, for convenience, the Affector Relationship
parameter can be turned on to create affector relationships between the
different streams of objects. The same functionality can be achieved
with Group and Affector DOPs, but many more nodes would be required.
Objects with the Intangible Value set will not have a relationship
created by a merge node.

When merging data, any connection to this node's output will be treated
as if every input of this node is connected to it. This is useful when
dealing with digital assets which provides only a single data input but
to which you may wish to attach several pieces of data. 

Similarly, this
node can be used to allow a digital asset to output several pieces of
data through a single data output. This node also provides a convenient
visual method of grouping several pieces of data into a single stream
for easier wiring.

NOTE:
    Bypassing this node disables the relationship calculations and
    only processes the first input.

@parameters
    Activation:
        When this parameter value is zero no relationships will be
        added.  When it is one, the Affector Relationship will control
        the addition of relationships.  In any case, the objects are
        merged into a single stream.
    Affector Relationship:
        If this node is merging streams of simulation objects, this
        parameter sets up affector relationships between the objects.

        No Change:
            No new affector relationships are created between the input
            objects.
        Left Inputs Affect Right Inputs:
            Given a series of inputs 1, 2, 3, and so on, the objects
            connected to input 1 become affectors for the objects on
            inputs 2, 3, and so on. The objects at input 2 become
            affectors of the objects at input 3 and beyond. Using this
            option will cause the input objects to be solved in the
            order in which they are connected to this node.
        Mutual:
            All objects on all input streams become mutual affectors.

    Relationship:
        When merging streams of objects, this determines what sort of
        relationship should be created between the streams.  Useful
        choices are:

        None:
            No affector relationship is created - the same as setting
            No Change in the Affector Relationship field.
        Constraint:
            Used internally to define two objects that have a
            constraint between them.
        Pump:
            Affected objects will set their local velocities to match
            the velocity of the source object.  Applies to fluid
            objects.
        Sink:
            Affected objects will delete their volume where it
            contacts the affectors.  Applies to fluid objects.
        Group:
            Used internally to make objects part of the same group.
        Collide:
            Affected objects will respond to collisions from affector
            objects.
	Target:
	    A place holder affector for user defined effects.
	    Used by the [Gas Target Forces|Node:dop/gastargetforce].
        Source:
            Affected objects will use the affector objects as sources
            for operations such as creating liquid or smoke density.
        Empty:
            Enforces a particular solve order - affected objects will
            be solved after affector objects - but no other intrinsic
            meaning.  

	    This is useful when SOP Solvers refer to other
            objects creating a dependency that isn't visible to the
            DOP Engine.

@inputs
    All:
        All the objects or data connected to the inputs of this node
        are fed out through the single output.
@outputs
    First:
        All the objects or data connected to the inputs of this node
        are fed out through the single output.
@locals
    [Include:standard_locals]


@related
    - [Node:dop/null]
    - [Node:dop/split]
    - [Node:dop/switch]
    - [Node:dop/intangiblevalue]

