#type: node
#context: dop
#internal: vopforce
#icon: DOP/vopforce

= VOP Force =

"""Applies forces on the objects according to a VOP network. """

The VOP Force DOP uses a CVEX shader to determine the force to apply
on the objects.  The CVEX shader can be defined as a .vfl file, a
Shop, or by building a CVEX VOP network inside this node.  The last is
the most straightforward approach.

The CVEX shader accepts as inputs the position, velocity, angular
velocity, and mass.  It outputs the force and torque that should be
applied.  The VOP Force Globals and VOP Force Output VOPs setup these
parameters for you.

@parameters

== Vex Setup ==
    
        Vex Source:
                Where to get the CVEX script from.  Myself will refer to the VOP network built inside this node.  SHOP will use the __Shop Path__ and __Script__ will load the .vex file specified in the script.

	Shop Path:
                The CVEX Shop to apply.

                This can also point to any node that contains a CVEX Vop Network.
	    
                NOTE:
                        Referenced nodes parameters will be used.

	Script:
	    The CVEX script to apply.

	Re-load VEX Functions:
	    When in script mode, this reloads any .vex files to
	    account for updates made outside of Houdini.

	Compiler:
	    The command line used by VOPs to compile the inside of
	    this node.

	Force Compile:
	    Trigger a recompile of the VOP network.

    [Include:standard_force_parms]
    [Include:standard_data_parms]

@inputs
    [Include:standard_data_inputs]

@outputs
    [Include:standard_data_outputs]

@locals
    [Include:standard_data_locals]

    [Include:standard_locals]


