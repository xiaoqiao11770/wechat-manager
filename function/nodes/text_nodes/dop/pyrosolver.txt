#type: node
#context: dop
#internal: pyrosolver::2.0
#icon: DOP/pyrosolver
#version: 2.0

= Pyro Solver =

"""Sets and configures a Pyro solver. This solver can be used to create both fire and smoke."""

The Pyro solver is an extension of the [Smoke Solver|Node:dop/smokesolver]. If you just want to generate smoke without combustion (flames), you might consider using the Smoke Solver since it's a little simpler, however the Pyro solver is more flexible.

See [how to use the [Pyro tools|/pyro/pyro] for information on creating simulations using the shelf tools. See [Pyro look development|/pyro/pyro_look] for information on using the parameters to achieve different flame and smoke looks.

[Include:smokesolver#setup]

@inputs

* [Include:smokesolver#object_input]
* [Include:smokesolver#presolve_input]
* [Include:smokesolver#velupdate_input]
* [Include:smokesolver#advection_input]
* [Include:smokesolver#sourcing_input]

@parameters

== Simulation ==

These parameters control how the simulation develops over time. See [how pyro simulations work|/pyro/pyro] for information on how the temperature and velocity fields drive the simulation to a great extent.

Timescale:
    #id: timescale_global

    A scaling factor for time inside this solver. `1` is normal speed, greater than `1` makes the pyro sim appear speeded up, less than `1` makes the pyro sim appear to be in slow motion.

    You can use expression functions such as [Exp:doptime], [Exp:dopframe],[Exp:dopsttot], and [Exp:dopttost] to convert between global times and simulation times.

    NOTE:
        Changing the __Timescale__ only affects the timestep of the simulation. If adding velocities calculated in SOPs to the simulation for collisions or pumps with the [Source Volume DOP|Node:dop/sourcevolume], scale the incoming velocities by `1 / Timescale` to match the timestep of the simulation.
	
Temperature Diffusion:
    A Gaussian blur factor on the temperature field. Higher values spread the temperature out more and create a less sharply defined effect and more cooling. For example, a value of `2 `will blur the temperature field by a radius of 2 every second.
    
    (The real-world motivation for this parameter is to simulate turbulence at a finer scale than the sim's resolution, which spreads the field out.)

Cooling Rate:
    How fast the temperature field cools to zero. A value of 0.9 will decrease
    the temperature of hot gas by 90% (to 10% of its original value) every
    second.
    
    WARNING:
        This is the inverse of the __Cooling Rate__ parameter in Houdini 11 and lower versions.

Viscosity:
    The "fluid-ness" of the velocity field. Higher values make neighboring voxels have the same velocity, creating a more flowing look. A value of `0` allows adjacent voxels to move any direction without resistance, creating a more chaotic, turbulent look.
    
    (Inside the solver, higher viscosity values introduce a penalty when a voxel's velocity varies from that of its neighbors. This is currently implemented by applying a diffusive term to the velocity field.)

Buoyancy Lift:
    An upward force at each voxel scaled by the difference between the ambient temperature and voxel's temperature, so hotter areas will get more lift and cooler areas will sink. Increasing this makes the effect rise faster and go higher.

Buoyancy Dir:
    The direction in which buoyancy is applied.  This is usually the Up direction of your simulation, but often can be altered to quickly tweak the look of a sim.
    
== Combustion ==

The combustion model takes the fuel field and turns it into burn, temperature, and density (smoke).

Enable Combustion:
    Enables the combustion model for the Pyro Solver. If this is off, the fuel field and everything else related to burning is ignored.

* [Include:gascombustion#ignitiontemp]
* [Include:gascombustion#burnrate]
* [Include:gascombustion#fuelinefficiency]
* [Include:gascombustion#heatoutput]
* [Include:gascombustion#gasrelease]

=== Flames ===

Options controlling the flames (heat).

Flame Height:
    Scaling factor for flames. Higher values give taller flames, lower values give smaller flames. This value is not measured in any unit (it is not the height of the flames in Houdini units), it simply affects the amount of cooling applied to the flames.
    
    Very low values will not necessarily result in very small flames, since the cooling factor will often not be enough to counteract a hot temperature field.
    
    The inverse of this value (multiplied by the cooling field, see below) is subtracted from the heat field, so lower values give more cooling and smaller flames.
    
    You can use the cooling field controls below to vary the flame height value based on the value in a field (by default the temperature field). 
    
Cooling Field:
    When enabled, the values in the given field (by default, `temperature`) are used to vary the flame's cooling rate across the container.

Cooling field range:
    The range of values in the control field to map onto cooling amounts.
    
Remap heat cool field:
    The ramp's vertical axis is _amount of cooling_ and the horizontal axis is the _value in the control field_. For example, the default ramp's shape, which is high on the left and low on the right, applies more cooling where the temperature is low.

=== Smoke ===

Options controlling the emission of smoke/soot (density).

Emit Smoke:
    Enables the emission of smoke/soot from burning objects.
    
Create Dense Smoke:
    Adds smoke to the system without considering how much smoke is already present. This is good for heavy explosions or big plumes of smoke. When this option is off, smoke is only added up to a certain maximum amount in each voxel, giving a lighter, less dense smoke.

Source:
    Where the smoke is emitted. The best choice is usually "Heat", which is more realistic and prevents the smoke from obscuring the flames at source.

    Burn:
        Emit smoke at the point of flame ignition (the burn field) and nowhere else.
        
    Heat:
        Emit smoke wherever the flames cool to a certain value.
    
Smoke Amount:
    Scales the amount of smoke to be added. The base smoke value depends on the value in the field set by the __Source__ parameter (burn or heat).
    
Heat Cutoff:
    The value of the heat field at which smoke is emitted. This option is only available when __Source__ is "Heat". For example, if __Heat cutoff__ is `0.2`, smoke appears where the heat field is `0.2` or cooler. The __Blend amount__ parameter controls what happens above the heat cutoff point.

Blend Amount:
    Increasing this parameter gives a smoother fire-to-smoke transition by adding a falloff above the __Heat Cutoff__ value. This option is only available when __Source__ is "Heat".
    
    The value controls the blend between the full amount of smoke being added at and below the __Heat cutoff__, and no smoke being added at the highest heat (`1.0`). A value of `0` adds no smoke above the heat cutoff. A value of `1` blends from adding full smoke at the cutoff point, through decreasing amounts of smoke at higher heat values, up to the highest heat. 
    
    [Image:/nodes/images/pyro_smoke_blend_amount.png]

=== Fuel ===

Options controlling the influence of fuel.

Advect Fuel:
    When this option is off (the default), fuel is stationary and is not affected by the velocity field. When this option is on, the fuel field as advected just like temperature, heat, and density. Turning this option on makes results more unpredictable and is also slower to calculate.

Fuel Speed:
    The maximum speed at which fuel can move by advection.

== Shape == (shapetab)

The parameters on this tab control the shape and development of the flame/smoke. All except dissipation affect the velocity field as internal forces.

Remember that the resolution of the [Smoke object|Node:dop/smokeobject] determines how much detail you can get in the fire/smoke. However, the pyro solver is largely resolution independent, so you can often work in low resolution and then bump up the resolution with similar, more detailed results.

Houdini includes two different ways to add turbulent noise to fire: _shredding_ and _turbulence_.

* Shredding is the main way to add "high frequency" noise to flames. It squashes and stretches the velocity field to create the licks and flows typical of fire.

* You should use the turbulence to add "low frequency" noise: rolling, churning, large-scale motion. 

For each shaping parameter, there is a checkbox to turn the shaping type on, and a scaling factor to control how much of the shaping type to apply, and below those parameters are tabs containing control and visualization parameters for each shaping type.

Expert users: The Pyro solver is implemented using the [Smoke solver|Node:dop/smokesolver] with additional subsolvers to provide [Gas Sharpening|Node:dop/gaslocalsharpen], [Confinement|Node:dop/gasvortexconfinement], [Shredding|Node:dop/gasshred], [Turbulence|Node:dop/gasturbulence], [Dissipation|Node:dop/gasdissipate], and [Disturbance|Node:dop/gasdisturb].

NOTE:
    You can attach additional velocity field updating DOPs such as [Vortex Equalizer|Node:dop/gasvortexequalizer], [Gas Wind Dop|Node:dop/gaswind] and [Gas Damp Dop|Node:dop/gasdamp] to the Pyro solver's second input ("velocity update").

Dissipation:
    Causes smoke (density) to disappear over time. Low values cause smoke to disappear slowly, high values cause smoke to disappear quickly.
    
    For example, a value of `0.1` means 10% of the smoke will disappear every
    twenty-fourth of a second. A value of `1` will make all smoke disappear
    immediately.
    
    See the [Dissipation tab|#dissipationtab] below.
    
Disturbance:
	Introduces detail of a certain size in the smoke or fire without changing the general motion or shape of the simulation.
	
    See the [Disturbance tab|#disturbancetab] below.
    
Shredding:
    Pushes and pulls the velocity field based on gradient of the heat field to create the the streaks, separation, and "licks" typical of fire.
    
    Very high values tend to give a random, fractal look, while very low values or no shredding gives blobby flames without much character.
    
    Since shredding works on the gradient of the temperature field, lower temperature diffusion results in a more noticeable shred effect. When temperature diffuses more, the gradient becomes less dynamic, resulting in bigger streaks. The higher the grid resolution, the more detailed the gradient becomes.
    
    See the [Shredding tab|#shreddingtab] below.

Sharpening:
    Sharpens features in the velocity field, making smoke more wispy/streaky rather than soft/fluffy. This can be useful when you're not using much shredding, to increase the definition of the features in the flame, but oversharpening can give artifacts in the volume.
    
    See the [Sharpening tab|#sharpeningtab] below.

Turbulence:
    Adds "churning" noise to the velocity field. You should generally use this to add powerful, large-scale/low-frequency noise and rely on shredding for smaller features. This is especially useful when you have a very fast-moving fire and you want to add more character to it.
    
    See the [Turbulence tab|#turbtab] below.

Confinement:
    Boosts swirls (vortices) where they exist, increasing "curliness" in the simulation that would otherwise be lost by the grid resolution. Too high values can make the simulation unstable and blow up. Negative values suppress vortices and smooth out the simulation, but it is usually better to just use a lower resolution grid.

    (The Pyro solver does not use explicit vorticles, it can detect vortex locations directly in from the velocity field.)
    
    You can use a ramp to remap the amount of confinement based on the curl amount, for example to apply more confinement to larger vortices.
    
    See the [Confinement tab|#confinementtab] below.

=== Dissipation === (dissipationtab)

Control field:
    #id: dissipation_control_field
    #contentfrom: control_settings#control_field
    
Control range:
    #id: dissipation_control_range
    #contentfrom: control_settings#control_range
    
Remap dissipation field:
    #id: remap_dissipation_field
    
    The ramp's vertical axis is _amount of dissipation_ and the horizontal axis is the _value in the control field_. For example, the default ramp's shape, which is high on the left and low on the right, makes smoke disappear more quickly where the temperature is low.

=== Disturbance === (disturbancetab)

Field To Disturb:
	The field to apply the disturbance forces to.
	
Cutoff:
    #id: dist_density_cutoff
    #contentfrom: gasdisturb#cutoff

Use Block Size:
    #id: dist_override_block_size
    #contentfrom: gasdisturb#override_block_size

Block Size:
    #id: dist_block_size
    #contentfrom: gasdisturb#block_size
	
Locality:
    #id: dist_locality
    #contentfrom: gasdisturb#locality

==== Control settings ====

[Include:control_settings]

==== Bindings ====

Threshold Field:
    #id: dist_thresh_field
    
    Voxels with values higher than the value of the __Cutoff__ parameter in this field will not be disturbed.

=== Shredding === (shreddingtab)

Temperature threshold:
    At temperatures lower than this value the velocity field will be stretched, at temperatures higher than this the velocity will be squashed. Lower values give more shredding at the edges of the flame, where the temperature is lower.

Threshold width:
    The width of an area around the __Temperature threshold__ where squash and stretch are blended. Lower values give harsher squash and stretch, higher values give smoother streaks.

Squash:
    How much to squash the velocity field when the temperature is above the __Temperature threshold__.

Stretch:
    How much to stretch the velocity field when the temperature is below the __Temperature threshold__.

Clip gradient:
    Clips the calculated temperature gradient to this maximum value. This is useful when a simulation has very high temperatures (for example, an exploding fireball) to keep the high temperatures from translating into extreme, bizarre shredding.

==== Control settings ====

The controls on this tab let you vary the amount of shredding across the container based on the values in a field.

[Include:control_settings]

==== Visualization ====

Visualize shredding:
    #id: shred_visualize_shredding
    
    Turn this on to see a viewport visualization of the forces applied to the velocity field by this effect.

    See the [Scalar Field Visualization|Node:dop/scalarfieldvisualization] and [Vector Field Visualization|Node:dop/vectorfieldvisualization] node help for information on the visualization parameters.

==== Bindings =====

Do not change the values on this tab unless you really know what you're doing.

=== Sharpness ===(sharpnesstab)

Field name:
    The name of the field to sharpen (usually `density`, which represents smoke).
    
Locality:
    The number of voxels the solver samples when sharpening. When sharpening, small disconnected blobs of cloud can be "sharpened away". This parameter determines the largest size of blob that can be sharpened away.
    
    [Image:/nodes/images/sharpen_out.png]

=== Turbulence === (turbtab)

Swirl size:
    Sets the rough size of the swirls, in Houdini units.

Grain:
    A scale on the noise added to the swirls with the __Turbulence__ parameter.

Pulse length:
    The frequency of the noise in time.

Seed:
    Seeds the random number generator for the noise. Change this number to get different random swirls.

Influence threshold:
    Turbulence will not apply to voxels with density lower than this value (you can change the field in the __Bindings__ tab). This is largely a performance optimization: the higher you set this value, the faster the turbulence will tend to run because it can skip more voxels.

Turbulence:
    The amount of noise to add to the swirls.

==== Control settings ====

[Include:control_settings]

==== Visualization ====

Visualize turbulence:
    #id: turb_vis_turbulence
    #contentfrom: #shred_visualize_shredding

==== Bindings ====

Do not change the values on this tab unless you really know what you're doing.

=== Confinement === (confinementtab)

Control field:
    #id: conf_control_field
    
    When enabled, the force exerted is scaled by the content of this field. The default control field is `confinement`, which holds the calculated curl at each voxel (high curl means small vortices).
    
    The `Gas Ramp` field might also be useful as a control field.

[Include:control_settings#control_range]

[Include:control_settings#control_influence]

==== Visualization ====

Visualize confinement:
    #id: conf_visualize_confinement
    #contentfrom: #shred_visualize_shredding

==== Control field ramp ====

[Include:#remap_control_field]

Control field ramp:
    The ramp's vertical axis is _amount of confinement_ and the horizontal axis is the _value in the control field_. For example, the default ramp's shape, which is low on the left side and high on the right side, adds more confinement where the curl is high (that is, where the vortices are small).
    
    [Image:/nodes/images/vortex_size.png]

==== Bindings ====

Do not change the values on this tab unless you really know what you're doing.

[Include:smokesolver#relationships]

== Advanced ==

You should generally not need to change these parameters.

[Include:smokesolver#opencl]

[Include:smokesolver#minimumsubsteps]

[Include:smokesolver#substeps]

[Include:smokesolver#cflcond]

[Include:smokesolver#quantize]

[Include:smokesolver#frames_before_solve]

[Include:smokesolver#adv_externaltab]

[Include:smokesolver#adv_restfieldtab]

[Include:smokesolver#adv_projectiontab]

[Include:smokesolver#adv_advectiontab]

=== Timescale ===

Burn Influence:
    The amount the solver's __Time scale__ parameter affects the burn model. You should leave this set to `0`, since the burn model field calculations don't scale well and can give unexpected results when changed.

Heat Influence:
	The amount the solver's __Time Scale__ parameter affects the flame height. This parameter compensates for the natural flame loss caused when you change the solver's __Time Scale__. Setting this to `1` will correctly scale the flames as __Time Scale__ changes, but the flames will be smaller.

[Include:smokesolver#adv_collisionstab]

[Include:smokesolver#adv_cleartab]

@outputs

[Include:standard_data_outputs]

@locals

[Include:standard_data_locals]

[Include:standard_locals]

@related

- [/pyro/pyro]
- [Node:dop/smokeobject]
- [Node:sop/fluidsource]
- [Node:dop/smokesolver]



