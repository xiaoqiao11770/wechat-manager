#type: node
#context: dop
#internal: sourceapply
#icon: DOP/sourceapply

= Source Apply =

"""Turns objects into a source for a fluid sim."""

The Source Apply DOP turns DOPs and external objects into sources for the
attached fluid sim.  It also includes numerous post-processing options to
manipulate how the object gets turned into a fluid source.

There are two ways to use this.  First, it can take a second input.  This is
often a Static Object which brings in the external object.  The second approach
is to specify the object in the Non-Wired Sources parameters.

In all cases, the same processing procedure is used.  First the object is
turned into a Signed Distance Field (SDF).  Then the SDF is converted to a 0..1
fog volume storing how much to source each voxel.  This conversion is first
done with a lookup from the distance to surface, using the __Feathering__ tab.
Then optional noise can be added.  Finally, point attributes can be multiplied
into the value to further mask the emission.

@parameters

    Relationship:
	Despite the name, the Source Apply can also apply other field affects
	such as pump or sink effects.

    Emission Amount:
	An overall scale to the source effect.

    == Source ==

	The source apply will create a new DOP object to store the computed
	emission information.  The __Source__ tab controls the creation of this
	object along with the where the SDF comes from.

	[Include:standard_objcreation]

	Source Object List:
	    This is a list of DOP objects in the same simulation that should be
	    used as sources.
	SOP Path, OBJ Path:
	    Specify geometry to use as the original source.

	    If this geometry is animating, the __Use Deforming Geometry__ must be
	    set in the __SDF Generation__ tab.
	Use Object Transform:
	    The transform of the object containing the chosen SOP is
	    applied to the geometry. This is required if there is scaling
	    applied to the source geometry at the object level. 
	Field Reference:
	    To compute the proper grid scaling for the source grids, a path to
	    a fluid object is needed.  The default python expression will find
	    this by searching the first input.

    == Guides ==
	
	Display Geometry:
	    The source geometry can be hidden by turning this off.

	Density:
	    The final density field controlling how much emission occurs in
	    each voxel.

	SDF:
	    The signed distance field from which the density is computed.
	    Displaying this is useful for determining how the SDF Generation
	    process is working.

    == SDF Generation ==
	This stage takes the source geometry and turns it into an SDF.

	Copy SDF Volume from Source Object:
	    If the source is something like a Static Object, it will already
	    have its own SDF generation parameters.  Thus its SDF can be
	    retrieved directly.

	    If the source is a SOP Path, this controls whether the signed
	    distance field is built in the SOP's space or in the fluid space.
	    In particular, if one wants to override the number of divisions or
	    use the Proxy Volume, Copy SDF must be set.

	Use Deforming Geometry:
	    If the source is animated, then the SDF has to be rebuilt every
	    frame.

	Build From Particles:
	    Instead of trying to build an SDF, directly write to the
	    fog field from particle points.

	    NOTE:
            In this mode feathering is disabled.

	== Build SDF ==
	    [Include:standard_rbdvolume_parms]

	== Particle to Field ==

	    Attribute:
		The particle attribute to accumulate into the source
		field.  If not enabled, each particle will be treated
		as having an attribute value of 1.0

	    Scale by Voxel Volume:
		Divide the particle contribution by the voxel volume,
		thereby normalizing the total added independent of the
		resolution of the field.  Because volumes are
		often small, you likely need to reduce emission amount
		significantly vs not using this option.

    == Feathering ==

	After the SDF field is built, it is next converted into the Density
	field.  Feathering allows you to control the fall-off with distance to
	surface.

	NOTE:
        Feathering is disabled if __Build From Particles__ is enabled.

	Treat SDF as Fog:

	    Depending on the Source object, the SDF may not be a proper signed
	    distance field, but already a 0-1 fog volume.  This occurs if
	    sourcing from another smoke sim or from a SOP with a fog volume.
	    In these cases the SDF Generation mode should be set to __Volume
	    Sample__ and __Treat SDF as Fog__ turned on to avoid the feathering look
	    up pass.

	Hollow Interior:
	    By default, any voxels inside the volume are marked as full
	    emitters.  However, if you want a emit-from-surface effect, you can
	    add a fall off curve for the interior as well.

	Distance, Feather:
	    The distance is the length of the fall off curve.  The feather
	    curve is how the density will fall off with distance to the
	    surface.  The left is the surface, the right the farthest from the
	    surface.

    == Noise ==
	Add Noise:
	    Noise will multiply the source field with a noise field.  This
	    will turn the solid object into a Swiss cheese like object, often
	    resulting in nicer chaotic behavior.

	Amount:
	    How much to mix the result of this calculation with the
	    original source.  A value of 0 is the same as not adding
	    noise, 0.5 will blend 50% of each, and 1 will use the remapped
	    noise value as the final source value.

	Frequency-Flow Roughness:
	    These control an anti-aliased flow noise VOP.

	Amplitude:
	    How harsh the transition from 0 to 1 should be.  A high
	    contrast results in a sharp boundary between the kept and
	    discarded regions, a low contrast results in a smoother drop
	    off.

	Remap Noise:
	    Remaps the source value.  This allows remapping the fall-off
	    of the transition from sourced to non-sourced voxels.
	    Alternately, by building a hill shaped ramp, one can extract
	    a contour of the source shape rather than a solid version.

    == Attribute ==
	
	Multiply by Attribute:
	    Finally, the computed density can be multiplied by a point
	    attribute.  The closest points are used for the mapping
	    computation.  Combined with the Paint SOP, this allows
	    the easy painting of emission regions.
	Attribute:
	    Name of the float point attribute to use for scaling.
	Max Extrapolation:
	    Voxels farther than this from the closest point will be zeroed,
	    rather than using the closest point value.  This can be important
	    for efficiency for large number of points or sparse volumes.

    == Physical ==

	Temperature:
	    The effective temperature of this object for sourcing.

	Override Velocity:
	    Sets the source to an explicit velocity.

    NOTE:
        The velocity value should be used if the __Velocity Type__ on the __Sources__ tab of the [Fluid Solver|Node:dop/fluidsolver] is set to use __Point Velocity__.
    
        If there isn't a `v` attribute present, it is computed by differing frames. If `v` is present, it overrides the previous frame. You can add a `v` attribute to any source type, and it will use the `v` attribute rather than the point deltas.

@outputs
    First:
	The fluid object to add a source to.
    Second:
	An optional DOP object to use as a source.

@locals
    [Include:standard_locals]
