#type: node
#context: dop
#internal: popobject
#icon: DOP/popobject

= POP Object =

"""Converts a regular particle system into a dynamic object capable of interacting correctly with other objects in the DOP environment."""

The result is ready for use by the [POP Solver|Node:dop/popsolver].

@parameters
    Creation Frame Specifies Simulation Frame:
        Determines if the creation frame refers to global Houdini frames (`$F`) or to simulation specific frames (`$SF`).  

	The latter is affected by the offset time and scale time at the DOP network level.
    Creation Frame:
        The frame number on which the object will be created. The object is created only when the current frame number is equal to this parameter value. This means the DOP Network must evaluate a timestep at the specified frame, or the object will not be created. 

	For example, if this value is set to 3.5, the __Timestep__ parameter of the DOP Network must be changed to `1/(2*$FPS)` to ensure the DOP Network has a timestep at frame 3.5.
    Object Name:
        The name for the created object.  This is the name that shows up in the details view and is used to reference this particular object externally.  

	NOTE:
		While it is possible to have many objects with the same name, this complicates writing references, so it is recommended to use something like `$OBJID` in the name.
    Initial Geometry:
        #channels: /initial_geo

        The path to a SOP which will be used as the initial state for the POP Object. 

	If the specified SOP contains geometry other than particles, the POP Solver can be configured to automatically convert these other primitives into particle systems.
    Use Object Transform:
        Specifies whether or not the transform of the object containing the __Initial Geometry__ should be embedded in the Geometry data.

    == Guides ==

	Instance Guides:
	    Enables the display of any `instancepath` attribute as a guide geometry.

    == Collisions ==

        Tolerance:
            #channels: /tol

            When colliding with the surface of another object, this tolerance value is used by the ray intersection code. Any time a point gets within this distance of the surface it is
            counted as a collision.
        Volume Offset:
            #channels: /volumeoffset

            When colliding points against a Volume representation, the surface of the Volume is effectively pushed out by this amount. 

	    Like the __Tolerance__ value above, it causes a collision to be generated if a point comes within this distance of the real Volume.

    == Physical ==

	[Include:standard_physparms]

@outputs
    First:
        The simulation object created by this node is sent through the single output.
@locals
    [Include:standard_locals]


@related
    - [Node:dop/squishyobject]
    - [Node:dop/popsolver]

